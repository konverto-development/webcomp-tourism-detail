{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/core-js/internals/to-string-tag-support.js","webpack:///./node_modules/core-js/internals/function-bind-context.js","webpack:///./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack:///./src/assets/img/gastro-placeholder.svg","webpack:///./src/components/ImageDetail.vue?ccaa","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/core-js/internals/ie8-dom-define.js","webpack:///./node_modules/core-js/internals/native-url.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./src/assets/img/ic_phone.svg","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./src/assets/img/ic_calendar.svg","webpack:///./src/assets/img/ic_altitudehighestpoint.svg","webpack:///./node_modules/core-js/internals/an-instance.js","webpack:///./node_modules/core-js/internals/html.js","webpack:///./node_modules/core-js/internals/a-function.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/core-js/internals/require-object-coercible.js","webpack:///./src/App.vue?f6c0","webpack:///./node_modules/core-js/internals/to-absolute-index.js","webpack:///./node_modules/core-js/internals/export.js","webpack:///./node_modules/core-js/internals/object-get-own-property-names.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./src/components/Paging.vue?eacf","webpack:///./src/components/ImageDetail.vue?8e82","webpack:///./node_modules/core-js/internals/iterator-close.js","webpack:///./node_modules/core-js/modules/web.url.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/core-js/internals/get-iterator-method.js","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesShadow.js","webpack:///./node_modules/core-js/internals/object-define-properties.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/core-js/internals/a-possible-prototype.js","webpack:///./node_modules/core-js/modules/es.string.iterator.js","webpack:///./node_modules/core-js/internals/iterators.js","webpack:///./node_modules/core-js/internals/path.js","webpack:///./src/assets/img/ic_altitudelowestpoint.svg","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/core-js/internals/indexed-object.js","webpack:///./node_modules/core-js/internals/add-to-unscopables.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/core-js/internals/native-symbol.js","webpack:///./src/components/ImageDetail.vue?03e2","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///./src/components/ItemsList.vue?44bf","webpack:///./src/assets/img/ic_difficulty.svg","webpack:///./node_modules/core-js/internals/array-includes.js","webpack:///./node_modules/core-js/internals/array-from.js","webpack:///./node_modules/core-js/internals/to-length.js","webpack:///./node_modules/core-js/internals/has.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./node_modules/core-js/internals/shared.js","webpack:///./node_modules/core-js/internals/own-keys.js","webpack:///./src/components/Paging.vue?755b","webpack:///./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack:///./node_modules/@vue/web-component-wrapper/dist/vue-wc-wrapper.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./src/App.vue?94ca","webpack:///./src/components/ItemsList.vue?6fee","webpack:///./src/api/base.ts","webpack:///./src/api/apis/accommodation-api.ts","webpack:///./src/api/apis/activity-api.ts","webpack:///./src/api/apis/article-api.ts","webpack:///./src/api/apis/common-api.ts","webpack:///./src/api/apis/event-api.ts","webpack:///./src/api/apis/gastronomy-api.ts","webpack:///./src/api/apis/json-ldapi.ts","webpack:///./src/api/apis/location-api.ts","webpack:///./src/api/apis/login-api.ts","webpack:///./src/api/apis/odhactivity-poi-api.ts","webpack:///./src/api/apis/odhtag-api.ts","webpack:///./src/api/apis/poi-api.ts","webpack:///./src/api/apis/venue-api.ts","webpack:///./src/api/apis/weather-api.ts","webpack:///./src/api/apis/webcam-info-api.ts","webpack:///./src/api/api.ts","webpack:///./src/api/configuration.ts","webpack:///./src/api/index.ts","webpack:///./src/components/Paging.vue?0b34","webpack:///src/components/Paging.vue","webpack:///./src/components/Paging.vue?9de2","webpack:///./src/components/Paging.vue","webpack:///src/components/ItemsList.vue","webpack:///./src/components/ItemsList.vue?4430","webpack:///./src/components/ItemsList.vue","webpack:///./src/components/ItemDetail.vue?b877","webpack:///./src/components/ImageDetail.vue?a3d8","webpack:///src/components/ImageDetail.vue","webpack:///./src/components/ImageDetail.vue?133e","webpack:///./src/components/ImageDetail.vue","webpack:///src/components/ItemDetail.vue","webpack:///./src/components/ItemDetail.vue?4174","webpack:///./src/components/ItemDetail.vue","webpack:///./node_modules/vue-i18n/dist/vue-i18n.esm.js","webpack:///./src/App.vue","webpack:///./src/App.vue?d95d","webpack:///./src/App.vue?f6de","webpack:///./node_modules/@vue/cli-service/lib/commands/build/entry-wc.js","webpack:///./node_modules/core-js/internals/create-property-descriptor.js","webpack:///./src/App.vue?a19b","webpack:///./node_modules/core-js/internals/string-punycode-to-ascii.js","webpack:///./node_modules/core-js/internals/object-assign.js","webpack:///./node_modules/core-js/internals/string-multibyte.js","webpack:///./node_modules/core-js/internals/internal-state.js","webpack:///./src/components/ItemDetail.vue?6667","webpack:///./node_modules/core-js/internals/redefine.js","webpack:///./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack:///./node_modules/core-js/internals/enum-bug-keys.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/core-js/internals/to-object.js","webpack:///./src/assets/img/ic_distanceduration.svg","webpack:///./node_modules/core-js/internals/object-create.js","webpack:///./node_modules/core-js/internals/define-iterator.js","webpack:///./node_modules/core-js/internals/native-weak-map.js","webpack:///./src/components/Paging.vue?18ec","webpack:///./node_modules/core-js/internals/an-object.js","webpack:///./node_modules/core-js/internals/descriptors.js","webpack:///./node_modules/axios/lib/core/buildFullPath.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/core-js/internals/is-object.js","webpack:///./node_modules/@soda/get-current-script/index.js","webpack:///./node_modules/core-js/internals/inspect-source.js","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///external \"Vue\"","webpack:///./src/assets/img/ic_map.svg","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/core-js/internals/uid.js","webpack:///./node_modules/core-js/internals/create-non-enumerable-property.js","webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/core-js/internals/is-forced.js","webpack:///./node_modules/core-js/modules/web.url-search-params.js","webpack:///./node_modules/core-js/internals/get-iterator.js","webpack:///./node_modules/core-js/internals/call-with-safe-iteration-closing.js","webpack:///./node_modules/core-js/internals/object-define-property.js","webpack:///./node_modules/core-js/internals/create-iterator-constructor.js","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./src/assets/img/ic_external-link.svg","webpack:///./node_modules/core-js/internals/to-integer.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./src/assets/img/arrow_right.svg","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./src/components/ItemsList.vue?aed6","webpack:///./node_modules/core-js/internals/iterators-core.js","webpack:///./src/assets/img/Activity-Placeholder.svg","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/core-js/internals/well-known-symbol.js","webpack:///./src/assets/img/arrow_left.svg","webpack:///./src/components/ItemDetail.vue?7bc0","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/core-js/internals/to-primitive.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/core-js/internals/is-pure.js","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/core-js/internals/classof-raw.js","webpack:///./node_modules/core-js/internals/shared-store.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/internals/object-keys-internal.js","webpack:///./node_modules/core-js/internals/document-create-element.js","webpack:///./node_modules/core-js/internals/set-global.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./src/assets/img/ic_altitudedifference.svg","webpack:///./node_modules/core-js/internals/hidden-keys.js","webpack:///./node_modules/core-js/internals/fails.js","webpack:///./node_modules/core-js/internals/get-built-in.js","webpack:///./node_modules/core-js/internals/object-property-is-enumerable.js","webpack:///./node_modules/core-js/internals/object-set-prototype-of.js","webpack:///./node_modules/core-js/internals/set-to-string-tag.js","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./src/assets/img/ic_distancelength.svg","webpack:///./node_modules/core-js/internals/global.js","webpack:///./node_modules/core-js/modules/web.dom-collections.iterator.js","webpack:///./node_modules/core-js/internals/object-keys.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/core-js/internals/object-get-prototype-of.js","webpack:///./node_modules/core-js/internals/correct-prototype-getter.js","webpack:///./node_modules/core-js/modules/es.array.iterator.js","webpack:///./node_modules/core-js/internals/redefine-all.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/core-js/internals/copy-constructor-properties.js","webpack:///./node_modules/core-js/internals/is-array-iterator-method.js","webpack:///./src/components/ItemsList.vue?c440","webpack:///./src/App.vue?8305","webpack:///./node_modules/core-js/internals/classof.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/core-js/internals/shared-key.js","webpack:///./src/assets/img/loading.gif","webpack:///./src/assets/img/POI-Placeholder.svg","webpack:///./src/components/ItemDetail.vue?835f","webpack:///./node_modules/core-js/internals/to-indexed-object.js","webpack:///./node_modules/core-js/internals/dom-iterables.js","webpack:///./node_modules/core-js/internals/use-symbol-as-uid.js"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrDA,yBAAyB,mBAAO,CAAC,MAAmC;AACpE,kBAAkB,mBAAO,CAAC,MAA4B;;AAEtD;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA,+CAAa;;AAEb,YAAY,mBAAO,CAAC,MAAS;AAC7B,0BAA0B,mBAAO,CAAC,MAA+B;;AAEjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,MAAgB;AACtC,GAAG;AACH;AACA,cAAc,mBAAO,CAAC,MAAiB;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,OAAO,YAAY;AACnB;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;;;;;;;;;;ACjGa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA,4CAA4C,qBAAqB;AACjE;;AAEA;AACA,KAAK;AACL,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,qBAAqB;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;;AAE9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA,C;;;;;;;;AC7FA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;;;;;;;;ACAA,eAAe,mBAAO,CAAC,MAAwB;;AAE/C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPa;AACb;AACA,mBAAO,CAAC,MAA+B;AACvC,QAAQ,mBAAO,CAAC,MAAqB;AACrC,kBAAkB,mBAAO,CAAC,MAA0B;AACpD,qBAAqB,mBAAO,CAAC,MAAyB;AACtD,aAAa,mBAAO,CAAC,MAAqB;AAC1C,uBAAuB,mBAAO,CAAC,MAAuC;AACtE,eAAe,mBAAO,CAAC,MAAuB;AAC9C,iBAAiB,mBAAO,CAAC,MAA0B;AACnD,UAAU,mBAAO,CAAC,MAAkB;AACpC,aAAa,mBAAO,CAAC,MAA4B;AACjD,gBAAgB,mBAAO,CAAC,MAAyB;AACjD,aAAa,mBAAO,CAAC,MAA+B;AACpD,cAAc,mBAAO,CAAC,MAAuC;AAC7D,qBAAqB,mBAAO,CAAC,MAAgC;AAC7D,4BAA4B,mBAAO,CAAC,MAAkC;AACtE,0BAA0B,mBAAO,CAAC,MAA6B;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,WAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wCAAwC;AACxC;AACA,CAAC;AACD,oCAAoC;AACpC,oBAAoB,QAAQ;AAC5B,CAAC;AACD,wCAAwC;AACxC,oBAAoB;AACpB,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,yBAAyB,6BAA6B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,CAAC,GAAG,mBAAmB;;AAEvB;AACA;AACA;AACA;AACA,CAAC,GAAG,mBAAmB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA,GAAG,4DAA4D;AAC/D;AACA,CAAC;;;;;;;;;AC9+BY;;AAEb,mBAAmB,mBAAO,CAAC,MAAgB;;AAE3C;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;;;;;;;;ACjBa;;AAEb;AACA;AACA;;;;;;;;;ACJa;;AAEb,YAAY,mBAAO,CAAC,MAAY;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACrEA,cAAc,mBAAO,CAAC,MAAsB;AAC5C,gBAAgB,mBAAO,CAAC,MAAwB;AAChD,sBAAsB,mBAAO,CAAC,MAAgC;;AAE9D;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACe;AACf;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D,KAAK;AACL;AACA;AACA;AACA;AACA;;;AC1ByC;;AAE1B;AACf,eAAe,YAAY;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrEA,kBAAkB,mBAAO,CAAC,MAA0B;AACpD,2BAA2B,mBAAO,CAAC,MAAqC;AACxE,eAAe,mBAAO,CAAC,MAAwB;AAC/C,iBAAiB,mBAAO,CAAC,MAA0B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfa;;AAEb;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzCa;;AAEb,YAAY,mBAAO,CAAC,MAAY;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;ACnEA,eAAe,mBAAO,CAAC,MAAwB;;AAE/C;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;ACNa;AACb,aAAa,mBAAO,CAAC,MAA+B;AACpD,0BAA0B,mBAAO,CAAC,MAA6B;AAC/D,qBAAqB,mBAAO,CAAC,MAA8B;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,UAAU;AACV,CAAC;;;;;;;;AC5BD;;;;;;;;ACAA,aAAa,mBAAO,CAAC,MAAqB;;AAE1C;;;;;;;;ACFA,iBAAiB,qBAAuB,6C;;;;;;;ACAxC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,0BAA0B,mBAAO,CAAC,MAAM;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;;;;;;;ACjCA,YAAY,mBAAO,CAAC,MAAoB;AACxC,cAAc,mBAAO,CAAC,MAA0B;;AAEhD;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;;;;;;;;ACZD,sBAAsB,mBAAO,CAAC,MAAgC;AAC9D,aAAa,mBAAO,CAAC,MAA4B;AACjD,2BAA2B,mBAAO,CAAC,MAAqC;;AAExE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;;;ACnBa;;AAEb,kBAAkB,mBAAO,CAAC,MAAe;;AAEzC;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA,YAAY,mBAAO,CAAC,MAAoB;;AAExC;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACND;;AAEA;AACA,cAAc,mBAAO,CAAC,MAA8b;AACpd,4CAA4C,QAAS;AACrD;AACA;AACA,UAAU,mBAAO,CAAC,MAA6D;AAC/E;AACA;AACA,E;;;;;;;;ACVa;;AAEb,YAAY,mBAAO,CAAC,MAAU;;AAE9B;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,2BAA2B;AAC3B,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;;;;;;;ACtFA;;AAEA;AACA,cAAc,mBAAO,CAAC,MAA4b;AACld,4CAA4C,QAAS;AACrD;AACA;AACA,UAAU,mBAAO,CAAC,MAA6D;AAC/E;AACA;AACA,E;;;;;;;ACVA,iBAAiB,qBAAuB,oC;;;;;;;ACAxC,sBAAsB,mBAAO,CAAC,MAAgC;AAC9D,eAAe,mBAAO,CAAC,MAAwB;AAC/C,sBAAsB,mBAAO,CAAC,MAAgC;;AAE9D,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,YAAY,eAAe;AAChC;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/Ba;AACb,WAAW,mBAAO,CAAC,MAAoC;AACvD,eAAe,mBAAO,CAAC,MAAwB;AAC/C,mCAAmC,mBAAO,CAAC,MAA+C;AAC1F,4BAA4B,mBAAO,CAAC,MAAuC;AAC3E,eAAe,mBAAO,CAAC,MAAwB;AAC/C,qBAAqB,mBAAO,CAAC,MAA8B;AAC3D,wBAAwB,mBAAO,CAAC,MAAkC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mCAAmC;AAC7C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,UAAU,eAAe;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxCA,gBAAgB,mBAAO,CAAC,MAAyB;;AAEjD;;AAEA;AACA;AACA;AACA,uEAAuE;AACvE;;;;;;;;ACRA,uBAAuB;;AAEvB;AACA;AACA;;;;;;;;;ACJa;;AAEb,YAAY,mBAAO,CAAC,MAAY;AAChC,oBAAoB,mBAAO,CAAC,MAAiB;AAC7C,eAAe,mBAAO,CAAC,MAAoB;AAC3C,eAAe,mBAAO,CAAC,MAAa;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B,uCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;AC9Ea;AACb,oCAAoC,mBAAO,CAAC,MAAiD;AAC7F,eAAe,mBAAO,CAAC,MAAwB;AAC/C,eAAe,mBAAO,CAAC,MAAwB;AAC/C,eAAe,mBAAO,CAAC,MAAwB;AAC/C,gBAAgB,mBAAO,CAAC,MAAyB;AACjD,6BAA6B,mBAAO,CAAC,MAAuC;AAC5E,yBAAyB,mBAAO,CAAC,MAAmC;AACpE,iBAAiB,mBAAO,CAAC,MAAmC;;AAE5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,oBAAoB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;;;;;;;ACtID,cAAc,mBAAO,CAAC,MAAsB;AAC5C,YAAY,mBAAO,CAAC,MAA2B;;AAE/C;AACA,qEAAqE;AACrE,CAAC;AACD;AACA;AACA;AACA,CAAC;;;;;;;;ACTD,iBAAiB,mBAAO,CAAC,MAA2B;AACpD,gCAAgC,mBAAO,CAAC,MAA4C;AACpF,kCAAkC,mBAAO,CAAC,MAA8C;AACxF,eAAe,mBAAO,CAAC,MAAwB;;AAE/C;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;;AAEA;AACA,cAAc,mBAAO,CAAC,MAAyb;AAC/c,4CAA4C,QAAS;AACrD;AACA;AACA,UAAU,mBAAO,CAAC,MAA6D;AAC/E;AACA;AACA,E;;;;;;;;;;;;ACVA;;AAEA;AACA;AACA,MAAM,gDAAW;AACjB,2BAA2B,mBAAO,CAAC,MAA0B;AAC7D;;AAEA;AACA;AACA,wDAAwD,wBAAwB;AAChF;AACA;;AAEA;AACA;AACA,IAAI,qBAAuB;AAC3B;AACA;;AAEA;AACe,sDAAI;;;;;;;ACrBnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA,8CAA8C,OAAO,KAAK;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA,KAAK,IAAI;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,eAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;;AAEP;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEe,uDAAI,EAAC;;;;;;;;;AC1QpB;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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A;AACA;AACA,KAFA,MAEA;AACA;AACA;AACA,GAhLA;;AAiLA;AACA;AACA;AACA;;AAHA,GAjLA;AAsLA;AACA;AACA,yCACA,6BADA,CACA,cADA,EAEA,IAFA,CAEA;AACA;AACA,OAJA;AAKA,KAPA;;AAQA;AACA,yCACA,mCADA,GAEA,IAFA,CAEA;AACA;AACA,OAJA;AAKA,KAdA;;AAeA;AACA;AACA;AACA,OAFA;AAGA,KAnBA;;AAoBA;AACA,qCACA,yBADA,CACA,cADA,EAEA,IAFA,CAEA;AACA;AACA,OAJA;AAKA,KA1BA;;AA2BA;AACA;AACA,KA7BA;;AA8BA;AACA;AACA;AACA;AACA,KAlCA;;AAmCA;AACA;AACA,KArCA;;AAsCA;AACA;;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA,KA/CA;;AAgDA;AACA;;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA;;AAzDA;AAtLA,G;;ACpQoU,CAAgB,oHAAG,EAAC,C;;ACAnP;AACvC;AACL;AACzD,SAAS,uBAAY;;AAErB,eAAe,mBAAO,CAAC,MAA4E;AACnG;;AAEA;;AAEA;AAC0F;AAC1F,IAAI,oBAAS,GAAG,kBAAU;AAC1B,EAAE,6CAAM;AACR,EAAE,0DAAM;AACR,EAAE,mEAAe;AACjB;AACA,EAAE,uBAAY;AACd;AACA;AACA;AACA;;AAEe,mEAAS,Q;;ACvBxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,SAAS,sBAAS;AAClB;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,qBAAQ;AACZ;AACA;AACA,SAAS,qBAAQ;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,2BAAc;AAClB;AACA,SAAS,2BAAc;AACvB;;AAEA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,wBAAwB;AACxB,0BAA0B;AAC1B,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,WAAW;AACX,gBAAgB,KAAqC,EAAE,EAE1C;AACb;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,gBAAgB,KAAqC,EAAE,EAE1C;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,YAAY,KAAqC,EAAE,EAE1C;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,YAAY,KAAqC,EAAE,EAE1C;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,KAAqC,EAAE,EAE1C;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;AACA,GAAG;;AAEH;AACA,MAAM,KAAmD,EAAE,EAExD;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;AACA,wCAAwC;AACxC,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAU,KAAqC,EAAE,EAE1C;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC;AACnC,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B;;AAE3B;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA,0EAA0E;;AAE1E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM,KAA0E,EAAE,EAG/E;AACH;;AAEA;;AAEA;AACA;AACA,MAAM,KAAoD,EAAE,EAGzD;;AAEH;AACA;AACA,sBAAsB,6CAA6C;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,qBAAqB,4BAA4B;AACjD;;AAEA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C,KAAK;AACL;AACA,mCAAmC;AACnC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,uBAAuB,4BAA4B;;AAEnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,cAAc,KAAqC,EAAE,EAE1C;AACX;AACA;AACA;AACA,YAAY,KAAqC,EAAE,EAE1C;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;AAIA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC,EAAE;AAC7D,2BAA2B,gCAAgC,EAAE;AAC7D,gCAAgC,qEAAqE;AACrG;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,OAAO;AAC3B,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA,2BAA2B;AAC3B,2DAA2D;AAC3D;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,0BAA0B,MAAM,qBAAqB,YAAY,qBAAqB,mBAAmB,qBAAqB,iBAAiB,qBAAqB,oBAAoB,qBAAqB,UAAU,qBAAqB,kBAAkB,qBAAqB,0BAA0B,qBAAqB,WAAW,qBAAqB,aAAa,qBAAqB,yBAAyB,qBAAqB,sBAAsB,qBAAqB,4BAA4B,qBAAqB,qBAAqB,qBAAqB,mBAAmB,qBAAqB;;AAEhmB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG,GAAG,aAAa;AACnB;;AAEA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,GAAG,GAAG,kBAAkB;AACxB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;;AAEzC,+CAA+C;AAC/C,sDAAsD;AACtD,oDAAoD;AACpD,uDAAuD;;AAEvD,6CAA6C;AAC7C;AACA;AACA;;AAEA,qDAAqD;AACrD;AACA;AACA;AACA;;AAEA,6DAA6D;AAC7D,qEAAqE,yCAAyC;;AAE9G,8CAA8C;AAC9C,qDAAqD,yBAAyB;;AAE9E,gDAAgD;AAChD,yDAAyD,6BAA6B;;AAEtF,4DAA4D;AAC5D,kEAAkE,sCAAsC;;AAExG,yDAAyD;AACzD,+DAA+D,mCAAmC;;AAElG,+DAA+D;AAC/D,uEAAuE,2CAA2C;;AAElH,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,sDAAsD;AACtD,6DAA6D,iCAAiC;;AAE9F,2DAA2D;AAC3D,yEAAyE;AACzE,qEAAqE;;AAErE;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,QAAQ,KAA4E,EAAE,EAKjF;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAoH,EAAE,EAEzH;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,UAAU,KAAoH,EAAE,EAEzH;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU,KAAqC,EAAE,EAE1C;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,KAAwF,EAAE,EAE7F;AACP;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,qBAAqB;AACpD,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB,sBAAS,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA,6BAA6B,YAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAgH,EAAE,EAErH;AACL;AACA,sBAAsB;AACtB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,KAA4E,EAAE,EAEjF;AACL,sBAAsB;AACtB;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAAmD,iCAAiC;AACpF;;AAEA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8FAA8F;AAC9F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAoB;AACjD;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,KAA+E,EAAE,EAGpF;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,KAAgH,EAAE,EAErH;AACL;AACA,sBAAsB;AACtB;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0FAA0F;AAC1F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAoB;AACjD;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,iEAAiE;AACjE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,KAAqC,EAAE,EAE1C;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;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AAC1F;AACA;AACA,cAAc,QAAS,QAAQ,8CAA8C,mCAAmC,kCAAkC;AAClJ;AACA;;;;;;;;;ACNa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,oBAAoB;AACpB,mCAAmC;AACnC,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,OAAO;AACP,uCAAuC;AACvC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mCAAmC;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC,mCAAmC;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;;;;;;;;;ACvKa;AACb,kBAAkB,mBAAO,CAAC,MAA0B;AACpD,YAAY,mBAAO,CAAC,MAAoB;AACxC,iBAAiB,mBAAO,CAAC,MAA0B;AACnD,kCAAkC,mBAAO,CAAC,MAA8C;AACxF,iCAAiC,mBAAO,CAAC,MAA4C;AACrF,eAAe,mBAAO,CAAC,MAAwB;AAC/C,oBAAoB,mBAAO,CAAC,MAA6B;;AAEzD;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,OAAO,gCAAgC;AAC1E;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG,IAAI,OAAO;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,cAAc,EAAE;AAC7D,wBAAwB,+CAA+C;AACvE,CAAC,qCAAqC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;ACnDD,gBAAgB,mBAAO,CAAC,MAAyB;AACjD,6BAA6B,mBAAO,CAAC,MAAuC;;AAE5E,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA,sBAAsB,mBAAO,CAAC,MAA8B;AAC5D,aAAa,mBAAO,CAAC,MAAqB;AAC1C,eAAe,mBAAO,CAAC,MAAwB;AAC/C,kCAAkC,mBAAO,CAAC,MAA6C;AACvF,gBAAgB,mBAAO,CAAC,MAAkB;AAC1C,aAAa,mBAAO,CAAC,MAA2B;AAChD,gBAAgB,mBAAO,CAAC,MAAyB;AACjD,iBAAiB,mBAAO,CAAC,MAA0B;;AAEnD;AACA;;AAEA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;;;;;;;;ACAA,aAAa,mBAAO,CAAC,MAAqB;AAC1C,kCAAkC,mBAAO,CAAC,MAA6C;AACvF,UAAU,mBAAO,CAAC,MAAkB;AACpC,gBAAgB,mBAAO,CAAC,MAAyB;AACjD,oBAAoB,mBAAO,CAAC,MAA6B;AACzD,0BAA0B,mBAAO,CAAC,MAA6B;;AAE/D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;;;;;;;;ACvCD;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTa;;AAEb;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;AClBa;;AAEb,YAAY,mBAAO,CAAC,MAAY;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C;AAC1C,SAAS;;AAET;AACA,4DAA4D,wBAAwB;AACpF;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B,aAAa,EAAE;AAC9C;AACA;AACA,KAAK;AACL;;;;;;;;ACpDA,6BAA6B,mBAAO,CAAC,MAAuC;;AAE5E;AACA;AACA;AACA;AACA;;;;;;;;ACNA,iBAAiB,qBAAuB,0C;;;;;;;ACAxC,eAAe,mBAAO,CAAC,MAAwB;AAC/C,uBAAuB,mBAAO,CAAC,MAAuC;AACtE,kBAAkB,mBAAO,CAAC,MAA4B;AACtD,iBAAiB,mBAAO,CAAC,MAA0B;AACnD,WAAW,mBAAO,CAAC,MAAmB;AACtC,4BAA4B,mBAAO,CAAC,MAAsC;AAC1E,gBAAgB,mBAAO,CAAC,MAAyB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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;AACA;;;;;;;;ACPA,qB;;;;;;;ACAA,iBAAiB,qBAAuB,6B;;;;;;;;ACA3B;;AAEb,aAAa,mBAAO,CAAC,MAAU;;AAE/B;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxDA;AACA;;AAEA;AACA;AACA;;;;;;;;ACLA,kBAAkB,mBAAO,CAAC,MAA0B;AACpD,2BAA2B,mBAAO,CAAC,MAAqC;AACxE,+BAA+B,mBAAO,CAAC,MAAyC;;AAEhF;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;ACTa;AACb,kBAAkB,mBAAO,CAAC,MAAgB;AAC1C,oBAAoB,mBAAO,CAAC,MAAyB;;AAErD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACtFA,YAAY,mBAAO,CAAC,MAAoB;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;ACpBa;AACb;AACA,mBAAO,CAAC,MAA8B;AACtC,QAAQ,mBAAO,CAAC,MAAqB;AACrC,iBAAiB,mBAAO,CAAC,MAA2B;AACpD,qBAAqB,mBAAO,CAAC,MAAyB;AACtD,eAAe,mBAAO,CAAC,MAAuB;AAC9C,kBAAkB,mBAAO,CAAC,MAA2B;AACrD,qBAAqB,mBAAO,CAAC,MAAgC;AAC7D,gCAAgC,mBAAO,CAAC,MAA0C;AAClF,0BAA0B,mBAAO,CAAC,MAA6B;AAC/D,iBAAiB,mBAAO,CAAC,MAA0B;AACnD,aAAa,mBAAO,CAAC,MAAkB;AACvC,WAAW,mBAAO,CAAC,MAAoC;AACvD,cAAc,mBAAO,CAAC,MAAsB;AAC5C,eAAe,mBAAO,CAAC,MAAwB;AAC/C,eAAe,mBAAO,CAAC,MAAwB;AAC/C,aAAa,mBAAO,CAAC,MAA4B;AACjD,+BAA+B,mBAAO,CAAC,MAAyC;AAChF,kBAAkB,mBAAO,CAAC,MAA2B;AACrD,wBAAwB,mBAAO,CAAC,MAAkC;AAClE,sBAAsB,mBAAO,CAAC,MAAgC;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+EAA+E,EAAE,EAAE,cAAc;AACjG;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kDAAkD;AAC1E;AACA,OAAO,6DAA6D,kCAAkC;AACtG,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oCAAoC;AAC5D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,wBAAwB;AAClC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,wBAAwB;AAClC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,wBAAwB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uBAAuB;AACrD;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC,GAAG,mBAAmB;;AAEvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC,GAAG,mBAAmB;;AAEvB;;AAEA,GAAG,wCAAwC;AAC3C;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK,+CAA+C;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;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A;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;;;;;;AClLA,aAAa,mBAAO,CAAC,MAAqB;AAC1C,aAAa,mBAAO,CAAC,MAAqB;AAC1C,UAAU,mBAAO,CAAC,MAAkB;AACpC,UAAU,mBAAO,CAAC,MAAkB;AACpC,oBAAoB,mBAAO,CAAC,MAA4B;AACxD,wBAAwB,mBAAO,CAAC,MAAgC;;AAEhE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;AChBA,iBAAiB,qBAAuB,iC;;;;;;;ACAxC;;AAEA;AACA,cAAc,mBAAO,CAAC,MAA2f;AACjhB,4CAA4C,QAAS;AACrD;AACA;AACA,UAAU,mBAAO,CAAC,MAA6D;AAC/E;AACA;AACA,E;;;;;;;ACVA,iBAAiB,mBAAO,CAAC,MAAa,E;;;;;;;ACAtC,eAAe,mBAAO,CAAC,MAAwB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACba;;AAEb,YAAY,mBAAO,CAAC,MAAY;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,eAAe;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;ACpDa;;AAEb,YAAY,mBAAO,CAAC,MAAY;;AAEhC;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,MAAM;AACjB,WAAW,eAAe;AAC1B,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;ACnBA;;;;;;;;;ACAa;;AAEb,WAAW,mBAAO,CAAC,MAAgB;;AAEnC;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS;AAC5C,2BAA2B;AAC3B;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,4BAA4B;AAC5B,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,O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EA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,WAAW;AACxD;AACA;AACA;;AAEA,2BAA2B,mBAAmB,aAAa;;AAE3D;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,gBAAgB;AAChB;AACA,cAAc;AACd,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,4CAA4C;AAC5E;AACA;AACA,2BAA2B,uCAAuC;AAClE;AACA;;AAEA;AACA;;;;;;;;;AC5Ha;;AAEb;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACbA,iBAAiB,qBAAuB,wC;;;;;;;ACAxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa,EAAE;;;;;;;;;ACZ/B,aAAa,mBAAO,CAAC,MAAqB;AAC1C,mBAAmB,mBAAO,CAAC,MAA4B;AACvD,2BAA2B,mBAAO,CAAC,MAA8B;AACjE,kCAAkC,mBAAO,CAAC,MAA6C;AACvF,sBAAsB,mBAAO,CAAC,MAAgC;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;;;;;;AChCA,yBAAyB,mBAAO,CAAC,MAAmC;AACpE,kBAAkB,mBAAO,CAAC,MAA4B;;AAEtD;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,8BAA8B;AAClE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;;AAEA;AACA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"webcomp-tourism-detail.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"5a74\");\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","module.exports = __webpack_public_path__ + \"img/gastro-placeholder.bfc14787.svg\";","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".modal[data-v-530dccbf]{display:flex;position:fixed;z-index:1;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:#000;background-color:rgba(0,0,0,.9)}.modal-content[data-v-530dccbf]{margin:auto;display:block;width:80%;max-width:1200px;height:100%}.img-content[data-v-530dccbf]{max-width:80%}.modal-content[data-v-530dccbf]{-webkit-animation-name:zoom-data-v-530dccbf;-webkit-animation-duration:.6s;animation-name:zoom-data-v-530dccbf;animation-duration:.6s}@-webkit-keyframes zoom-data-v-530dccbf{0%{-webkit-transform:scale(0)}to{-webkit-transform:scale(1)}}@keyframes zoom-data-v-530dccbf{0%{transform:scale(0)}to{transform:scale(1)}}.close[data-v-530dccbf]{position:absolute;top:15px;right:35px;color:#f1f1f1;font-size:40px;font-weight:700;transition:.3s}.close[data-v-530dccbf]:focus,.close[data-v-530dccbf]:hover{color:#bbb;text-decoration:none;cursor:pointer}@media only screen and (max-width:700px){.modal-content[data-v-530dccbf]{width:100%}.img-content[data-v-530dccbf]{max-width:100%}}.img-button[data-v-530dccbf]{width:50px;text-align:center;background-color:rgba(0,0,0,.3);height:50px;border-radius:25px;margin:8px}.img-button[data-v-530dccbf]:hover{background-color:rgba(0,0,0,.7)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = !fails(function () {\n  var url = new URL('b?a=1&b=2&c=3', 'http://a');\n  var searchParams = url.searchParams;\n  var result = '';\n  url.pathname = 'c%20d';\n  searchParams.forEach(function (value, key) {\n    searchParams['delete']('b');\n    result += key + value;\n  });\n  return (IS_PURE && !url.toJSON)\n    || !searchParams.sort\n    || url.href !== 'http://a/c%20d?a=1&c=3'\n    || searchParams.get('c') !== '3'\n    || String(new URLSearchParams('?a=1')) !== 'a=1'\n    || !searchParams[ITERATOR]\n    // throws in Edge\n    || new URL('https://a@b').username !== 'a'\n    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'\n    // not punycoded in Edge\n    || new URL('http://тест').host !== 'xn--e1aybc'\n    // not escaped in Chrome 62-\n    || new URL('http://a#б').hash !== '#%D0%B1'\n    // fails in Chrome 66-\n    || result !== 'a1c3'\n    // throws in Safari\n    || new URL('http://x', undefined).host !== 'x';\n});\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","module.exports = __webpack_public_path__ + \"img/ic_phone.3f26b1f3.svg\";","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","module.exports = __webpack_public_path__ + \"img/ic_calendar.5723461a.svg\";","module.exports = __webpack_public_path__ + \"img/ic_altitudehighestpoint.75c06886.svg\";","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","export * from \"-!../node_modules/vue-style-loader/index.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&shadow\"","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","export * from \"-!../../node_modules/vue-style-loader/index.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Paging.vue?vue&type=style&index=0&id=356619ac&scoped=true&lang=css&\"","export * from \"-!../../node_modules/vue-style-loader/index.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageDetail.vue?vue&type=style&index=0&id=530dccbf&scoped=true&lang=css&\"","var anObject = require('../internals/an-object');\n\nmodule.exports = function (iterator) {\n  var returnMethod = iterator['return'];\n  if (returnMethod !== undefined) {\n    return anObject(returnMethod.call(iterator)).value;\n  }\n};\n","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.string.iterator');\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar global = require('../internals/global');\nvar defineProperties = require('../internals/object-define-properties');\nvar redefine = require('../internals/redefine');\nvar anInstance = require('../internals/an-instance');\nvar has = require('../internals/has');\nvar assign = require('../internals/object-assign');\nvar arrayFrom = require('../internals/array-from');\nvar codeAt = require('../internals/string-multibyte').codeAt;\nvar toASCII = require('../internals/string-punycode-to-ascii');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar NativeURL = global.URL;\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar floor = Math.floor;\nvar pow = Math.pow;\n\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\n\nvar ALPHA = /[A-Za-z]/;\nvar ALPHANUMERIC = /[\\d+-.A-Za-z]/;\nvar DIGIT = /\\d/;\nvar HEX_START = /^(0x|0X)/;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\dA-Fa-f]+$/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT = /[\\u0000\\u0009\\u000A\\u000D #%/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\u0000\\u0009\\u000A\\u000D #/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u001F ]+|[\\u0000-\\u001F ]+$/g;\n// eslint-disable-next-line no-control-regex\nvar TAB_AND_NEW_LINE = /[\\u0009\\u000A\\u000D]/g;\nvar EOF;\n\nvar parseHost = function (url, input) {\n  var result, codePoints, index;\n  if (input.charAt(0) == '[') {\n    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;\n    result = parseIPv6(input.slice(1, -1));\n    if (!result) return INVALID_HOST;\n    url.host = result;\n  // opaque host\n  } else if (!isSpecial(url)) {\n    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;\n    result = '';\n    codePoints = arrayFrom(input);\n    for (index = 0; index < codePoints.length; index++) {\n      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n    }\n    url.host = result;\n  } else {\n    input = toASCII(input);\n    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;\n    result = parseIPv4(input);\n    if (result === null) return INVALID_HOST;\n    url.host = result;\n  }\n};\n\nvar parseIPv4 = function (input) {\n  var parts = input.split('.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.pop();\n  }\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n    if (part.length > 1 && part.charAt(0) == '0') {\n      radix = HEX_START.test(part) ? 16 : 8;\n      part = part.slice(radix == 8 ? 1 : 2);\n    }\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;\n      number = parseInt(part, radix);\n    }\n    numbers.push(number);\n  }\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n  ipv4 = numbers.pop();\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n  return ipv4;\n};\n\n// eslint-disable-next-line max-statements\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var char = function () {\n    return input.charAt(pointer);\n  };\n\n  if (char() == ':') {\n    if (input.charAt(1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n  while (char()) {\n    if (pieceIndex == 8) return;\n    if (char() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n    value = length = 0;\n    while (length < 4 && HEX.test(char())) {\n      value = value * 16 + parseInt(char(), 16);\n      pointer++;\n      length++;\n    }\n    if (char() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n      while (char()) {\n        ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (char() == '.' && numbersSeen < 4) pointer++;\n          else return;\n        }\n        if (!DIGIT.test(char())) return;\n        while (DIGIT.test(char())) {\n          number = parseInt(char(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;\n          else if (ipv4Piece == 0) return;\n          else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n      if (numbersSeen != 4) return;\n      break;\n    } else if (char() == ':') {\n      pointer++;\n      if (!char()) return;\n    } else if (char()) return;\n    address[pieceIndex++] = value;\n  }\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n  return maxIndex;\n};\n\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0;\n  // ipv4\n  if (typeof host == 'number') {\n    result = [];\n    for (index = 0; index < 4; index++) {\n      result.unshift(host % 256);\n      host = floor(host / 256);\n    } return result.join('.');\n  // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += host[index].toString(16);\n        if (index < 7) result += ':';\n      }\n    }\n    return '[' + result + ']';\n  } return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1, '\"': 1, '<': 1, '>': 1, '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1, '?': 1, '{': 1, '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\\\': 1, ']': 1, '^': 1, '|': 1\n});\n\nvar percentEncode = function (char, set) {\n  var code = codeAt(char, 0);\n  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);\n};\n\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nvar isSpecial = function (url) {\n  return has(specialSchemes, url.scheme);\n};\n\nvar includesCredentials = function (url) {\n  return url.username != '' || url.password != '';\n};\n\nvar cannotHaveUsernamePasswordPort = function (url) {\n  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n};\n\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && ALPHA.test(string.charAt(0))\n    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));\n};\n\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (\n    string.length == 2 ||\n    ((third = string.charAt(2)) === '/' || third === '\\\\' || third === '?' || third === '#')\n  );\n};\n\nvar shortenURLsPath = function (url) {\n  var path = url.path;\n  var pathSize = path.length;\n  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n    path.pop();\n  }\n};\n\nvar isSingleDot = function (segment) {\n  return segment === '.' || segment.toLowerCase() === '%2e';\n};\n\nvar isDoubleDot = function (segment) {\n  segment = segment.toLowerCase();\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n};\n\n// States:\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\n\n// eslint-disable-next-line max-statements\nvar parseURL = function (url, input, stateOverride, base) {\n  var state = stateOverride || SCHEME_START;\n  var pointer = 0;\n  var buffer = '';\n  var seenAt = false;\n  var seenBracket = false;\n  var seenPasswordToken = false;\n  var codePoints, char, bufferCodePoints, failure;\n\n  if (!stateOverride) {\n    url.scheme = '';\n    url.username = '';\n    url.password = '';\n    url.host = null;\n    url.port = null;\n    url.path = [];\n    url.query = null;\n    url.fragment = null;\n    url.cannotBeABaseURL = false;\n    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n  }\n\n  input = input.replace(TAB_AND_NEW_LINE, '');\n\n  codePoints = arrayFrom(input);\n\n  while (pointer <= codePoints.length) {\n    char = codePoints[pointer];\n    switch (state) {\n      case SCHEME_START:\n        if (char && ALPHA.test(char)) {\n          buffer += char.toLowerCase();\n          state = SCHEME;\n        } else if (!stateOverride) {\n          state = NO_SCHEME;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case SCHEME:\n        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {\n          buffer += char.toLowerCase();\n        } else if (char == ':') {\n          if (stateOverride && (\n            (isSpecial(url) != has(specialSchemes, buffer)) ||\n            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||\n            (url.scheme == 'file' && !url.host)\n          )) return;\n          url.scheme = buffer;\n          if (stateOverride) {\n            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n            return;\n          }\n          buffer = '';\n          if (url.scheme == 'file') {\n            state = FILE;\n          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n            state = SPECIAL_RELATIVE_OR_AUTHORITY;\n          } else if (isSpecial(url)) {\n            state = SPECIAL_AUTHORITY_SLASHES;\n          } else if (codePoints[pointer + 1] == '/') {\n            state = PATH_OR_AUTHORITY;\n            pointer++;\n          } else {\n            url.cannotBeABaseURL = true;\n            url.path.push('');\n            state = CANNOT_BE_A_BASE_URL_PATH;\n          }\n        } else if (!stateOverride) {\n          buffer = '';\n          state = NO_SCHEME;\n          pointer = 0;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case NO_SCHEME:\n        if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;\n        if (base.cannotBeABaseURL && char == '#') {\n          url.scheme = base.scheme;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          url.cannotBeABaseURL = true;\n          state = FRAGMENT;\n          break;\n        }\n        state = base.scheme == 'file' ? FILE : RELATIVE;\n        continue;\n\n      case SPECIAL_RELATIVE_OR_AUTHORITY:\n        if (char == '/' && codePoints[pointer + 1] == '/') {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          pointer++;\n        } else {\n          state = RELATIVE;\n          continue;\n        } break;\n\n      case PATH_OR_AUTHORITY:\n        if (char == '/') {\n          state = AUTHORITY;\n          break;\n        } else {\n          state = PATH;\n          continue;\n        }\n\n      case RELATIVE:\n        url.scheme = base.scheme;\n        if (char == EOF) {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n        } else if (char == '/' || (char == '\\\\' && isSpecial(url))) {\n          state = RELATIVE_SLASH;\n        } else if (char == '?') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          state = FRAGMENT;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.path.pop();\n          state = PATH;\n          continue;\n        } break;\n\n      case RELATIVE_SLASH:\n        if (isSpecial(url) && (char == '/' || char == '\\\\')) {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        } else if (char == '/') {\n          state = AUTHORITY;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          state = PATH;\n          continue;\n        } break;\n\n      case SPECIAL_AUTHORITY_SLASHES:\n        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;\n        pointer++;\n        break;\n\n      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n        if (char != '/' && char != '\\\\') {\n          state = AUTHORITY;\n          continue;\n        } break;\n\n      case AUTHORITY:\n        if (char == '@') {\n          if (seenAt) buffer = '%40' + buffer;\n          seenAt = true;\n          bufferCodePoints = arrayFrom(buffer);\n          for (var i = 0; i < bufferCodePoints.length; i++) {\n            var codePoint = bufferCodePoints[i];\n            if (codePoint == ':' && !seenPasswordToken) {\n              seenPasswordToken = true;\n              continue;\n            }\n            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n            if (seenPasswordToken) url.password += encodedCodePoints;\n            else url.username += encodedCodePoints;\n          }\n          buffer = '';\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (seenAt && buffer == '') return INVALID_AUTHORITY;\n          pointer -= arrayFrom(buffer).length + 1;\n          buffer = '';\n          state = HOST;\n        } else buffer += char;\n        break;\n\n      case HOST:\n      case HOSTNAME:\n        if (stateOverride && url.scheme == 'file') {\n          state = FILE_HOST;\n          continue;\n        } else if (char == ':' && !seenBracket) {\n          if (buffer == '') return INVALID_HOST;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PORT;\n          if (stateOverride == HOSTNAME) return;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (isSpecial(url) && buffer == '') return INVALID_HOST;\n          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PATH_START;\n          if (stateOverride) return;\n          continue;\n        } else {\n          if (char == '[') seenBracket = true;\n          else if (char == ']') seenBracket = false;\n          buffer += char;\n        } break;\n\n      case PORT:\n        if (DIGIT.test(char)) {\n          buffer += char;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          stateOverride\n        ) {\n          if (buffer != '') {\n            var port = parseInt(buffer, 10);\n            if (port > 0xFFFF) return INVALID_PORT;\n            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;\n            buffer = '';\n          }\n          if (stateOverride) return;\n          state = PATH_START;\n          continue;\n        } else return INVALID_PORT;\n        break;\n\n      case FILE:\n        url.scheme = 'file';\n        if (char == '/' || char == '\\\\') state = FILE_SLASH;\n        else if (base && base.scheme == 'file') {\n          if (char == EOF) {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n          } else if (char == '?') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n              url.host = base.host;\n              url.path = base.path.slice();\n              shortenURLsPath(url);\n            }\n            state = PATH;\n            continue;\n          }\n        } else {\n          state = PATH;\n          continue;\n        } break;\n\n      case FILE_SLASH:\n        if (char == '/' || char == '\\\\') {\n          state = FILE_HOST;\n          break;\n        }\n        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);\n          else url.host = base.host;\n        }\n        state = PATH;\n        continue;\n\n      case FILE_HOST:\n        if (char == EOF || char == '/' || char == '\\\\' || char == '?' || char == '#') {\n          if (!stateOverride && isWindowsDriveLetter(buffer)) {\n            state = PATH;\n          } else if (buffer == '') {\n            url.host = '';\n            if (stateOverride) return;\n            state = PATH_START;\n          } else {\n            failure = parseHost(url, buffer);\n            if (failure) return failure;\n            if (url.host == 'localhost') url.host = '';\n            if (stateOverride) return;\n            buffer = '';\n            state = PATH_START;\n          } continue;\n        } else buffer += char;\n        break;\n\n      case PATH_START:\n        if (isSpecial(url)) {\n          state = PATH;\n          if (char != '/' && char != '\\\\') continue;\n        } else if (!stateOverride && char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          state = PATH;\n          if (char != '/') continue;\n        } break;\n\n      case PATH:\n        if (\n          char == EOF || char == '/' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          (!stateOverride && (char == '?' || char == '#'))\n        ) {\n          if (isDoubleDot(buffer)) {\n            shortenURLsPath(url);\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else if (isSingleDot(buffer)) {\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else {\n            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n              if (url.host) url.host = '';\n              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter\n            }\n            url.path.push(buffer);\n          }\n          buffer = '';\n          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {\n            while (url.path.length > 1 && url.path[0] === '') {\n              url.path.shift();\n            }\n          }\n          if (char == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          }\n        } else {\n          buffer += percentEncode(char, pathPercentEncodeSet);\n        } break;\n\n      case CANNOT_BE_A_BASE_URL_PATH:\n        if (char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case QUERY:\n        if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          if (char == \"'\" && isSpecial(url)) url.query += '%27';\n          else if (char == '#') url.query += '%23';\n          else url.query += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case FRAGMENT:\n        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);\n        break;\n    }\n\n    pointer++;\n  }\n};\n\n// `URL` constructor\n// https://url.spec.whatwg.org/#url-class\nvar URLConstructor = function URL(url /* , base */) {\n  var that = anInstance(this, URLConstructor, 'URL');\n  var base = arguments.length > 1 ? arguments[1] : undefined;\n  var urlString = String(url);\n  var state = setInternalState(that, { type: 'URL' });\n  var baseState, failure;\n  if (base !== undefined) {\n    if (base instanceof URLConstructor) baseState = getInternalURLState(base);\n    else {\n      failure = parseURL(baseState = {}, String(base));\n      if (failure) throw TypeError(failure);\n    }\n  }\n  failure = parseURL(state, urlString, null, baseState);\n  if (failure) throw TypeError(failure);\n  var searchParams = state.searchParams = new URLSearchParams();\n  var searchParamsState = getInternalSearchParamsState(searchParams);\n  searchParamsState.updateSearchParams(state.query);\n  searchParamsState.updateURL = function () {\n    state.query = String(searchParams) || null;\n  };\n  if (!DESCRIPTORS) {\n    that.href = serializeURL.call(that);\n    that.origin = getOrigin.call(that);\n    that.protocol = getProtocol.call(that);\n    that.username = getUsername.call(that);\n    that.password = getPassword.call(that);\n    that.host = getHost.call(that);\n    that.hostname = getHostname.call(that);\n    that.port = getPort.call(that);\n    that.pathname = getPathname.call(that);\n    that.search = getSearch.call(that);\n    that.searchParams = getSearchParams.call(that);\n    that.hash = getHash.call(that);\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar serializeURL = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var username = url.username;\n  var password = url.password;\n  var host = url.host;\n  var port = url.port;\n  var path = url.path;\n  var query = url.query;\n  var fragment = url.fragment;\n  var output = scheme + ':';\n  if (host !== null) {\n    output += '//';\n    if (includesCredentials(url)) {\n      output += username + (password ? ':' + password : '') + '@';\n    }\n    output += serializeHost(host);\n    if (port !== null) output += ':' + port;\n  } else if (scheme == 'file') output += '//';\n  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n  if (query !== null) output += '?' + query;\n  if (fragment !== null) output += '#' + fragment;\n  return output;\n};\n\nvar getOrigin = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var port = url.port;\n  if (scheme == 'blob') try {\n    return new URL(scheme.path[0]).origin;\n  } catch (error) {\n    return 'null';\n  }\n  if (scheme == 'file' || !isSpecial(url)) return 'null';\n  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n};\n\nvar getProtocol = function () {\n  return getInternalURLState(this).scheme + ':';\n};\n\nvar getUsername = function () {\n  return getInternalURLState(this).username;\n};\n\nvar getPassword = function () {\n  return getInternalURLState(this).password;\n};\n\nvar getHost = function () {\n  var url = getInternalURLState(this);\n  var host = url.host;\n  var port = url.port;\n  return host === null ? ''\n    : port === null ? serializeHost(host)\n    : serializeHost(host) + ':' + port;\n};\n\nvar getHostname = function () {\n  var host = getInternalURLState(this).host;\n  return host === null ? '' : serializeHost(host);\n};\n\nvar getPort = function () {\n  var port = getInternalURLState(this).port;\n  return port === null ? '' : String(port);\n};\n\nvar getPathname = function () {\n  var url = getInternalURLState(this);\n  var path = url.path;\n  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n};\n\nvar getSearch = function () {\n  var query = getInternalURLState(this).query;\n  return query ? '?' + query : '';\n};\n\nvar getSearchParams = function () {\n  return getInternalURLState(this).searchParams;\n};\n\nvar getHash = function () {\n  var fragment = getInternalURLState(this).fragment;\n  return fragment ? '#' + fragment : '';\n};\n\nvar accessorDescriptor = function (getter, setter) {\n  return { get: getter, set: setter, configurable: true, enumerable: true };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor(serializeURL, function (href) {\n      var url = getInternalURLState(this);\n      var urlString = String(href);\n      var failure = parseURL(url, urlString);\n      if (failure) throw TypeError(failure);\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor(getOrigin),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor(getProtocol, function (protocol) {\n      var url = getInternalURLState(this);\n      parseURL(url, String(protocol) + ':', SCHEME_START);\n    }),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor(getUsername, function (username) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(username));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.username = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor(getPassword, function (password) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(password));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.password = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor(getHost, function (host) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(host), HOST);\n    }),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor(getHostname, function (hostname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(hostname), HOSTNAME);\n    }),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor(getPort, function (port) {\n      var url = getInternalURLState(this);\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      port = String(port);\n      if (port == '') url.port = null;\n      else parseURL(url, port, PORT);\n    }),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor(getPathname, function (pathname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      url.path = [];\n      parseURL(url, pathname + '', PATH_START);\n    }),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor(getSearch, function (search) {\n      var url = getInternalURLState(this);\n      search = String(search);\n      if (search == '') {\n        url.query = null;\n      } else {\n        if ('?' == search.charAt(0)) search = search.slice(1);\n        url.query = '';\n        parseURL(url, search, QUERY);\n      }\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor(getSearchParams),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor(getHash, function (hash) {\n      var url = getInternalURLState(this);\n      hash = String(hash);\n      if (hash == '') {\n        url.fragment = null;\n        return;\n      }\n      if ('#' == hash.charAt(0)) hash = hash.slice(1);\n      url.fragment = '';\n      parseURL(url, hash, FRAGMENT);\n    })\n  });\n}\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\n// `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\nredefine(URLPrototype, 'toString', function toString() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n  // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {\n    return nativeCreateObjectURL.apply(NativeURL, arguments);\n  });\n  // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {\n    return nativeRevokeObjectURL.apply(NativeURL, arguments);\n  });\n}\n\nsetToStringTag(URLConstructor, 'URL');\n\n$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {\n  URL: URLConstructor\n});\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","import listToStyles from './listToStyles'\n\nexport default function addStylesToShadowDOM (parentId, list, shadowRoot) {\n  var styles = listToStyles(parentId, list)\n  addStyles(styles, shadowRoot)\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nfunction addStyles (styles /* Array<StyleObject> */, shadowRoot) {\n  const injectedStyles =\n    shadowRoot._injectedStyles ||\n    (shadowRoot._injectedStyles = {})\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var style = injectedStyles[item.id]\n    if (!style) {\n      for (var j = 0; j < item.parts.length; j++) {\n        addStyle(item.parts[j], shadowRoot)\n      }\n      injectedStyles[item.id] = true\n    }\n  }\n}\n\nfunction createStyleElement (shadowRoot) {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  shadowRoot.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */, shadowRoot) {\n  var styleElement = createStyleElement(shadowRoot)\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","module.exports = {};\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","module.exports = __webpack_public_path__ + \"img/ic_altitudelowestpoint.a6de25d4.svg\";","exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageDetail.vue?vue&type=style&index=0&id=530dccbf&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to Shadow Root\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesShadow.js\").default\nmodule.exports.__inject__ = function (shadowRoot) {\n  add(\"7542ea52\", content, shadowRoot)\n};","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ItemsList.vue?vue&type=style&index=0&id=0223482d&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to Shadow Root\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesShadow.js\").default\nmodule.exports.__inject__ = function (shadowRoot) {\n  add(\"1d64ab18\", content, shadowRoot)\n};","module.exports = __webpack_public_path__ + \"img/ic_difficulty.3a0cafcc.svg\";","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method implementation\n// https://tc39.github.io/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    next = iterator.next;\n    result = new C();\n    for (;!(step = next.call(iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.8.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n});\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Paging.vue?vue&type=style&index=0&id=356619ac&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to Shadow Root\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesShadow.js\").default\nmodule.exports.__inject__ = function (shadowRoot) {\n  add(\"11cb508a\", content, shadowRoot)\n};","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","const camelizeRE = /-(\\w)/g;\nconst camelize = str => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : '')\n};\n\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = str => {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n};\n\nfunction getInitialProps (propsList) {\n  const res = {};\n  propsList.forEach(key => {\n    res[key] = undefined;\n  });\n  return res\n}\n\nfunction injectHook (options, key, hook) {\n  options[key] = [].concat(options[key] || []);\n  options[key].unshift(hook);\n}\n\nfunction callHooks (vm, hook) {\n  if (vm) {\n    const hooks = vm.$options[hook] || [];\n    hooks.forEach(hook => {\n      hook.call(vm);\n    });\n  }\n}\n\nfunction createCustomEvent (name, args) {\n  return new CustomEvent(name, {\n    bubbles: false,\n    cancelable: false,\n    detail: args\n  })\n}\n\nconst isBoolean = val => /function Boolean/.test(String(val));\nconst isNumber = val => /function Number/.test(String(val));\n\nfunction convertAttributeValue (value, name, { type } = {}) {\n  if (isBoolean(type)) {\n    if (value === 'true' || value === 'false') {\n      return value === 'true'\n    }\n    if (value === '' || value === name) {\n      return true\n    }\n    return value != null\n  } else if (isNumber(type)) {\n    const parsed = parseFloat(value, 10);\n    return isNaN(parsed) ? value : parsed\n  } else {\n    return value\n  }\n}\n\nfunction toVNodes (h, children) {\n  const res = [];\n  for (let i = 0, l = children.length; i < l; i++) {\n    res.push(toVNode(h, children[i]));\n  }\n  return res\n}\n\nfunction toVNode (h, node) {\n  if (node.nodeType === 3) {\n    return node.data.trim() ? node.data : null\n  } else if (node.nodeType === 1) {\n    const data = {\n      attrs: getAttributes(node),\n      domProps: {\n        innerHTML: node.innerHTML\n      }\n    };\n    if (data.attrs.slot) {\n      data.slot = data.attrs.slot;\n      delete data.attrs.slot;\n    }\n    return h(node.tagName, data)\n  } else {\n    return null\n  }\n}\n\nfunction getAttributes (node) {\n  const res = {};\n  for (let i = 0, l = node.attributes.length; i < l; i++) {\n    const attr = node.attributes[i];\n    res[attr.nodeName] = attr.nodeValue;\n  }\n  return res\n}\n\nfunction wrap (Vue, Component) {\n  const isAsync = typeof Component === 'function' && !Component.cid;\n  let isInitialized = false;\n  let hyphenatedPropsList;\n  let camelizedPropsList;\n  let camelizedPropsMap;\n\n  function initialize (Component) {\n    if (isInitialized) return\n\n    const options = typeof Component === 'function'\n      ? Component.options\n      : Component;\n\n    // extract props info\n    const propsList = Array.isArray(options.props)\n      ? options.props\n      : Object.keys(options.props || {});\n    hyphenatedPropsList = propsList.map(hyphenate);\n    camelizedPropsList = propsList.map(camelize);\n    const originalPropsAsObject = Array.isArray(options.props) ? {} : options.props || {};\n    camelizedPropsMap = camelizedPropsList.reduce((map, key, i) => {\n      map[key] = originalPropsAsObject[propsList[i]];\n      return map\n    }, {});\n\n    // proxy $emit to native DOM events\n    injectHook(options, 'beforeCreate', function () {\n      const emit = this.$emit;\n      this.$emit = (name, ...args) => {\n        this.$root.$options.customElement.dispatchEvent(createCustomEvent(name, args));\n        return emit.call(this, name, ...args)\n      };\n    });\n\n    injectHook(options, 'created', function () {\n      // sync default props values to wrapper on created\n      camelizedPropsList.forEach(key => {\n        this.$root.props[key] = this[key];\n      });\n    });\n\n    // proxy props as Element properties\n    camelizedPropsList.forEach(key => {\n      Object.defineProperty(CustomElement.prototype, key, {\n        get () {\n          return this._wrapper.props[key]\n        },\n        set (newVal) {\n          this._wrapper.props[key] = newVal;\n        },\n        enumerable: false,\n        configurable: true\n      });\n    });\n\n    isInitialized = true;\n  }\n\n  function syncAttribute (el, key) {\n    const camelized = camelize(key);\n    const value = el.hasAttribute(key) ? el.getAttribute(key) : undefined;\n    el._wrapper.props[camelized] = convertAttributeValue(\n      value,\n      key,\n      camelizedPropsMap[camelized]\n    );\n  }\n\n  class CustomElement extends HTMLElement {\n    constructor () {\n      super();\n      this.attachShadow({ mode: 'open' });\n\n      const wrapper = this._wrapper = new Vue({\n        name: 'shadow-root',\n        customElement: this,\n        shadowRoot: this.shadowRoot,\n        data () {\n          return {\n            props: {},\n            slotChildren: []\n          }\n        },\n        render (h) {\n          return h(Component, {\n            ref: 'inner',\n            props: this.props\n          }, this.slotChildren)\n        }\n      });\n\n      // Use MutationObserver to react to future attribute & slot content change\n      const observer = new MutationObserver(mutations => {\n        let hasChildrenChange = false;\n        for (let i = 0; i < mutations.length; i++) {\n          const m = mutations[i];\n          if (isInitialized && m.type === 'attributes' && m.target === this) {\n            syncAttribute(this, m.attributeName);\n          } else {\n            hasChildrenChange = true;\n          }\n        }\n        if (hasChildrenChange) {\n          wrapper.slotChildren = Object.freeze(toVNodes(\n            wrapper.$createElement,\n            this.childNodes\n          ));\n        }\n      });\n      observer.observe(this, {\n        childList: true,\n        subtree: true,\n        characterData: true,\n        attributes: true\n      });\n    }\n\n    get vueComponent () {\n      return this._wrapper.$refs.inner\n    }\n\n    connectedCallback () {\n      const wrapper = this._wrapper;\n      if (!wrapper._isMounted) {\n        // initialize attributes\n        const syncInitialAttributes = () => {\n          wrapper.props = getInitialProps(camelizedPropsList);\n          hyphenatedPropsList.forEach(key => {\n            syncAttribute(this, key);\n          });\n        };\n\n        if (isInitialized) {\n          syncInitialAttributes();\n        } else {\n          // async & unresolved\n          Component().then(resolved => {\n            if (resolved.__esModule || resolved[Symbol.toStringTag] === 'Module') {\n              resolved = resolved.default;\n            }\n            initialize(resolved);\n            syncInitialAttributes();\n          });\n        }\n        // initialize children\n        wrapper.slotChildren = Object.freeze(toVNodes(\n          wrapper.$createElement,\n          this.childNodes\n        ));\n        wrapper.$mount();\n        this.shadowRoot.appendChild(wrapper.$el);\n      } else {\n        callHooks(this.vueComponent, 'activated');\n      }\n    }\n\n    disconnectedCallback () {\n      callHooks(this.vueComponent, 'deactivated');\n    }\n  }\n\n  if (!isAsync) {\n    initialize(Component);\n  }\n\n  return CustomElement\n}\n\nexport default wrap;\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[(_vm.detailContentId)?_c('item-detail',{attrs:{\"content-id\":_vm.detailContentId,\"is-list-available\":_vm.islistAvailable,\"content-type\":_vm.contentType,\"language\":_vm.language},on:{\"close\":_vm.closeDetail}}):_c('items-list',{attrs:{\"language\":_vm.language,\"contentType\":_vm.contentType,\"contentIdList\":_vm.contentIdList,\"pageSize\":_vm.pageSize,\"category\":_vm.category,\"currentPage\":_vm.currentPage},on:{\"show-detail\":_vm.showDetail,\"change-current-page\":_vm.changeCurrentPage}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"list\"},[_c('h2',{staticClass:\"page-title\"},[_vm._v(_vm._s(_vm.$t(_vm.contentType)))]),_c('paging',{attrs:{\"current-page\":_vm.currentPage,\"total-pages\":_vm.totalPages},on:{\"next-page\":_vm.nextPage,\"last-page\":_vm.lastPage,\"go-to-page\":_vm.goToPage}}),(_vm.items.length > 0)?_vm._l((_vm.items),function(item){return _c('div',{key:item.id,staticClass:\"item-container\",on:{\"click\":function($event){$event.preventDefault();return _vm.showDetail(item.Id)}}},[_c('hr',{staticClass:\"solid\"}),_c('div',{staticClass:\"list-item\"},[(item.ImageGallery === null || item.ImageGallery.length === 0)?_c('div',[_c('img',{staticClass:\"thumbnail\",attrs:{\"src\":_vm.placeholderImage}})]):_c('div',[_c('img',{staticClass:\"thumbnail\",attrs:{\"src\":item.ImageGallery[0].ImageUrl}})]),_c('div',{staticClass:\"info\"},[_c('div',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.getTitle(item, _vm.language)))]),(_vm.contentType === 'Gastronomy')?_c('div',{staticClass:\"short-info\"},[_vm._v(\" \"+_vm._s(_vm.getGastronomyShortInfo(item))+\" \")]):(_vm.contentType === 'Activity')?_c('div',{staticClass:\"short-info\"},[_vm._v(\" \"+_vm._s(_vm.getActivityShortInfo(item))+\" \")]):(_vm.contentType === 'POI')?_c('div',{staticClass:\"short-info\"},[_vm._v(\" \"+_vm._s(_vm.getPoiShortInfo(item))+\" \")]):_vm._e()]),_c('img',{attrs:{\"src\":require(\"@/assets/img/arrow_right.svg\"),\"width\":\"28\",\"height\":\"28\"}})])])}):(_vm.isLoading)?_c('div',{staticClass:\"loading-spinner\"},[_c('img',{attrs:{\"src\":require(\"@/assets/img/loading.gif\")}})]):_c('div',{staticClass:\"noResult\"},[_vm._v(_vm._s(_vm.$t('noResults')))]),(_vm.items.length === 1)?_c('div',{staticClass:\"item-container\"}):_vm._e(),(_vm.items.length > 0)?_c('div',{staticClass:\"bottom-divider\"},[_c('hr',{staticClass:\"solid\"})]):_vm._e(),(_vm.items.length > 1)?_c('div',{staticClass:\"bottom-divider bottom-divider2\"},[_c('hr',{staticClass:\"solid\"})]):_vm._e(),_c('paging',{attrs:{\"current-page\":_vm.currentPage,\"total-pages\":_vm.totalPages},on:{\"next-page\":_vm.nextPage,\"last-page\":_vm.lastPage,\"go-to-page\":_vm.goToPage}})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport { Configuration } from \"./configuration\";\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n\nexport const BASE_PATH = \"http://tourism.opendatahub.bz.it/\".replace(/\\/+$/, \"\");\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n/**\n *\n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n    url: string;\n    options: any;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n    protected configuration: Configuration | undefined;\n\n    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected axios: AxiosInstance = globalAxios) {\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n};\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { AccoFeatures } from '../models';\nimport { AccoRoom } from '../models';\nimport { AccoTypes } from '../models';\nimport { Accommodation } from '../models';\nimport { AccommodationLocalized } from '../models';\nimport { AccommodationReduced } from '../models';\nimport { MssResponseShort } from '../models';\n/**\n * AccommodationApi - axios parameter creator\n * @export\n */\nexport const AccommodationApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Accommodation Room Info by AccoID\n         * @param {string} accoid Accommodation ID\n         * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)\n         * @param {boolean} [getall] Get Rooms from all sources (If an accommodation is bookable on Booking Southtyrol, rooms from this source are returned, setting getall to true returns also LTS Rooms), (default:false)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAccoRoomInfos: async (accoid: string, idsource?: string, getall?: boolean, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'accoid' is not null or undefined\n            if (accoid === null || accoid === undefined) {\n                throw new RequiredError('accoid','Required parameter accoid was null or undefined when calling accommodationGetAccoRoomInfos.');\n            }\n            const localVarPath = `/api/AccommodationRoom`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (accoid !== undefined) {\n                localVarQueryParameter['accoid'] = accoid;\n            }\n\n            if (idsource !== undefined) {\n                localVarQueryParameter['idsource'] = idsource;\n            }\n\n            if (getall !== undefined) {\n                localVarQueryParameter['getall'] = getall;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Room Info Single\n         * @param {string} id AccommodationRoom ID\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAccoRoomInfosById: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling accommodationGetAccoRoomInfosById.');\n            }\n            const localVarPath = `/api/AccommodationRoom/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Single\n         * @param {string} id ID of the Accommodation\n         * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)\n         * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;de&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n         * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n         * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAccommodation: async (id: string, idsource?: string, availabilitychecklanguage?: string, boardfilter?: string, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitycheck?: boolean, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling accommodationGetAccommodation.');\n            }\n            const localVarPath = `/api/Accommodation/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (idsource !== undefined) {\n                localVarQueryParameter['idsource'] = idsource;\n            }\n\n            if (availabilitychecklanguage !== undefined) {\n                localVarQueryParameter['availabilitychecklanguage'] = availabilitychecklanguage;\n            }\n\n            if (boardfilter !== undefined) {\n                localVarQueryParameter['boardfilter'] = boardfilter;\n            }\n\n            if (arrival !== undefined) {\n                localVarQueryParameter['arrival'] = arrival;\n            }\n\n            if (departure !== undefined) {\n                localVarQueryParameter['departure'] = departure;\n            }\n\n            if (roominfo !== undefined) {\n                localVarQueryParameter['roominfo'] = roominfo;\n            }\n\n            if (bokfilter !== undefined) {\n                localVarQueryParameter['bokfilter'] = bokfilter;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (availabilitycheck !== undefined) {\n                localVarQueryParameter['availabilitycheck'] = availabilitycheck;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Single Localized\n         * @param {string} id ID of the Accommodation\n         * @param {string} [language] Localization Language\n         * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n         * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n         * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAccommodationLocalized: async (id: string, language?: string, idsource?: string, boardfilter?: string, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitycheck?: boolean, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling accommodationGetAccommodationLocalized.');\n            }\n            const localVarPath = `/api/AccommodationLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (idsource !== undefined) {\n                localVarQueryParameter['idsource'] = idsource;\n            }\n\n            if (boardfilter !== undefined) {\n                localVarQueryParameter['boardfilter'] = boardfilter;\n            }\n\n            if (arrival !== undefined) {\n                localVarQueryParameter['arrival'] = arrival;\n            }\n\n            if (departure !== undefined) {\n                localVarQueryParameter['departure'] = departure;\n            }\n\n            if (roominfo !== undefined) {\n                localVarQueryParameter['roominfo'] = roominfo;\n            }\n\n            if (bokfilter !== undefined) {\n                localVarQueryParameter['bokfilter'] = bokfilter;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (availabilitycheck !== undefined) {\n                localVarQueryParameter['availabilitycheck'] = availabilitycheck;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [featurefilter] FeatureFilter refers to predefined Features listed in the property SpecialFeatures (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n         * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n         * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;en&#x27;)\n         * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAccommodations: async (pagenumber?: number, pagesize?: number, seed?: string, categoryfilter?: string, typefilter?: string, boardfilter?: string, featurefilter?: string, featureidfilter?: string, themefilter?: string, badgefilter?: string, idfilter?: string, locfilter?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitychecklanguage?: string, availabilitycheck?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Accommodation`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (categoryfilter !== undefined) {\n                localVarQueryParameter['categoryfilter'] = categoryfilter;\n            }\n\n            if (typefilter !== undefined) {\n                localVarQueryParameter['typefilter'] = typefilter;\n            }\n\n            if (boardfilter !== undefined) {\n                localVarQueryParameter['boardfilter'] = boardfilter;\n            }\n\n            if (featurefilter !== undefined) {\n                localVarQueryParameter['featurefilter'] = featurefilter;\n            }\n\n            if (featureidfilter !== undefined) {\n                localVarQueryParameter['featureidfilter'] = featureidfilter;\n            }\n\n            if (themefilter !== undefined) {\n                localVarQueryParameter['themefilter'] = themefilter;\n            }\n\n            if (badgefilter !== undefined) {\n                localVarQueryParameter['badgefilter'] = badgefilter;\n            }\n\n            if (idfilter !== undefined) {\n                localVarQueryParameter['idfilter'] = idfilter;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (arrival !== undefined) {\n                localVarQueryParameter['arrival'] = arrival;\n            }\n\n            if (departure !== undefined) {\n                localVarQueryParameter['departure'] = departure;\n            }\n\n            if (roominfo !== undefined) {\n                localVarQueryParameter['roominfo'] = roominfo;\n            }\n\n            if (bokfilter !== undefined) {\n                localVarQueryParameter['bokfilter'] = bokfilter;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (availabilitychecklanguage !== undefined) {\n                localVarQueryParameter['availabilitychecklanguage'] = availabilitychecklanguage;\n            }\n\n            if (availabilitycheck !== undefined) {\n                localVarQueryParameter['availabilitycheck'] = availabilitycheck;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            if (searchfilter !== undefined) {\n                localVarQueryParameter['searchfilter'] = searchfilter;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation List Localized\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [language] Localization Language\n         * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n         * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n         * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAccommodationsLocalized: async (pagenumber?: number, pagesize?: number, seed?: string, language?: string, categoryfilter?: string, typefilter?: string, boardfilter?: string, featurefilter?: string, themefilter?: string, badgefilter?: string, idfilter?: string, locfilter?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitycheck?: boolean, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/AccommodationLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (categoryfilter !== undefined) {\n                localVarQueryParameter['categoryfilter'] = categoryfilter;\n            }\n\n            if (typefilter !== undefined) {\n                localVarQueryParameter['typefilter'] = typefilter;\n            }\n\n            if (boardfilter !== undefined) {\n                localVarQueryParameter['boardfilter'] = boardfilter;\n            }\n\n            if (featurefilter !== undefined) {\n                localVarQueryParameter['featurefilter'] = featurefilter;\n            }\n\n            if (themefilter !== undefined) {\n                localVarQueryParameter['themefilter'] = themefilter;\n            }\n\n            if (badgefilter !== undefined) {\n                localVarQueryParameter['badgefilter'] = badgefilter;\n            }\n\n            if (idfilter !== undefined) {\n                localVarQueryParameter['idfilter'] = idfilter;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (arrival !== undefined) {\n                localVarQueryParameter['arrival'] = arrival;\n            }\n\n            if (departure !== undefined) {\n                localVarQueryParameter['departure'] = departure;\n            }\n\n            if (roominfo !== undefined) {\n                localVarQueryParameter['roominfo'] = roominfo;\n            }\n\n            if (bokfilter !== undefined) {\n                localVarQueryParameter['bokfilter'] = bokfilter;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (availabilitycheck !== undefined) {\n                localVarQueryParameter['availabilitycheck'] = availabilitycheck;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Feature List (LTS Features)\n         * @param {string} [source] IF source &#x3D; \\&quot;lts\\&quot; the Features list is returned in XML Format directly from LTS, (default: blank)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAllAccommodationFeaturesList: async (source?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/AccommodationFeatures`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Feature Single (LTS Features)\n         * @param {string} id ID of the AccommodationFeature\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAllAccommodationFeaturesSingle: async (id: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling accommodationGetAllAccommodationFeaturesSingle.');\n            }\n            const localVarPath = `/api/AccommodationFeatures/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAllAccommodationTypesList: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/AccommodationTypes`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Types Single\n         * @param {string} id ID of the AccommodationType\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAllAccommodationTypessingle: async (id: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling accommodationGetAllAccommodationTypessingle.');\n            }\n            const localVarPath = `/api/AccommodationTypes/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Accos with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAllAccommodationsChanged: async (pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/AccommodationChanged`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Reduced Accommodation List\n         * @param {string} [language] Localization Language\n         * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {boolean} [suedtirolmobil] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetReducedAccosAsync: async (language?: string, categoryfilter?: string, typefilter?: string, boardfilter?: string, featurefilter?: string, featureidfilter?: string, themefilter?: string, badgefilter?: string, locfilter?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, suedtirolmobil?: boolean, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/AccommodationReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (categoryfilter !== undefined) {\n                localVarQueryParameter['categoryfilter'] = categoryfilter;\n            }\n\n            if (typefilter !== undefined) {\n                localVarQueryParameter['typefilter'] = typefilter;\n            }\n\n            if (boardfilter !== undefined) {\n                localVarQueryParameter['boardfilter'] = boardfilter;\n            }\n\n            if (featurefilter !== undefined) {\n                localVarQueryParameter['featurefilter'] = featurefilter;\n            }\n\n            if (featureidfilter !== undefined) {\n                localVarQueryParameter['featureidfilter'] = featureidfilter;\n            }\n\n            if (themefilter !== undefined) {\n                localVarQueryParameter['themefilter'] = themefilter;\n            }\n\n            if (badgefilter !== undefined) {\n                localVarQueryParameter['badgefilter'] = badgefilter;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (suedtirolmobil !== undefined) {\n                localVarQueryParameter['suedtirolmobil'] = suedtirolmobil;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary POST Available Accommodations HGV(Booking Suedtirol MSS) / LTS on posted IDs only Availability Response NOT AVAILABLE AS OPEN DATA\n         * @param {string} body Posted Accommodation IDs (Separated by ,)\n         * @param {string} [availabilitychecklanguage] Language of the Availability Response\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check), (default:hgv)) REQUIRED\n         * @param {string} [source] Source of the Requester (possible value: &#x27;sinfo&#x27; &#x3D; Suedtirol.info, &#x27;sbalance&#x27; &#x3D; Südtirol Balance) REQUIRED\n         * @param {string} [detail] Include Offer Details (Boolean, 1 &#x3D; full Details)\n         * @param {boolean} [withoutmssids] Search over all bookable Accommodations on HGV MSS (No Ids have to be provided as Post Data) (default: false)\n         * @param {boolean} [withoutlcsids] Search over all Accommodations on LTS (No Ids have to be provided as Post Data) (default: false)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationPostAvailableMSSResponseonlyAccommodations: async (body: string, availabilitychecklanguage?: string, boardfilter?: string, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, detail?: string, withoutmssids?: boolean, withoutlcsids?: boolean, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'body' is not null or undefined\n            if (body === null || body === undefined) {\n                throw new RequiredError('body','Required parameter body was null or undefined when calling accommodationPostAvailableMSSResponseonlyAccommodations.');\n            }\n            const localVarPath = `/api/AvailabilityCheck`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (availabilitychecklanguage !== undefined) {\n                localVarQueryParameter['availabilitychecklanguage'] = availabilitychecklanguage;\n            }\n\n            if (boardfilter !== undefined) {\n                localVarQueryParameter['boardfilter'] = boardfilter;\n            }\n\n            if (arrival !== undefined) {\n                localVarQueryParameter['arrival'] = arrival;\n            }\n\n            if (departure !== undefined) {\n                localVarQueryParameter['departure'] = departure;\n            }\n\n            if (roominfo !== undefined) {\n                localVarQueryParameter['roominfo'] = roominfo;\n            }\n\n            if (bokfilter !== undefined) {\n                localVarQueryParameter['bokfilter'] = bokfilter;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (detail !== undefined) {\n                localVarQueryParameter['detail'] = detail;\n            }\n\n            if (withoutmssids !== undefined) {\n                localVarQueryParameter['withoutmssids'] = withoutmssids;\n            }\n\n            if (withoutlcsids !== undefined) {\n                localVarQueryParameter['withoutlcsids'] = withoutlcsids;\n            }\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const needsSerialization = (typeof body !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * AccommodationApi - functional programming interface\n * @export\n */\nexport const AccommodationApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Accommodation Room Info by AccoID\n         * @param {string} accoid Accommodation ID\n         * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)\n         * @param {boolean} [getall] Get Rooms from all sources (If an accommodation is bookable on Booking Southtyrol, rooms from this source are returned, setting getall to true returns also LTS Rooms), (default:false)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async accommodationGetAccoRoomInfos(accoid: string, idsource?: string, getall?: boolean, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<AccoRoom>>> {\n            const localVarAxiosArgs = await AccommodationApiAxiosParamCreator(configuration).accommodationGetAccoRoomInfos(accoid, idsource, getall, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Room Info Single\n         * @param {string} id AccommodationRoom ID\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async accommodationGetAccoRoomInfosById(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AccoRoom>> {\n            const localVarAxiosArgs = await AccommodationApiAxiosParamCreator(configuration).accommodationGetAccoRoomInfosById(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Single\n         * @param {string} id ID of the Accommodation\n         * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)\n         * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;de&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n         * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n         * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async accommodationGetAccommodation(id: string, idsource?: string, availabilitychecklanguage?: string, boardfilter?: string, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitycheck?: boolean, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Accommodation>> {\n            const localVarAxiosArgs = await AccommodationApiAxiosParamCreator(configuration).accommodationGetAccommodation(id, idsource, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Single Localized\n         * @param {string} id ID of the Accommodation\n         * @param {string} [language] Localization Language\n         * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n         * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n         * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async accommodationGetAccommodationLocalized(id: string, language?: string, idsource?: string, boardfilter?: string, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitycheck?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AccommodationLocalized>> {\n            const localVarAxiosArgs = await AccommodationApiAxiosParamCreator(configuration).accommodationGetAccommodationLocalized(id, language, idsource, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [featurefilter] FeatureFilter refers to predefined Features listed in the property SpecialFeatures (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n         * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n         * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;en&#x27;)\n         * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async accommodationGetAccommodations(pagenumber?: number, pagesize?: number, seed?: string, categoryfilter?: string, typefilter?: string, boardfilter?: string, featurefilter?: string, featureidfilter?: string, themefilter?: string, badgefilter?: string, idfilter?: string, locfilter?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitychecklanguage?: string, availabilitycheck?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Accommodation>>> {\n            const localVarAxiosArgs = await AccommodationApiAxiosParamCreator(configuration).accommodationGetAccommodations(pagenumber, pagesize, seed, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitychecklanguage, availabilitycheck, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation List Localized\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [language] Localization Language\n         * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n         * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n         * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async accommodationGetAccommodationsLocalized(pagenumber?: number, pagesize?: number, seed?: string, language?: string, categoryfilter?: string, typefilter?: string, boardfilter?: string, featurefilter?: string, themefilter?: string, badgefilter?: string, idfilter?: string, locfilter?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitycheck?: boolean, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<AccommodationLocalized>>> {\n            const localVarAxiosArgs = await AccommodationApiAxiosParamCreator(configuration).accommodationGetAccommodationsLocalized(pagenumber, pagesize, seed, language, categoryfilter, typefilter, boardfilter, featurefilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitycheck, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Feature List (LTS Features)\n         * @param {string} [source] IF source &#x3D; \\&quot;lts\\&quot; the Features list is returned in XML Format directly from LTS, (default: blank)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async accommodationGetAllAccommodationFeaturesList(source?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<AccoFeatures>>> {\n            const localVarAxiosArgs = await AccommodationApiAxiosParamCreator(configuration).accommodationGetAllAccommodationFeaturesList(source, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Feature Single (LTS Features)\n         * @param {string} id ID of the AccommodationFeature\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async accommodationGetAllAccommodationFeaturesSingle(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AccoFeatures>> {\n            const localVarAxiosArgs = await AccommodationApiAxiosParamCreator(configuration).accommodationGetAllAccommodationFeaturesSingle(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async accommodationGetAllAccommodationTypesList(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<AccoTypes>>> {\n            const localVarAxiosArgs = await AccommodationApiAxiosParamCreator(configuration).accommodationGetAllAccommodationTypesList(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Types Single\n         * @param {string} id ID of the AccommodationType\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async accommodationGetAllAccommodationTypessingle(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AccoTypes>> {\n            const localVarAxiosArgs = await AccommodationApiAxiosParamCreator(configuration).accommodationGetAllAccommodationTypessingle(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Accommodation Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Accos with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async accommodationGetAllAccommodationsChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Accommodation>>> {\n            const localVarAxiosArgs = await AccommodationApiAxiosParamCreator(configuration).accommodationGetAllAccommodationsChanged(pagenumber, pagesize, seed, updatefrom, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Reduced Accommodation List\n         * @param {string} [language] Localization Language\n         * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {boolean} [suedtirolmobil] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async accommodationGetReducedAccosAsync(language?: string, categoryfilter?: string, typefilter?: string, boardfilter?: string, featurefilter?: string, featureidfilter?: string, themefilter?: string, badgefilter?: string, locfilter?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, suedtirolmobil?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<AccommodationReduced>>> {\n            const localVarAxiosArgs = await AccommodationApiAxiosParamCreator(configuration).accommodationGetReducedAccosAsync(language, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, locfilter, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary POST Available Accommodations HGV(Booking Suedtirol MSS) / LTS on posted IDs only Availability Response NOT AVAILABLE AS OPEN DATA\n         * @param {string} body Posted Accommodation IDs (Separated by ,)\n         * @param {string} [availabilitychecklanguage] Language of the Availability Response\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check), (default:hgv)) REQUIRED\n         * @param {string} [source] Source of the Requester (possible value: &#x27;sinfo&#x27; &#x3D; Suedtirol.info, &#x27;sbalance&#x27; &#x3D; Südtirol Balance) REQUIRED\n         * @param {string} [detail] Include Offer Details (Boolean, 1 &#x3D; full Details)\n         * @param {boolean} [withoutmssids] Search over all bookable Accommodations on HGV MSS (No Ids have to be provided as Post Data) (default: false)\n         * @param {boolean} [withoutlcsids] Search over all Accommodations on LTS (No Ids have to be provided as Post Data) (default: false)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async accommodationPostAvailableMSSResponseonlyAccommodations(body: string, availabilitychecklanguage?: string, boardfilter?: string, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, detail?: string, withoutmssids?: boolean, withoutlcsids?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<MssResponseShort>>> {\n            const localVarAxiosArgs = await AccommodationApiAxiosParamCreator(configuration).accommodationPostAvailableMSSResponseonlyAccommodations(body, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, detail, withoutmssids, withoutlcsids, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * AccommodationApi - factory interface\n * @export\n */\nexport const AccommodationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET Accommodation Room Info by AccoID\n         * @param {string} accoid Accommodation ID\n         * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)\n         * @param {boolean} [getall] Get Rooms from all sources (If an accommodation is bookable on Booking Southtyrol, rooms from this source are returned, setting getall to true returns also LTS Rooms), (default:false)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAccoRoomInfos(accoid: string, idsource?: string, getall?: boolean, fields?: string, language?: string, options?: any): AxiosPromise<Array<AccoRoom>> {\n            return AccommodationApiFp(configuration).accommodationGetAccoRoomInfos(accoid, idsource, getall, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Accommodation Room Info Single\n         * @param {string} id AccommodationRoom ID\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAccoRoomInfosById(id: string, fields?: string, language?: string, options?: any): AxiosPromise<AccoRoom> {\n            return AccommodationApiFp(configuration).accommodationGetAccoRoomInfosById(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Accommodation Single\n         * @param {string} id ID of the Accommodation\n         * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)\n         * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;de&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n         * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n         * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAccommodation(id: string, idsource?: string, availabilitychecklanguage?: string, boardfilter?: string, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitycheck?: boolean, fields?: string, language?: string, options?: any): AxiosPromise<Accommodation> {\n            return AccommodationApiFp(configuration).accommodationGetAccommodation(id, idsource, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Accommodation Single Localized\n         * @param {string} id ID of the Accommodation\n         * @param {string} [language] Localization Language\n         * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n         * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n         * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAccommodationLocalized(id: string, language?: string, idsource?: string, boardfilter?: string, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitycheck?: boolean, options?: any): AxiosPromise<AccommodationLocalized> {\n            return AccommodationApiFp(configuration).accommodationGetAccommodationLocalized(id, language, idsource, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Accommodation List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [featurefilter] FeatureFilter refers to predefined Features listed in the property SpecialFeatures (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n         * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n         * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;en&#x27;)\n         * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAccommodations(pagenumber?: number, pagesize?: number, seed?: string, categoryfilter?: string, typefilter?: string, boardfilter?: string, featurefilter?: string, featureidfilter?: string, themefilter?: string, badgefilter?: string, idfilter?: string, locfilter?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitychecklanguage?: string, availabilitycheck?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): AxiosPromise<Array<Accommodation>> {\n            return AccommodationApiFp(configuration).accommodationGetAccommodations(pagenumber, pagesize, seed, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitychecklanguage, availabilitycheck, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Accommodation List Localized\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [language] Localization Language\n         * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n         * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n         * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAccommodationsLocalized(pagenumber?: number, pagesize?: number, seed?: string, language?: string, categoryfilter?: string, typefilter?: string, boardfilter?: string, featurefilter?: string, themefilter?: string, badgefilter?: string, idfilter?: string, locfilter?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitycheck?: boolean, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<AccommodationLocalized>> {\n            return AccommodationApiFp(configuration).accommodationGetAccommodationsLocalized(pagenumber, pagesize, seed, language, categoryfilter, typefilter, boardfilter, featurefilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitycheck, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Accommodation Feature List (LTS Features)\n         * @param {string} [source] IF source &#x3D; \\&quot;lts\\&quot; the Features list is returned in XML Format directly from LTS, (default: blank)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAllAccommodationFeaturesList(source?: string, options?: any): AxiosPromise<Array<AccoFeatures>> {\n            return AccommodationApiFp(configuration).accommodationGetAllAccommodationFeaturesList(source, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Accommodation Feature Single (LTS Features)\n         * @param {string} id ID of the AccommodationFeature\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAllAccommodationFeaturesSingle(id: string, options?: any): AxiosPromise<AccoFeatures> {\n            return AccommodationApiFp(configuration).accommodationGetAllAccommodationFeaturesSingle(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Accommodation Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAllAccommodationTypesList(options?: any): AxiosPromise<Array<AccoTypes>> {\n            return AccommodationApiFp(configuration).accommodationGetAllAccommodationTypesList(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Accommodation Types Single\n         * @param {string} id ID of the AccommodationType\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAllAccommodationTypessingle(id: string, options?: any): AxiosPromise<AccoTypes> {\n            return AccommodationApiFp(configuration).accommodationGetAllAccommodationTypessingle(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Accommodation Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Accos with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetAllAccommodationsChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): AxiosPromise<Array<Accommodation>> {\n            return AccommodationApiFp(configuration).accommodationGetAllAccommodationsChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Reduced Accommodation List\n         * @param {string} [language] Localization Language\n         * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n         * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {boolean} [suedtirolmobil] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationGetReducedAccosAsync(language?: string, categoryfilter?: string, typefilter?: string, boardfilter?: string, featurefilter?: string, featureidfilter?: string, themefilter?: string, badgefilter?: string, locfilter?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, suedtirolmobil?: boolean, options?: any): AxiosPromise<Array<AccommodationReduced>> {\n            return AccommodationApiFp(configuration).accommodationGetReducedAccosAsync(language, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, locfilter, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary POST Available Accommodations HGV(Booking Suedtirol MSS) / LTS on posted IDs only Availability Response NOT AVAILABLE AS OPEN DATA\n         * @param {string} body Posted Accommodation IDs (Separated by ,)\n         * @param {string} [availabilitychecklanguage] Language of the Availability Response\n         * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter)\n         * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED\n         * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED\n         * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n         * @param {string} [bokfilter] Booking Channels Filter (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check), (default:hgv)) REQUIRED\n         * @param {string} [source] Source of the Requester (possible value: &#x27;sinfo&#x27; &#x3D; Suedtirol.info, &#x27;sbalance&#x27; &#x3D; Südtirol Balance) REQUIRED\n         * @param {string} [detail] Include Offer Details (Boolean, 1 &#x3D; full Details)\n         * @param {boolean} [withoutmssids] Search over all bookable Accommodations on HGV MSS (No Ids have to be provided as Post Data) (default: false)\n         * @param {boolean} [withoutlcsids] Search over all Accommodations on LTS (No Ids have to be provided as Post Data) (default: false)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        accommodationPostAvailableMSSResponseonlyAccommodations(body: string, availabilitychecklanguage?: string, boardfilter?: string, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, detail?: string, withoutmssids?: boolean, withoutlcsids?: boolean, options?: any): AxiosPromise<Array<MssResponseShort>> {\n            return AccommodationApiFp(configuration).accommodationPostAvailableMSSResponseonlyAccommodations(body, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, detail, withoutmssids, withoutlcsids, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * AccommodationApi - object-oriented interface\n * @export\n * @class AccommodationApi\n * @extends {BaseAPI}\n */\nexport class AccommodationApi extends BaseAPI {\n    /**\n     * \n     * @summary GET Accommodation Room Info by AccoID\n     * @param {string} accoid Accommodation ID\n     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)\n     * @param {boolean} [getall] Get Rooms from all sources (If an accommodation is bookable on Booking Southtyrol, rooms from this source are returned, setting getall to true returns also LTS Rooms), (default:false)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccommodationApi\n     */\n    public accommodationGetAccoRoomInfos(accoid: string, idsource?: string, getall?: boolean, fields?: string, language?: string, options?: any) {\n        return AccommodationApiFp(this.configuration).accommodationGetAccoRoomInfos(accoid, idsource, getall, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Accommodation Room Info Single\n     * @param {string} id AccommodationRoom ID\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccommodationApi\n     */\n    public accommodationGetAccoRoomInfosById(id: string, fields?: string, language?: string, options?: any) {\n        return AccommodationApiFp(this.configuration).accommodationGetAccoRoomInfosById(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Accommodation Single\n     * @param {string} id ID of the Accommodation\n     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)\n     * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;de&#x27;)\n     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccommodationApi\n     */\n    public accommodationGetAccommodation(id: string, idsource?: string, availabilitychecklanguage?: string, boardfilter?: string, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitycheck?: boolean, fields?: string, language?: string, options?: any) {\n        return AccommodationApiFp(this.configuration).accommodationGetAccommodation(id, idsource, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Accommodation Single Localized\n     * @param {string} id ID of the Accommodation\n     * @param {string} [language] Localization Language\n     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)\n     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccommodationApi\n     */\n    public accommodationGetAccommodationLocalized(id: string, language?: string, idsource?: string, boardfilter?: string, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitycheck?: boolean, options?: any) {\n        return AccommodationApiFp(this.configuration).accommodationGetAccommodationLocalized(id, language, idsource, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Accommodation List\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n     * @param {string} [featurefilter] FeatureFilter refers to predefined Features listed in the property SpecialFeatures (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)\n     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)\n     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n     * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;en&#x27;)\n     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccommodationApi\n     */\n    public accommodationGetAccommodations(pagenumber?: number, pagesize?: number, seed?: string, categoryfilter?: string, typefilter?: string, boardfilter?: string, featurefilter?: string, featureidfilter?: string, themefilter?: string, badgefilter?: string, idfilter?: string, locfilter?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitychecklanguage?: string, availabilitycheck?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any) {\n        return AccommodationApiFp(this.configuration).accommodationGetAccommodations(pagenumber, pagesize, seed, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitychecklanguage, availabilitycheck, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Accommodation List Localized\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [language] Localization Language\n     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n     * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)\n     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)\n     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)\n     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)\n     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)\n     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)\n     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccommodationApi\n     */\n    public accommodationGetAccommodationsLocalized(pagenumber?: number, pagesize?: number, seed?: string, language?: string, categoryfilter?: string, typefilter?: string, boardfilter?: string, featurefilter?: string, themefilter?: string, badgefilter?: string, idfilter?: string, locfilter?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, availabilitycheck?: boolean, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return AccommodationApiFp(this.configuration).accommodationGetAccommodationsLocalized(pagenumber, pagesize, seed, language, categoryfilter, typefilter, boardfilter, featurefilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitycheck, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Accommodation Feature List (LTS Features)\n     * @param {string} [source] IF source &#x3D; \\&quot;lts\\&quot; the Features list is returned in XML Format directly from LTS, (default: blank)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccommodationApi\n     */\n    public accommodationGetAllAccommodationFeaturesList(source?: string, options?: any) {\n        return AccommodationApiFp(this.configuration).accommodationGetAllAccommodationFeaturesList(source, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Accommodation Feature Single (LTS Features)\n     * @param {string} id ID of the AccommodationFeature\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccommodationApi\n     */\n    public accommodationGetAllAccommodationFeaturesSingle(id: string, options?: any) {\n        return AccommodationApiFp(this.configuration).accommodationGetAllAccommodationFeaturesSingle(id, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Accommodation Types List\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccommodationApi\n     */\n    public accommodationGetAllAccommodationTypesList(options?: any) {\n        return AccommodationApiFp(this.configuration).accommodationGetAllAccommodationTypesList(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Accommodation Types Single\n     * @param {string} id ID of the AccommodationType\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccommodationApi\n     */\n    public accommodationGetAllAccommodationTypessingle(id: string, options?: any) {\n        return AccommodationApiFp(this.configuration).accommodationGetAllAccommodationTypessingle(id, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Accommodation Changed List by Date\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Accos with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccommodationApi\n     */\n    public accommodationGetAllAccommodationsChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any) {\n        return AccommodationApiFp(this.configuration).accommodationGetAllAccommodationsChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Reduced Accommodation List\n     * @param {string} [language] Localization Language\n     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)\n     * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)\n     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {boolean} [suedtirolmobil] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccommodationApi\n     */\n    public accommodationGetReducedAccosAsync(language?: string, categoryfilter?: string, typefilter?: string, boardfilter?: string, featurefilter?: string, featureidfilter?: string, themefilter?: string, badgefilter?: string, locfilter?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, suedtirolmobil?: boolean, options?: any) {\n        return AccommodationApiFp(this.configuration).accommodationGetReducedAccosAsync(language, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, locfilter, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary POST Available Accommodations HGV(Booking Suedtirol MSS) / LTS on posted IDs only Availability Response NOT AVAILABLE AS OPEN DATA\n     * @param {string} body Posted Accommodation IDs (Separated by ,)\n     * @param {string} [availabilitychecklanguage] Language of the Availability Response\n     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter)\n     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED\n     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED\n     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)\n     * @param {string} [bokfilter] Booking Channels Filter (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check), (default:hgv)) REQUIRED\n     * @param {string} [source] Source of the Requester (possible value: &#x27;sinfo&#x27; &#x3D; Suedtirol.info, &#x27;sbalance&#x27; &#x3D; Südtirol Balance) REQUIRED\n     * @param {string} [detail] Include Offer Details (Boolean, 1 &#x3D; full Details)\n     * @param {boolean} [withoutmssids] Search over all bookable Accommodations on HGV MSS (No Ids have to be provided as Post Data) (default: false)\n     * @param {boolean} [withoutlcsids] Search over all Accommodations on LTS (No Ids have to be provided as Post Data) (default: false)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccommodationApi\n     */\n    public accommodationPostAvailableMSSResponseonlyAccommodations(body: string, availabilitychecklanguage?: string, boardfilter?: string, arrival?: string, departure?: string, roominfo?: string, bokfilter?: string, source?: string, detail?: string, withoutmssids?: boolean, withoutlcsids?: boolean, options?: any) {\n        return AccommodationApiFp(this.configuration).accommodationPostAvailableMSSResponseonlyAccommodations(body, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, detail, withoutmssids, withoutlcsids, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { ActivityPoiReduced } from '../models';\nimport { ActivityTypes } from '../models';\nimport { GBLTSActivity } from '../models';\nimport { GBLTSActivityPoiLocalized } from '../models';\n/**\n * ActivityApi - axios parameter creator\n * @export\n */\nexport const ActivityApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Activity List Localized\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes\n         * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)\n         * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)\n         * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetActivityFilteredLocalized: async (language?: string, pagenumber?: number, pagesize?: number, activitytype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, highlight?: boolean, difficultyfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ActivityLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (activitytype !== undefined) {\n                localVarQueryParameter['activitytype'] = activitytype;\n            }\n\n            if (subtype !== undefined) {\n                localVarQueryParameter['subtype'] = subtype;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (areafilter !== undefined) {\n                localVarQueryParameter['areafilter'] = areafilter;\n            }\n\n            if (distancefilter !== undefined) {\n                localVarQueryParameter['distancefilter'] = distancefilter;\n            }\n\n            if (altitudefilter !== undefined) {\n                localVarQueryParameter['altitudefilter'] = altitudefilter;\n            }\n\n            if (durationfilter !== undefined) {\n                localVarQueryParameter['durationfilter'] = durationfilter;\n            }\n\n            if (highlight !== undefined) {\n                localVarQueryParameter['highlight'] = highlight;\n            }\n\n            if (difficultyfilter !== undefined) {\n                localVarQueryParameter['difficultyfilter'] = difficultyfilter;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Activity List\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes\n         * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)\n         * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)\n         * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;activity&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetActivityList: async (language?: string, pagenumber?: number, pagesize?: number, activitytype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, highlight?: boolean, difficultyfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, updatefrom?: string, searchfilter?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Activity`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (activitytype !== undefined) {\n                localVarQueryParameter['activitytype'] = activitytype;\n            }\n\n            if (subtype !== undefined) {\n                localVarQueryParameter['subtype'] = subtype;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (areafilter !== undefined) {\n                localVarQueryParameter['areafilter'] = areafilter;\n            }\n\n            if (distancefilter !== undefined) {\n                localVarQueryParameter['distancefilter'] = distancefilter;\n            }\n\n            if (altitudefilter !== undefined) {\n                localVarQueryParameter['altitudefilter'] = altitudefilter;\n            }\n\n            if (durationfilter !== undefined) {\n                localVarQueryParameter['durationfilter'] = durationfilter;\n            }\n\n            if (highlight !== undefined) {\n                localVarQueryParameter['highlight'] = highlight;\n            }\n\n            if (difficultyfilter !== undefined) {\n                localVarQueryParameter['difficultyfilter'] = difficultyfilter;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            if (searchfilter !== undefined) {\n                localVarQueryParameter['searchfilter'] = searchfilter;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Activity List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes\n         * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)\n         * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)\n         * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetActivityReduced: async (language?: string, activitytype?: string, subtype?: string, locfilter?: string, areafilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, highlight?: boolean, difficultyfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ActivityReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (activitytype !== undefined) {\n                localVarQueryParameter['activitytype'] = activitytype;\n            }\n\n            if (subtype !== undefined) {\n                localVarQueryParameter['subtype'] = subtype;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (areafilter !== undefined) {\n                localVarQueryParameter['areafilter'] = areafilter;\n            }\n\n            if (distancefilter !== undefined) {\n                localVarQueryParameter['distancefilter'] = distancefilter;\n            }\n\n            if (altitudefilter !== undefined) {\n                localVarQueryParameter['altitudefilter'] = altitudefilter;\n            }\n\n            if (durationfilter !== undefined) {\n                localVarQueryParameter['durationfilter'] = durationfilter;\n            }\n\n            if (highlight !== undefined) {\n                localVarQueryParameter['highlight'] = highlight;\n            }\n\n            if (difficultyfilter !== undefined) {\n                localVarQueryParameter['difficultyfilter'] = difficultyfilter;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Activity Single\n         * @param {string} id ID of the Activity\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetActivitySingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling activityGetActivitySingle.');\n            }\n            const localVarPath = `/api/Activity/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Activity Single Localized\n         * @param {string} id ID of the Activity\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetActivitySingleLocalized: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling activityGetActivitySingleLocalized.');\n            }\n            const localVarPath = `/api/ActivityLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Activity Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetAllActivityChanged: async (pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ActivityChanged`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Activity Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetAllActivityTypesList: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ActivityTypes`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Activity Type Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetAllActivityTypesSingle: async (id: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling activityGetAllActivityTypesSingle.');\n            }\n            const localVarPath = `/api/ActivityTypes/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * ActivityApi - functional programming interface\n * @export\n */\nexport const ActivityApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Activity List Localized\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes\n         * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)\n         * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)\n         * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async activityGetActivityFilteredLocalized(language?: string, pagenumber?: number, pagesize?: number, activitytype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, highlight?: boolean, difficultyfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GBLTSActivityPoiLocalized>>> {\n            const localVarAxiosArgs = await ActivityApiAxiosParamCreator(configuration).activityGetActivityFilteredLocalized(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Activity List\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes\n         * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)\n         * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)\n         * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;activity&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async activityGetActivityList(language?: string, pagenumber?: number, pagesize?: number, activitytype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, highlight?: boolean, difficultyfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, updatefrom?: string, searchfilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GBLTSActivity>>> {\n            const localVarAxiosArgs = await ActivityApiAxiosParamCreator(configuration).activityGetActivityList(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, updatefrom, searchfilter, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Activity List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes\n         * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)\n         * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)\n         * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async activityGetActivityReduced(language?: string, activitytype?: string, subtype?: string, locfilter?: string, areafilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, highlight?: boolean, difficultyfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ActivityPoiReduced>>> {\n            const localVarAxiosArgs = await ActivityApiAxiosParamCreator(configuration).activityGetActivityReduced(language, activitytype, subtype, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Activity Single\n         * @param {string} id ID of the Activity\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async activityGetActivitySingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GBLTSActivity>> {\n            const localVarAxiosArgs = await ActivityApiAxiosParamCreator(configuration).activityGetActivitySingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Activity Single Localized\n         * @param {string} id ID of the Activity\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async activityGetActivitySingleLocalized(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GBLTSActivityPoiLocalized>> {\n            const localVarAxiosArgs = await ActivityApiAxiosParamCreator(configuration).activityGetActivitySingleLocalized(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Activity Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async activityGetAllActivityChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GBLTSActivity>>> {\n            const localVarAxiosArgs = await ActivityApiAxiosParamCreator(configuration).activityGetAllActivityChanged(pagenumber, pagesize, seed, updatefrom, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Activity Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async activityGetAllActivityTypesList(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ActivityTypes>>> {\n            const localVarAxiosArgs = await ActivityApiAxiosParamCreator(configuration).activityGetAllActivityTypesList(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Activity Type Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async activityGetAllActivityTypesSingle(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ActivityTypes>> {\n            const localVarAxiosArgs = await ActivityApiAxiosParamCreator(configuration).activityGetAllActivityTypesSingle(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * ActivityApi - factory interface\n * @export\n */\nexport const ActivityApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET Activity List Localized\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes\n         * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)\n         * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)\n         * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetActivityFilteredLocalized(language?: string, pagenumber?: number, pagesize?: number, activitytype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, highlight?: boolean, difficultyfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<GBLTSActivityPoiLocalized>> {\n            return ActivityApiFp(configuration).activityGetActivityFilteredLocalized(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Activity List\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes\n         * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)\n         * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)\n         * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;activity&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetActivityList(language?: string, pagenumber?: number, pagesize?: number, activitytype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, highlight?: boolean, difficultyfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, updatefrom?: string, searchfilter?: string, options?: any): AxiosPromise<Array<GBLTSActivity>> {\n            return ActivityApiFp(configuration).activityGetActivityList(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, updatefrom, searchfilter, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Activity List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes\n         * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)\n         * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)\n         * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetActivityReduced(language?: string, activitytype?: string, subtype?: string, locfilter?: string, areafilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, highlight?: boolean, difficultyfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, options?: any): AxiosPromise<Array<ActivityPoiReduced>> {\n            return ActivityApiFp(configuration).activityGetActivityReduced(language, activitytype, subtype, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Activity Single\n         * @param {string} id ID of the Activity\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetActivitySingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<GBLTSActivity> {\n            return ActivityApiFp(configuration).activityGetActivitySingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Activity Single Localized\n         * @param {string} id ID of the Activity\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetActivitySingleLocalized(id: string, language?: string, options?: any): AxiosPromise<GBLTSActivityPoiLocalized> {\n            return ActivityApiFp(configuration).activityGetActivitySingleLocalized(id, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Activity Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetAllActivityChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): AxiosPromise<Array<GBLTSActivity>> {\n            return ActivityApiFp(configuration).activityGetAllActivityChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Activity Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetAllActivityTypesList(options?: any): AxiosPromise<Array<ActivityTypes>> {\n            return ActivityApiFp(configuration).activityGetAllActivityTypesList(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Activity Type Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        activityGetAllActivityTypesSingle(id: string, options?: any): AxiosPromise<ActivityTypes> {\n            return ActivityApiFp(configuration).activityGetAllActivityTypesSingle(id, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * ActivityApi - object-oriented interface\n * @export\n * @class ActivityApi\n * @extends {BaseAPI}\n */\nexport class ActivityApi extends BaseAPI {\n    /**\n     * \n     * @summary GET Activity List Localized\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes\n     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)\n     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)\n     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)\n     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)\n     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities\n     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActivityApi\n     */\n    public activityGetActivityFilteredLocalized(language?: string, pagenumber?: number, pagesize?: number, activitytype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, highlight?: boolean, difficultyfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return ActivityApiFp(this.configuration).activityGetActivityFilteredLocalized(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Activity List\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes\n     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)\n     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)\n     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)\n     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)\n     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;activity&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities\n     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActivityApi\n     */\n    public activityGetActivityList(language?: string, pagenumber?: number, pagesize?: number, activitytype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, highlight?: boolean, difficultyfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, updatefrom?: string, searchfilter?: string, options?: any) {\n        return ActivityApiFp(this.configuration).activityGetActivityList(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, updatefrom, searchfilter, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Activity List Reduced\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes\n     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)\n     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)\n     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)\n     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)\n     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities\n     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActivityApi\n     */\n    public activityGetActivityReduced(language?: string, activitytype?: string, subtype?: string, locfilter?: string, areafilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, highlight?: boolean, difficultyfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, options?: any) {\n        return ActivityApiFp(this.configuration).activityGetActivityReduced(language, activitytype, subtype, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Activity Single\n     * @param {string} id ID of the Activity\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActivityApi\n     */\n    public activityGetActivitySingle(id: string, fields?: string, language?: string, options?: any) {\n        return ActivityApiFp(this.configuration).activityGetActivitySingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Activity Single Localized\n     * @param {string} id ID of the Activity\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActivityApi\n     */\n    public activityGetActivitySingleLocalized(id: string, language?: string, options?: any) {\n        return ActivityApiFp(this.configuration).activityGetActivitySingleLocalized(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Activity Changed List by Date\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActivityApi\n     */\n    public activityGetAllActivityChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any) {\n        return ActivityApiFp(this.configuration).activityGetAllActivityChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Activity Types List\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActivityApi\n     */\n    public activityGetAllActivityTypesList(options?: any) {\n        return ActivityApiFp(this.configuration).activityGetAllActivityTypesList(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Activity Type Single\n     * @param {string} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActivityApi\n     */\n    public activityGetAllActivityTypesSingle(id: string, options?: any) {\n        return ActivityApiFp(this.configuration).activityGetAllActivityTypesSingle(id, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { Article } from '../models';\nimport { ArticleBaseInfosLocalized } from '../models';\nimport { ArticleTypes } from '../models';\nimport { ResultOfArticleBaseInfos } from '../models';\n/**\n * ArticleApi - axios parameter creator\n * @export\n */\nexport const ArticleApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Article Single\n         * @param {string} id ID of the Article\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetActivitySingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling articleGetActivitySingle.');\n            }\n            const localVarPath = `/api/Article/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Article Single Localized\n         * @param {string} id ID of the Article\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetActivitySingleLocalized: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling articleGetActivitySingleLocalized.');\n            }\n            const localVarPath = `/api/ArticleLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Article Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (max 1024), (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Article with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetAllArticleChanged: async (pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ArticleChanged`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Article Types Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetAllArticleTypeSingle: async (id: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling articleGetAllArticleTypeSingle.');\n            }\n            const localVarPath = `/api/ArticleTypes/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Article Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetAllArticleTypesList: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ArticleTypes`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Article List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes\n         * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)\n         * @param {string} [langfilter] Language Filter (Gets only Articles Available in the passed Language)\n         * @param {boolean} [sortbyarticledate] Sort By Articledate (&#x27;true&#x27; sorts Articles by Articledate)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetArticleList: async (pagenumber?: number, pagesize?: number, articletype?: string, articlesubtype?: string, idlist?: string, langfilter?: string, sortbyarticledate?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Article`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (articletype !== undefined) {\n                localVarQueryParameter['articletype'] = articletype;\n            }\n\n            if (articlesubtype !== undefined) {\n                localVarQueryParameter['articlesubtype'] = articlesubtype;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (langfilter !== undefined) {\n                localVarQueryParameter['langfilter'] = langfilter;\n            }\n\n            if (sortbyarticledate !== undefined) {\n                localVarQueryParameter['sortbyarticledate'] = sortbyarticledate;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            if (searchfilter !== undefined) {\n                localVarQueryParameter['searchfilter'] = searchfilter;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Article List Localized\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes\n         * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetArticleListLocalized: async (language?: string, pagenumber?: number, pagesize?: number, articletype?: string, articlesubtype?: string, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ArticleLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (articletype !== undefined) {\n                localVarQueryParameter['articletype'] = articletype;\n            }\n\n            if (articlesubtype !== undefined) {\n                localVarQueryParameter['articlesubtype'] = articlesubtype;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Article List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes\n         * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetArticleReducedList: async (language?: string, articletype?: string, articlesubtype?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ArticleReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (articletype !== undefined) {\n                localVarQueryParameter['articletype'] = articletype;\n            }\n\n            if (articlesubtype !== undefined) {\n                localVarQueryParameter['articlesubtype'] = articlesubtype;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * ArticleApi - functional programming interface\n * @export\n */\nexport const ArticleApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Article Single\n         * @param {string} id ID of the Article\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async articleGetActivitySingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Article>> {\n            const localVarAxiosArgs = await ArticleApiAxiosParamCreator(configuration).articleGetActivitySingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Article Single Localized\n         * @param {string} id ID of the Article\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async articleGetActivitySingleLocalized(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ArticleBaseInfosLocalized>> {\n            const localVarAxiosArgs = await ArticleApiAxiosParamCreator(configuration).articleGetActivitySingleLocalized(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Article Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (max 1024), (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Article with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async articleGetAllArticleChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResultOfArticleBaseInfos>> {\n            const localVarAxiosArgs = await ArticleApiAxiosParamCreator(configuration).articleGetAllArticleChanged(pagenumber, pagesize, seed, updatefrom, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Article Types Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async articleGetAllArticleTypeSingle(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ArticleTypes>> {\n            const localVarAxiosArgs = await ArticleApiAxiosParamCreator(configuration).articleGetAllArticleTypeSingle(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Article Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async articleGetAllArticleTypesList(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ArticleTypes>>> {\n            const localVarAxiosArgs = await ArticleApiAxiosParamCreator(configuration).articleGetAllArticleTypesList(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Article List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes\n         * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)\n         * @param {string} [langfilter] Language Filter (Gets only Articles Available in the passed Language)\n         * @param {boolean} [sortbyarticledate] Sort By Articledate (&#x27;true&#x27; sorts Articles by Articledate)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async articleGetArticleList(pagenumber?: number, pagesize?: number, articletype?: string, articlesubtype?: string, idlist?: string, langfilter?: string, sortbyarticledate?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Article>>> {\n            const localVarAxiosArgs = await ArticleApiAxiosParamCreator(configuration).articleGetArticleList(pagenumber, pagesize, articletype, articlesubtype, idlist, langfilter, sortbyarticledate, odhtagfilter, active, odhactive, seed, fields, language, updatefrom, searchfilter, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Article List Localized\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes\n         * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async articleGetArticleListLocalized(language?: string, pagenumber?: number, pagesize?: number, articletype?: string, articlesubtype?: string, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ArticleBaseInfosLocalized>>> {\n            const localVarAxiosArgs = await ArticleApiAxiosParamCreator(configuration).articleGetArticleListLocalized(language, pagenumber, pagesize, articletype, articlesubtype, idlist, odhtagfilter, active, odhactive, seed, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Article List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes\n         * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async articleGetArticleReducedList(language?: string, articletype?: string, articlesubtype?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Article>>> {\n            const localVarAxiosArgs = await ArticleApiAxiosParamCreator(configuration).articleGetArticleReducedList(language, articletype, articlesubtype, odhtagfilter, active, odhactive, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * ArticleApi - factory interface\n * @export\n */\nexport const ArticleApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET Article Single\n         * @param {string} id ID of the Article\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetActivitySingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<Article> {\n            return ArticleApiFp(configuration).articleGetActivitySingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Article Single Localized\n         * @param {string} id ID of the Article\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetActivitySingleLocalized(id: string, language?: string, options?: any): AxiosPromise<ArticleBaseInfosLocalized> {\n            return ArticleApiFp(configuration).articleGetActivitySingleLocalized(id, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Article Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (max 1024), (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Article with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetAllArticleChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): AxiosPromise<ResultOfArticleBaseInfos> {\n            return ArticleApiFp(configuration).articleGetAllArticleChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Article Types Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetAllArticleTypeSingle(id: string, options?: any): AxiosPromise<ArticleTypes> {\n            return ArticleApiFp(configuration).articleGetAllArticleTypeSingle(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Article Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetAllArticleTypesList(options?: any): AxiosPromise<Array<ArticleTypes>> {\n            return ArticleApiFp(configuration).articleGetAllArticleTypesList(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Article List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes\n         * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)\n         * @param {string} [langfilter] Language Filter (Gets only Articles Available in the passed Language)\n         * @param {boolean} [sortbyarticledate] Sort By Articledate (&#x27;true&#x27; sorts Articles by Articledate)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetArticleList(pagenumber?: number, pagesize?: number, articletype?: string, articlesubtype?: string, idlist?: string, langfilter?: string, sortbyarticledate?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): AxiosPromise<Array<Article>> {\n            return ArticleApiFp(configuration).articleGetArticleList(pagenumber, pagesize, articletype, articlesubtype, idlist, langfilter, sortbyarticledate, odhtagfilter, active, odhactive, seed, fields, language, updatefrom, searchfilter, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Article List Localized\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes\n         * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetArticleListLocalized(language?: string, pagenumber?: number, pagesize?: number, articletype?: string, articlesubtype?: string, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, options?: any): AxiosPromise<Array<ArticleBaseInfosLocalized>> {\n            return ArticleApiFp(configuration).articleGetArticleListLocalized(language, pagenumber, pagesize, articletype, articlesubtype, idlist, odhtagfilter, active, odhactive, seed, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Article List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes\n         * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles\n         * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        articleGetArticleReducedList(language?: string, articletype?: string, articlesubtype?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, options?: any): AxiosPromise<Array<Article>> {\n            return ArticleApiFp(configuration).articleGetArticleReducedList(language, articletype, articlesubtype, odhtagfilter, active, odhactive, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * ArticleApi - object-oriented interface\n * @export\n * @class ArticleApi\n * @extends {BaseAPI}\n */\nexport class ArticleApi extends BaseAPI {\n    /**\n     * \n     * @summary GET Article Single\n     * @param {string} id ID of the Article\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ArticleApi\n     */\n    public articleGetActivitySingle(id: string, fields?: string, language?: string, options?: any) {\n        return ArticleApiFp(this.configuration).articleGetActivitySingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Article Single Localized\n     * @param {string} id ID of the Article\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ArticleApi\n     */\n    public articleGetActivitySingleLocalized(id: string, language?: string, options?: any) {\n        return ArticleApiFp(this.configuration).articleGetActivitySingleLocalized(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Article Changed List by Date\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Article with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ArticleApi\n     */\n    public articleGetAllArticleChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any) {\n        return ArticleApiFp(this.configuration).articleGetAllArticleChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Article Types Single\n     * @param {string} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ArticleApi\n     */\n    public articleGetAllArticleTypeSingle(id: string, options?: any) {\n        return ArticleApiFp(this.configuration).articleGetAllArticleTypeSingle(id, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Article Types List\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ArticleApi\n     */\n    public articleGetAllArticleTypesList(options?: any) {\n        return ArticleApiFp(this.configuration).articleGetAllArticleTypesList(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Article List\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes\n     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)\n     * @param {string} [langfilter] Language Filter (Gets only Articles Available in the passed Language)\n     * @param {boolean} [sortbyarticledate] Sort By Articledate (&#x27;true&#x27; sorts Articles by Articledate)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles\n     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ArticleApi\n     */\n    public articleGetArticleList(pagenumber?: number, pagesize?: number, articletype?: string, articlesubtype?: string, idlist?: string, langfilter?: string, sortbyarticledate?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any) {\n        return ArticleApiFp(this.configuration).articleGetArticleList(pagenumber, pagesize, articletype, articlesubtype, idlist, langfilter, sortbyarticledate, odhtagfilter, active, odhactive, seed, fields, language, updatefrom, searchfilter, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Article List Localized\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes\n     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles\n     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ArticleApi\n     */\n    public articleGetArticleListLocalized(language?: string, pagenumber?: number, pagesize?: number, articletype?: string, articlesubtype?: string, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, options?: any) {\n        return ArticleApiFp(this.configuration).articleGetArticleListLocalized(language, pagenumber, pagesize, articletype, articlesubtype, idlist, odhtagfilter, active, odhactive, seed, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Article List Reduced\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes\n     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles\n     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ArticleApi\n     */\n    public articleGetArticleReducedList(language?: string, articletype?: string, articlesubtype?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, options?: any) {\n        return ArticleApiFp(this.configuration).articleGetArticleReducedList(language, articletype, articlesubtype, odhtagfilter, active, odhactive, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { Area } from '../models';\nimport { BaseInfosLocalized } from '../models';\nimport { CommonReduced } from '../models';\nimport { District } from '../models';\nimport { DistrictLocalized } from '../models';\nimport { ExperienceArea } from '../models';\nimport { ExperienceAreaLocalized } from '../models';\nimport { ExperienceAreaName } from '../models';\nimport { MetaRegion } from '../models';\nimport { MetaRegionLocalized } from '../models';\nimport { Municipality } from '../models';\nimport { MunicipalityLocalized } from '../models';\nimport { Region } from '../models';\nimport { RegionLocalized } from '../models';\nimport { SkiArea } from '../models';\nimport { SkiAreaLocalized } from '../models';\nimport { SkiRegion } from '../models';\nimport { SkiRegionLocalized } from '../models';\nimport { Tourismverein } from '../models';\nimport { TourismvereinLocalized } from '../models';\nimport { Wine } from '../models';\n/**\n * CommonApi - axios parameter creator\n * @export\n */\nexport const CommonApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Area Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetAreaSingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetAreaSingle.');\n            }\n            const localVarPath = `/api/Area/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Area List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetAreas: async (elements?: number, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Area`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET District List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetDistrict: async (elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/District`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (visibleinsearch !== undefined) {\n                localVarQueryParameter['visibleinsearch'] = visibleinsearch;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET District Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetDistrictLocalized: async (language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/DistrictLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (visibleinsearch !== undefined) {\n                localVarQueryParameter['visibleinsearch'] = visibleinsearch;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET District Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetDistrictReduced: async (language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/DistrictReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (visibleinsearch !== undefined) {\n                localVarQueryParameter['visibleinsearch'] = visibleinsearch;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET District Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetDistrictSingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetDistrictSingle.');\n            }\n            const localVarPath = `/api/District/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET District Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetDistrictSingleLocalized: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetDistrictSingleLocalized.');\n            }\n            const localVarPath = `/api/DistrictLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET ExperienceArea Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetExperienceAreaSingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetExperienceAreaSingle.');\n            }\n            const localVarPath = `/api/ExperienceArea/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET ExperienceArea Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetExperienceAreaSingleLocalized: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetExperienceAreaSingleLocalized.');\n            }\n            const localVarPath = `/api/ExperienceAreaLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Experiencearea List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetExperienceAreas: async (elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ExperienceArea`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (visibleinsearch !== undefined) {\n                localVarQueryParameter['visibleinsearch'] = visibleinsearch;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET ExperienceArea Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetExperienceAreasLocalized: async (language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ExperienceAreaLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (visibleinsearch !== undefined) {\n                localVarQueryParameter['visibleinsearch'] = visibleinsearch;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET ExperienceArea Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetExperienceAreasReduced: async (language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ExperienceAreaReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (visibleinsearch !== undefined) {\n                localVarQueryParameter['visibleinsearch'] = visibleinsearch;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET MetaRegion Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMetaRegionSingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetMetaRegionSingle.');\n            }\n            const localVarPath = `/api/MetaRegion/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET MetaRegion Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMetaRegionSingleLocalized: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetMetaRegionSingleLocalized.');\n            }\n            const localVarPath = `/api/MetaRegionLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET MetaRegion List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMetaRegions: async (elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/MetaRegion`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET MetaRegion Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMetaRegionsLocalized: async (language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/MetaRegionLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET MetaRegion Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMetaRegionsReduced: async (language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/MetaRegionReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Municipality List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMunicipality: async (elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Municipality`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (visibleinsearch !== undefined) {\n                localVarQueryParameter['visibleinsearch'] = visibleinsearch;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Municipality Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMunicipalityLocalized: async (language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/MunicipalityLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (visibleinsearch !== undefined) {\n                localVarQueryParameter['visibleinsearch'] = visibleinsearch;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Municipality Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMunicipalityReduced: async (language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/MunicipalityReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (visibleinsearch !== undefined) {\n                localVarQueryParameter['visibleinsearch'] = visibleinsearch;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Municipality Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMunicipalitySingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetMunicipalitySingle.');\n            }\n            const localVarPath = `/api/Municipality/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Municipality Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMunicipalitySingleLocalized: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetMunicipalitySingleLocalized.');\n            }\n            const localVarPath = `/api/MunicipalityLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Region Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetRegionSingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetRegionSingle.');\n            }\n            const localVarPath = `/api/Region/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Region Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetRegionSingleLocalized: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetRegionSingleLocalized.');\n            }\n            const localVarPath = `/api/RegionLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Region List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetRegions: async (elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Region`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Region Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetRegionsLocalized: async (language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/RegionLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Region Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetRegionsReduced: async (language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/RegionReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET SkiArea List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiArea: async (elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/SkiArea`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET SkiArea Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiAreaLocalized: async (language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/SkiAreaLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET SkiArea Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiAreaReduced: async (language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/SkiAreaReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET SkiArea Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiAreaSingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetSkiAreaSingle.');\n            }\n            const localVarPath = `/api/SkiArea/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET SkiArea Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiAreaSingleLocalized: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetSkiAreaSingleLocalized.');\n            }\n            const localVarPath = `/api/SkiAreaLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET SkiRegion List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiRegion: async (elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/SkiRegion`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET SkiRegion Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiRegionLocalized: async (language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/SkiRegionLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET SkiRegion Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiRegionReduced: async (language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/SkiRegionReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET SkiRegion Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiRegionSingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetSkiRegionSingle.');\n            }\n            const localVarPath = `/api/SkiRegion/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET SkiRegion Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiRegionSingleLocalized: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetSkiRegionSingleLocalized.');\n            }\n            const localVarPath = `/api/SkiRegionLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET TourismAssociation List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetTourismverein: async (elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/TourismAssociation`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET TourismAssociation Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetTourismvereinLocalized: async (language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/TourismAssociationLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET TourismAssociation Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetTourismvereinReduced: async (language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/TourismAssociationReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET TourismAssociation Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetTourismvereinSingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetTourismvereinSingle.');\n            }\n            const localVarPath = `/api/TourismAssociation/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET TourismAssociation Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetTourismvereinSingleLocalized: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetTourismvereinSingleLocalized.');\n            }\n            const localVarPath = `/api/TourismAssociationLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Wine Awards List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [wineid] WineId\n         * @param {string} [companyid] Company Id\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetWineAwardsList: async (elements?: number, wineid?: string, companyid?: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/WineAward`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (elements !== undefined) {\n                localVarQueryParameter['elements'] = elements;\n            }\n\n            if (wineid !== undefined) {\n                localVarQueryParameter['wineid'] = wineid;\n            }\n\n            if (companyid !== undefined) {\n                localVarQueryParameter['companyid'] = companyid;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Wine Award Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetWineAwardsSingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling commonGetWineAwardsSingle.');\n            }\n            const localVarPath = `/api/WineAward/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * CommonApi - functional programming interface\n * @export\n */\nexport const CommonApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Area Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetAreaSingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Area>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetAreaSingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Area List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetAreas(elements?: number, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Area>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetAreas(elements, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET District List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetDistrict(elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<District>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetDistrict(elements, visibleinsearch, latitude, longitude, radius, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET District Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetDistrictLocalized(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<DistrictLocalized>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetDistrictLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET District Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetDistrictReduced(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<CommonReduced>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetDistrictReduced(language, elements, visibleinsearch, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET District Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetDistrictSingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<District>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetDistrictSingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET District Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetDistrictSingleLocalized(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DistrictLocalized>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetDistrictSingleLocalized(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET ExperienceArea Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetExperienceAreaSingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ExperienceArea>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetExperienceAreaSingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET ExperienceArea Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetExperienceAreaSingleLocalized(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BaseInfosLocalized>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetExperienceAreaSingleLocalized(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Experiencearea List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetExperienceAreas(elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ExperienceArea>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetExperienceAreas(elements, visibleinsearch, latitude, longitude, radius, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET ExperienceArea Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetExperienceAreasLocalized(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ExperienceAreaLocalized>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetExperienceAreasLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET ExperienceArea Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetExperienceAreasReduced(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ExperienceAreaName>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetExperienceAreasReduced(language, elements, visibleinsearch, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET MetaRegion Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetMetaRegionSingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MetaRegion>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetMetaRegionSingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET MetaRegion Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetMetaRegionSingleLocalized(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MetaRegionLocalized>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetMetaRegionSingleLocalized(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET MetaRegion List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetMetaRegions(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<MetaRegion>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetMetaRegions(elements, latitude, longitude, radius, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET MetaRegion Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetMetaRegionsLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<MetaRegionLocalized>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetMetaRegionsLocalized(language, elements, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET MetaRegion Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetMetaRegionsReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<CommonReduced>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetMetaRegionsReduced(language, elements, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Municipality List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetMunicipality(elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Municipality>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetMunicipality(elements, visibleinsearch, latitude, longitude, radius, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Municipality Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetMunicipalityLocalized(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<MunicipalityLocalized>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetMunicipalityLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Municipality Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetMunicipalityReduced(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<CommonReduced>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetMunicipalityReduced(language, elements, visibleinsearch, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Municipality Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetMunicipalitySingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Municipality>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetMunicipalitySingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Municipality Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetMunicipalitySingleLocalized(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MunicipalityLocalized>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetMunicipalitySingleLocalized(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Region Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetRegionSingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Region>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetRegionSingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Region Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetRegionSingleLocalized(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RegionLocalized>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetRegionSingleLocalized(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Region List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetRegions(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Region>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetRegions(elements, latitude, longitude, radius, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Region Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetRegionsLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<RegionLocalized>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetRegionsLocalized(language, elements, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Region Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetRegionsReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<CommonReduced>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetRegionsReduced(language, elements, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET SkiArea List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetSkiArea(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SkiArea>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetSkiArea(elements, latitude, longitude, radius, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET SkiArea Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetSkiAreaLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SkiAreaLocalized>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetSkiAreaLocalized(language, elements, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET SkiArea Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetSkiAreaReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<CommonReduced>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetSkiAreaReduced(language, elements, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET SkiArea Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetSkiAreaSingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SkiArea>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetSkiAreaSingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET SkiArea Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetSkiAreaSingleLocalized(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SkiAreaLocalized>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetSkiAreaSingleLocalized(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET SkiRegion List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetSkiRegion(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SkiRegion>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetSkiRegion(elements, latitude, longitude, radius, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET SkiRegion Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetSkiRegionLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SkiRegionLocalized>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetSkiRegionLocalized(language, elements, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET SkiRegion Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetSkiRegionReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<CommonReduced>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetSkiRegionReduced(language, elements, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET SkiRegion Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetSkiRegionSingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SkiRegion>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetSkiRegionSingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET SkiRegion Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetSkiRegionSingleLocalized(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SkiRegionLocalized>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetSkiRegionSingleLocalized(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET TourismAssociation List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetTourismverein(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Tourismverein>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetTourismverein(elements, latitude, longitude, radius, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET TourismAssociation Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetTourismvereinLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<TourismvereinLocalized>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetTourismvereinLocalized(language, elements, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET TourismAssociation Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetTourismvereinReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<CommonReduced>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetTourismvereinReduced(language, elements, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET TourismAssociation Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetTourismvereinSingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Tourismverein>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetTourismvereinSingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET TourismAssociation Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetTourismvereinSingleLocalized(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TourismvereinLocalized>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetTourismvereinSingleLocalized(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Wine Awards List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [wineid] WineId\n         * @param {string} [companyid] Company Id\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetWineAwardsList(elements?: number, wineid?: string, companyid?: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Wine>>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetWineAwardsList(elements, wineid, companyid, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Wine Award Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async commonGetWineAwardsSingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Wine>> {\n            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).commonGetWineAwardsSingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * CommonApi - factory interface\n * @export\n */\nexport const CommonApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET Area Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetAreaSingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<Area> {\n            return CommonApiFp(configuration).commonGetAreaSingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Area List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetAreas(elements?: number, fields?: string, language?: string, options?: any): AxiosPromise<Array<Area>> {\n            return CommonApiFp(configuration).commonGetAreas(elements, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET District List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetDistrict(elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): AxiosPromise<Array<District>> {\n            return CommonApiFp(configuration).commonGetDistrict(elements, visibleinsearch, latitude, longitude, radius, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET District Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetDistrictLocalized(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<DistrictLocalized>> {\n            return CommonApiFp(configuration).commonGetDistrictLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET District Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetDistrictReduced(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<CommonReduced>> {\n            return CommonApiFp(configuration).commonGetDistrictReduced(language, elements, visibleinsearch, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET District Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetDistrictSingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<District> {\n            return CommonApiFp(configuration).commonGetDistrictSingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET District Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetDistrictSingleLocalized(id: string, language?: string, options?: any): AxiosPromise<DistrictLocalized> {\n            return CommonApiFp(configuration).commonGetDistrictSingleLocalized(id, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET ExperienceArea Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetExperienceAreaSingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<ExperienceArea> {\n            return CommonApiFp(configuration).commonGetExperienceAreaSingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET ExperienceArea Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetExperienceAreaSingleLocalized(id: string, language?: string, options?: any): AxiosPromise<BaseInfosLocalized> {\n            return CommonApiFp(configuration).commonGetExperienceAreaSingleLocalized(id, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Experiencearea List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetExperienceAreas(elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): AxiosPromise<Array<ExperienceArea>> {\n            return CommonApiFp(configuration).commonGetExperienceAreas(elements, visibleinsearch, latitude, longitude, radius, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET ExperienceArea Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetExperienceAreasLocalized(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<ExperienceAreaLocalized>> {\n            return CommonApiFp(configuration).commonGetExperienceAreasLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET ExperienceArea Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetExperienceAreasReduced(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<ExperienceAreaName>> {\n            return CommonApiFp(configuration).commonGetExperienceAreasReduced(language, elements, visibleinsearch, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET MetaRegion Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMetaRegionSingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<MetaRegion> {\n            return CommonApiFp(configuration).commonGetMetaRegionSingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET MetaRegion Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMetaRegionSingleLocalized(id: string, language?: string, options?: any): AxiosPromise<MetaRegionLocalized> {\n            return CommonApiFp(configuration).commonGetMetaRegionSingleLocalized(id, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET MetaRegion List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMetaRegions(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): AxiosPromise<Array<MetaRegion>> {\n            return CommonApiFp(configuration).commonGetMetaRegions(elements, latitude, longitude, radius, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET MetaRegion Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMetaRegionsLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<MetaRegionLocalized>> {\n            return CommonApiFp(configuration).commonGetMetaRegionsLocalized(language, elements, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET MetaRegion Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMetaRegionsReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<CommonReduced>> {\n            return CommonApiFp(configuration).commonGetMetaRegionsReduced(language, elements, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Municipality List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMunicipality(elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): AxiosPromise<Array<Municipality>> {\n            return CommonApiFp(configuration).commonGetMunicipality(elements, visibleinsearch, latitude, longitude, radius, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Municipality Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMunicipalityLocalized(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<MunicipalityLocalized>> {\n            return CommonApiFp(configuration).commonGetMunicipalityLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Municipality Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMunicipalityReduced(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<CommonReduced>> {\n            return CommonApiFp(configuration).commonGetMunicipalityReduced(language, elements, visibleinsearch, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Municipality Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMunicipalitySingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<Municipality> {\n            return CommonApiFp(configuration).commonGetMunicipalitySingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Municipality Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetMunicipalitySingleLocalized(id: string, language?: string, options?: any): AxiosPromise<MunicipalityLocalized> {\n            return CommonApiFp(configuration).commonGetMunicipalitySingleLocalized(id, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Region Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetRegionSingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<Region> {\n            return CommonApiFp(configuration).commonGetRegionSingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Region Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetRegionSingleLocalized(id: string, language?: string, options?: any): AxiosPromise<RegionLocalized> {\n            return CommonApiFp(configuration).commonGetRegionSingleLocalized(id, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Region List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetRegions(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): AxiosPromise<Array<Region>> {\n            return CommonApiFp(configuration).commonGetRegions(elements, latitude, longitude, radius, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Region Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetRegionsLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<RegionLocalized>> {\n            return CommonApiFp(configuration).commonGetRegionsLocalized(language, elements, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Region Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetRegionsReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<CommonReduced>> {\n            return CommonApiFp(configuration).commonGetRegionsReduced(language, elements, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET SkiArea List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiArea(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): AxiosPromise<Array<SkiArea>> {\n            return CommonApiFp(configuration).commonGetSkiArea(elements, latitude, longitude, radius, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET SkiArea Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiAreaLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<SkiAreaLocalized>> {\n            return CommonApiFp(configuration).commonGetSkiAreaLocalized(language, elements, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET SkiArea Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiAreaReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<CommonReduced>> {\n            return CommonApiFp(configuration).commonGetSkiAreaReduced(language, elements, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET SkiArea Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiAreaSingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<SkiArea> {\n            return CommonApiFp(configuration).commonGetSkiAreaSingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET SkiArea Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiAreaSingleLocalized(id: string, language?: string, options?: any): AxiosPromise<SkiAreaLocalized> {\n            return CommonApiFp(configuration).commonGetSkiAreaSingleLocalized(id, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET SkiRegion List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiRegion(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): AxiosPromise<Array<SkiRegion>> {\n            return CommonApiFp(configuration).commonGetSkiRegion(elements, latitude, longitude, radius, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET SkiRegion Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiRegionLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<SkiRegionLocalized>> {\n            return CommonApiFp(configuration).commonGetSkiRegionLocalized(language, elements, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET SkiRegion Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiRegionReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<CommonReduced>> {\n            return CommonApiFp(configuration).commonGetSkiRegionReduced(language, elements, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET SkiRegion Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiRegionSingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<SkiRegion> {\n            return CommonApiFp(configuration).commonGetSkiRegionSingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET SkiRegion Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetSkiRegionSingleLocalized(id: string, language?: string, options?: any): AxiosPromise<SkiRegionLocalized> {\n            return CommonApiFp(configuration).commonGetSkiRegionSingleLocalized(id, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET TourismAssociation List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetTourismverein(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any): AxiosPromise<Array<Tourismverein>> {\n            return CommonApiFp(configuration).commonGetTourismverein(elements, latitude, longitude, radius, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET TourismAssociation Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetTourismvereinLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<TourismvereinLocalized>> {\n            return CommonApiFp(configuration).commonGetTourismvereinLocalized(language, elements, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET TourismAssociation Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetTourismvereinReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<CommonReduced>> {\n            return CommonApiFp(configuration).commonGetTourismvereinReduced(language, elements, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET TourismAssociation Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetTourismvereinSingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<Tourismverein> {\n            return CommonApiFp(configuration).commonGetTourismvereinSingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET TourismAssociation Localized Single\n         * @param {string} id ID of the requested data\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetTourismvereinSingleLocalized(id: string, language?: string, options?: any): AxiosPromise<TourismvereinLocalized> {\n            return CommonApiFp(configuration).commonGetTourismvereinSingleLocalized(id, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Wine Awards List\n         * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n         * @param {string} [wineid] WineId\n         * @param {string} [companyid] Company Id\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetWineAwardsList(elements?: number, wineid?: string, companyid?: string, fields?: string, language?: string, options?: any): AxiosPromise<Array<Wine>> {\n            return CommonApiFp(configuration).commonGetWineAwardsList(elements, wineid, companyid, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Wine Award Single\n         * @param {string} id ID of the requested data\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        commonGetWineAwardsSingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<Wine> {\n            return CommonApiFp(configuration).commonGetWineAwardsSingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * CommonApi - object-oriented interface\n * @export\n * @class CommonApi\n * @extends {BaseAPI}\n */\nexport class CommonApi extends BaseAPI {\n    /**\n     * \n     * @summary GET Area Single\n     * @param {string} id ID of the requested data\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetAreaSingle(id: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetAreaSingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Area List\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetAreas(elements?: number, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetAreas(elements, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET District List\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetDistrict(elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetDistrict(elements, visibleinsearch, latitude, longitude, radius, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET District Localized List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetDistrictLocalized(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetDistrictLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET District Reduced List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetDistrictReduced(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetDistrictReduced(language, elements, visibleinsearch, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET District Single\n     * @param {string} id ID of the requested data\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetDistrictSingle(id: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetDistrictSingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET District Localized Single\n     * @param {string} id ID of the requested data\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetDistrictSingleLocalized(id: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetDistrictSingleLocalized(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET ExperienceArea Single\n     * @param {string} id ID of the requested data\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetExperienceAreaSingle(id: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetExperienceAreaSingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET ExperienceArea Localized Single\n     * @param {string} id ID of the requested data\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetExperienceAreaSingleLocalized(id: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetExperienceAreaSingleLocalized(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Experiencearea List\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetExperienceAreas(elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetExperienceAreas(elements, visibleinsearch, latitude, longitude, radius, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET ExperienceArea Localized List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetExperienceAreasLocalized(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetExperienceAreasLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET ExperienceArea Reduced List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetExperienceAreasReduced(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetExperienceAreasReduced(language, elements, visibleinsearch, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET MetaRegion Single\n     * @param {string} id ID of the requested data\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetMetaRegionSingle(id: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetMetaRegionSingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET MetaRegion Localized Single\n     * @param {string} id ID of the requested data\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetMetaRegionSingleLocalized(id: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetMetaRegionSingleLocalized(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET MetaRegion List\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetMetaRegions(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetMetaRegions(elements, latitude, longitude, radius, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET MetaRegion Localized List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetMetaRegionsLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetMetaRegionsLocalized(language, elements, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET MetaRegion Reduced List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetMetaRegionsReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetMetaRegionsReduced(language, elements, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Municipality List\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetMunicipality(elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetMunicipality(elements, visibleinsearch, latitude, longitude, radius, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Municipality Localized List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetMunicipalityLocalized(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetMunicipalityLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Municipality Reduced List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetMunicipalityReduced(language?: string, elements?: number, visibleinsearch?: string, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetMunicipalityReduced(language, elements, visibleinsearch, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Municipality Single\n     * @param {string} id ID of the requested data\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetMunicipalitySingle(id: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetMunicipalitySingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Municipality Localized Single\n     * @param {string} id ID of the requested data\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetMunicipalitySingleLocalized(id: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetMunicipalitySingleLocalized(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Region Single\n     * @param {string} id ID of the requested data\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetRegionSingle(id: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetRegionSingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Region Localized Single\n     * @param {string} id ID of the requested data\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetRegionSingleLocalized(id: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetRegionSingleLocalized(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Region List\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetRegions(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetRegions(elements, latitude, longitude, radius, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Region Localized List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetRegionsLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetRegionsLocalized(language, elements, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Region Reduced List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetRegionsReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetRegionsReduced(language, elements, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET SkiArea List\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetSkiArea(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetSkiArea(elements, latitude, longitude, radius, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET SkiArea Localized List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetSkiAreaLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetSkiAreaLocalized(language, elements, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET SkiArea Reduced List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetSkiAreaReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetSkiAreaReduced(language, elements, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET SkiArea Single\n     * @param {string} id ID of the requested data\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetSkiAreaSingle(id: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetSkiAreaSingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET SkiArea Localized Single\n     * @param {string} id ID of the requested data\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetSkiAreaSingleLocalized(id: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetSkiAreaSingleLocalized(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET SkiRegion List\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetSkiRegion(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetSkiRegion(elements, latitude, longitude, radius, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET SkiRegion Localized List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetSkiRegionLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetSkiRegionLocalized(language, elements, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET SkiRegion Reduced List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetSkiRegionReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetSkiRegionReduced(language, elements, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET SkiRegion Single\n     * @param {string} id ID of the requested data\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetSkiRegionSingle(id: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetSkiRegionSingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET SkiRegion Localized Single\n     * @param {string} id ID of the requested data\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetSkiRegionSingleLocalized(id: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetSkiRegionSingleLocalized(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET TourismAssociation List\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetTourismverein(elements?: number, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetTourismverein(elements, latitude, longitude, radius, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET TourismAssociation Localized List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetTourismvereinLocalized(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetTourismvereinLocalized(language, elements, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET TourismAssociation Reduced List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetTourismvereinReduced(language?: string, elements?: number, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetTourismvereinReduced(language, elements, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET TourismAssociation Single\n     * @param {string} id ID of the requested data\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetTourismvereinSingle(id: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetTourismvereinSingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET TourismAssociation Localized Single\n     * @param {string} id ID of the requested data\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetTourismvereinSingleLocalized(id: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetTourismvereinSingleLocalized(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Wine Awards List\n     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)\n     * @param {string} [wineid] WineId\n     * @param {string} [companyid] Company Id\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetWineAwardsList(elements?: number, wineid?: string, companyid?: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetWineAwardsList(elements, wineid, companyid, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Wine Award Single\n     * @param {string} id ID of the requested data\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommonApi\n     */\n    public commonGetWineAwardsSingle(id: string, fields?: string, language?: string, options?: any) {\n        return CommonApiFp(this.configuration).commonGetWineAwardsSingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { Event } from '../models';\nimport { EventLocalized } from '../models';\nimport { EventReduced } from '../models';\nimport { EventTypes } from '../models';\n/**\n * EventApi - axios parameter creator\n * @export\n */\nexport const EventApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Event Topic List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetAllEventTopicList: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/EventTopics`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Event Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Event with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetAllEventsChanged: async (pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/EventChanged`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Event Localized Single\n         * @param {string} id ID of the Event\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetEventLocalizedSingle: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling eventGetEventLocalizedSingle.');\n            }\n            const localVarPath = `/api/EventLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Event Single\n         * @param {string} id ID of the Event\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetEventSingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling eventGetEventSingle.');\n            }\n            const localVarPath = `/api/Event/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Event List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)\n         * @param {string} [typefilter] Typefilter (Type of Event: not used yet)\n         * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK\n         * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)\n         * @param {string} [source] Source Filter (Filter by datasource &#x27;lts&#x27;)\n         * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [sort] Sorting of Events (&#x27;desc&#x27;: Descending, default, &#x27;asc&#x27;: Ascending)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [langfilter] \n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetEvents: async (pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, rancfilter?: string, typefilter?: string, topicfilter?: string, orgfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, begindate?: string, enddate?: string, sort?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, langfilter?: string, language?: string, updatefrom?: string, searchfilter?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Event`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (rancfilter !== undefined) {\n                localVarQueryParameter['rancfilter'] = rancfilter;\n            }\n\n            if (typefilter !== undefined) {\n                localVarQueryParameter['typefilter'] = typefilter;\n            }\n\n            if (topicfilter !== undefined) {\n                localVarQueryParameter['topicfilter'] = topicfilter;\n            }\n\n            if (orgfilter !== undefined) {\n                localVarQueryParameter['orgfilter'] = orgfilter;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (begindate !== undefined) {\n                localVarQueryParameter['begindate'] = begindate;\n            }\n\n            if (enddate !== undefined) {\n                localVarQueryParameter['enddate'] = enddate;\n            }\n\n            if (sort !== undefined) {\n                localVarQueryParameter['sort'] = sort;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (langfilter !== undefined) {\n                localVarQueryParameter['langfilter'] = langfilter;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            if (searchfilter !== undefined) {\n                localVarQueryParameter['searchfilter'] = searchfilter;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Event Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)\n         * @param {string} [typefilter] Typefilter (Type of Event: not used yet)\n         * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK\n         * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)\n         * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetEventsLocalized: async (language?: string, pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, rancfilter?: string, typefilter?: string, topicfilter?: string, orgfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, begindate?: string, enddate?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/EventLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (rancfilter !== undefined) {\n                localVarQueryParameter['rancfilter'] = rancfilter;\n            }\n\n            if (typefilter !== undefined) {\n                localVarQueryParameter['typefilter'] = typefilter;\n            }\n\n            if (topicfilter !== undefined) {\n                localVarQueryParameter['topicfilter'] = topicfilter;\n            }\n\n            if (orgfilter !== undefined) {\n                localVarQueryParameter['orgfilter'] = orgfilter;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (begindate !== undefined) {\n                localVarQueryParameter['begindate'] = begindate;\n            }\n\n            if (enddate !== undefined) {\n                localVarQueryParameter['enddate'] = enddate;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Event List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)\n         * @param {string} [typefilter] Typefilter (Type of Event: not used yet)\n         * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK\n         * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)\n         * @param {string} [source] \n         * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)\n         * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetEventsReduced: async (language?: string, locfilter?: string, rancfilter?: string, typefilter?: string, topicfilter?: string, orgfilter?: string, odhtagfilter?: string, source?: string, active?: boolean, odhactive?: boolean, begindate?: string, enddate?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/EventReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (rancfilter !== undefined) {\n                localVarQueryParameter['rancfilter'] = rancfilter;\n            }\n\n            if (typefilter !== undefined) {\n                localVarQueryParameter['typefilter'] = typefilter;\n            }\n\n            if (topicfilter !== undefined) {\n                localVarQueryParameter['topicfilter'] = topicfilter;\n            }\n\n            if (orgfilter !== undefined) {\n                localVarQueryParameter['orgfilter'] = orgfilter;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (begindate !== undefined) {\n                localVarQueryParameter['begindate'] = begindate;\n            }\n\n            if (enddate !== undefined) {\n                localVarQueryParameter['enddate'] = enddate;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Event Topic Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetSingleEventTopicList: async (id: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling eventGetSingleEventTopicList.');\n            }\n            const localVarPath = `/api/EventTopics/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * EventApi - functional programming interface\n * @export\n */\nexport const EventApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Event Topic List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async eventGetAllEventTopicList(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<EventTypes>>> {\n            const localVarAxiosArgs = await EventApiAxiosParamCreator(configuration).eventGetAllEventTopicList(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Event Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Event with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async eventGetAllEventsChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Event>>> {\n            const localVarAxiosArgs = await EventApiAxiosParamCreator(configuration).eventGetAllEventsChanged(pagenumber, pagesize, seed, updatefrom, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Event Localized Single\n         * @param {string} id ID of the Event\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async eventGetEventLocalizedSingle(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EventLocalized>> {\n            const localVarAxiosArgs = await EventApiAxiosParamCreator(configuration).eventGetEventLocalizedSingle(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Event Single\n         * @param {string} id ID of the Event\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async eventGetEventSingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Event>> {\n            const localVarAxiosArgs = await EventApiAxiosParamCreator(configuration).eventGetEventSingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Event List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)\n         * @param {string} [typefilter] Typefilter (Type of Event: not used yet)\n         * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK\n         * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)\n         * @param {string} [source] Source Filter (Filter by datasource &#x27;lts&#x27;)\n         * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [sort] Sorting of Events (&#x27;desc&#x27;: Descending, default, &#x27;asc&#x27;: Ascending)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [langfilter] \n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async eventGetEvents(pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, rancfilter?: string, typefilter?: string, topicfilter?: string, orgfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, begindate?: string, enddate?: string, sort?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, langfilter?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Event>>> {\n            const localVarAxiosArgs = await EventApiAxiosParamCreator(configuration).eventGetEvents(pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, source, begindate, enddate, sort, seed, latitude, longitude, radius, fields, langfilter, language, updatefrom, searchfilter, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Event Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)\n         * @param {string} [typefilter] Typefilter (Type of Event: not used yet)\n         * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK\n         * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)\n         * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async eventGetEventsLocalized(language?: string, pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, rancfilter?: string, typefilter?: string, topicfilter?: string, orgfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, begindate?: string, enddate?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<EventLocalized>>> {\n            const localVarAxiosArgs = await EventApiAxiosParamCreator(configuration).eventGetEventsLocalized(language, pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, begindate, enddate, seed, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Event List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)\n         * @param {string} [typefilter] Typefilter (Type of Event: not used yet)\n         * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK\n         * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)\n         * @param {string} [source] \n         * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)\n         * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async eventGetEventsReduced(language?: string, locfilter?: string, rancfilter?: string, typefilter?: string, topicfilter?: string, orgfilter?: string, odhtagfilter?: string, source?: string, active?: boolean, odhactive?: boolean, begindate?: string, enddate?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<EventReduced>>> {\n            const localVarAxiosArgs = await EventApiAxiosParamCreator(configuration).eventGetEventsReduced(language, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, source, active, odhactive, begindate, enddate, latitude, longitude, radius, fields, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Event Topic Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async eventGetSingleEventTopicList(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<EventTypes>>> {\n            const localVarAxiosArgs = await EventApiAxiosParamCreator(configuration).eventGetSingleEventTopicList(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * EventApi - factory interface\n * @export\n */\nexport const EventApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET Event Topic List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetAllEventTopicList(options?: any): AxiosPromise<Array<EventTypes>> {\n            return EventApiFp(configuration).eventGetAllEventTopicList(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Event Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Event with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetAllEventsChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): AxiosPromise<Array<Event>> {\n            return EventApiFp(configuration).eventGetAllEventsChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Event Localized Single\n         * @param {string} id ID of the Event\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetEventLocalizedSingle(id: string, language?: string, options?: any): AxiosPromise<EventLocalized> {\n            return EventApiFp(configuration).eventGetEventLocalizedSingle(id, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Event Single\n         * @param {string} id ID of the Event\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetEventSingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<Event> {\n            return EventApiFp(configuration).eventGetEventSingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Event List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)\n         * @param {string} [typefilter] Typefilter (Type of Event: not used yet)\n         * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK\n         * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)\n         * @param {string} [source] Source Filter (Filter by datasource &#x27;lts&#x27;)\n         * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [sort] Sorting of Events (&#x27;desc&#x27;: Descending, default, &#x27;asc&#x27;: Ascending)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [langfilter] \n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetEvents(pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, rancfilter?: string, typefilter?: string, topicfilter?: string, orgfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, begindate?: string, enddate?: string, sort?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, langfilter?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): AxiosPromise<Array<Event>> {\n            return EventApiFp(configuration).eventGetEvents(pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, source, begindate, enddate, sort, seed, latitude, longitude, radius, fields, langfilter, language, updatefrom, searchfilter, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Event Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)\n         * @param {string} [typefilter] Typefilter (Type of Event: not used yet)\n         * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK\n         * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)\n         * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetEventsLocalized(language?: string, pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, rancfilter?: string, typefilter?: string, topicfilter?: string, orgfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, begindate?: string, enddate?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<EventLocalized>> {\n            return EventApiFp(configuration).eventGetEventsLocalized(language, pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, begindate, enddate, seed, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Event List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)\n         * @param {string} [typefilter] Typefilter (Type of Event: not used yet)\n         * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK\n         * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)\n         * @param {string} [source] \n         * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)\n         * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetEventsReduced(language?: string, locfilter?: string, rancfilter?: string, typefilter?: string, topicfilter?: string, orgfilter?: string, odhtagfilter?: string, source?: string, active?: boolean, odhactive?: boolean, begindate?: string, enddate?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, options?: any): AxiosPromise<Array<EventReduced>> {\n            return EventApiFp(configuration).eventGetEventsReduced(language, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, source, active, odhactive, begindate, enddate, latitude, longitude, radius, fields, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Event Topic Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        eventGetSingleEventTopicList(id: string, options?: any): AxiosPromise<Array<EventTypes>> {\n            return EventApiFp(configuration).eventGetSingleEventTopicList(id, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * EventApi - object-oriented interface\n * @export\n * @class EventApi\n * @extends {BaseAPI}\n */\nexport class EventApi extends BaseAPI {\n    /**\n     * \n     * @summary GET Event Topic List\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EventApi\n     */\n    public eventGetAllEventTopicList(options?: any) {\n        return EventApiFp(this.configuration).eventGetAllEventTopicList(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Event Changed List by Date\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Event with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EventApi\n     */\n    public eventGetAllEventsChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any) {\n        return EventApiFp(this.configuration).eventGetAllEventsChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Event Localized Single\n     * @param {string} id ID of the Event\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EventApi\n     */\n    public eventGetEventLocalizedSingle(id: string, language?: string, options?: any) {\n        return EventApiFp(this.configuration).eventGetEventLocalizedSingle(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Event Single\n     * @param {string} id ID of the Event\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EventApi\n     */\n    public eventGetEventSingle(id: string, fields?: string, language?: string, options?: any) {\n        return EventApiFp(this.configuration).eventGetEventSingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Event List\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)\n     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)\n     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK\n     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)\n     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)\n     * @param {string} [source] Source Filter (Filter by datasource &#x27;lts&#x27;)\n     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)\n     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)\n     * @param {string} [sort] Sorting of Events (&#x27;desc&#x27;: Descending, default, &#x27;asc&#x27;: Ascending)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [langfilter] \n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EventApi\n     */\n    public eventGetEvents(pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, rancfilter?: string, typefilter?: string, topicfilter?: string, orgfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, begindate?: string, enddate?: string, sort?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, langfilter?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any) {\n        return EventApiFp(this.configuration).eventGetEvents(pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, source, begindate, enddate, sort, seed, latitude, longitude, radius, fields, langfilter, language, updatefrom, searchfilter, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Event Localized List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)\n     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)\n     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK\n     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)\n     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)\n     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)\n     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EventApi\n     */\n    public eventGetEventsLocalized(language?: string, pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, rancfilter?: string, typefilter?: string, topicfilter?: string, orgfilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, begindate?: string, enddate?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return EventApiFp(this.configuration).eventGetEventsLocalized(language, pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, begindate, enddate, seed, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Event List Reduced\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)\n     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)\n     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK\n     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)\n     * @param {string} [source] \n     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)\n     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)\n     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)\n     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EventApi\n     */\n    public eventGetEventsReduced(language?: string, locfilter?: string, rancfilter?: string, typefilter?: string, topicfilter?: string, orgfilter?: string, odhtagfilter?: string, source?: string, active?: boolean, odhactive?: boolean, begindate?: string, enddate?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, options?: any) {\n        return EventApiFp(this.configuration).eventGetEventsReduced(language, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, source, active, odhactive, begindate, enddate, latitude, longitude, radius, fields, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Event Topic Single\n     * @param {string} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EventApi\n     */\n    public eventGetSingleEventTopicList(id: string, options?: any) {\n        return EventApiFp(this.configuration).eventGetSingleEventTopicList(id, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { Gastronomy } from '../models';\nimport { GastronomyLocalized } from '../models';\nimport { GastronomyReduced } from '../models';\nimport { GastronomyTypes } from '../models';\n/**\n * GastronomyApi - axios parameter creator\n * @export\n */\nexport const GastronomyApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Gastronomy Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetAllGastronomyChanged: async (pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/GastronomyChanged`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetAllGastronomyTypesList: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/GastronomyTypes`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy Types Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetApiGastronomyTypesById: async (id: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling gastronomyGetApiGastronomyTypesById.');\n            }\n            const localVarPath = `/api/GastronomyTypes/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n         * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)\n         * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)\n         * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)\n         * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))\n         * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetGastronomyList: async (pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, categorycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Gastronomy`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (dishcodefilter !== undefined) {\n                localVarQueryParameter['dishcodefilter'] = dishcodefilter;\n            }\n\n            if (ceremonycodefilter !== undefined) {\n                localVarQueryParameter['ceremonycodefilter'] = ceremonycodefilter;\n            }\n\n            if (categorycodefilter !== undefined) {\n                localVarQueryParameter['categorycodefilter'] = categorycodefilter;\n            }\n\n            if (facilitycodefilter !== undefined) {\n                localVarQueryParameter['facilitycodefilter'] = facilitycodefilter;\n            }\n\n            if (cuisinecodefilter !== undefined) {\n                localVarQueryParameter['cuisinecodefilter'] = cuisinecodefilter;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            if (searchfilter !== undefined) {\n                localVarQueryParameter['searchfilter'] = searchfilter;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n         * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)\n         * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)\n         * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)\n         * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))\n         * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetGastronomyListLocalized: async (language?: string, pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, categorycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/GastronomyLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (dishcodefilter !== undefined) {\n                localVarQueryParameter['dishcodefilter'] = dishcodefilter;\n            }\n\n            if (ceremonycodefilter !== undefined) {\n                localVarQueryParameter['ceremonycodefilter'] = ceremonycodefilter;\n            }\n\n            if (categorycodefilter !== undefined) {\n                localVarQueryParameter['categorycodefilter'] = categorycodefilter;\n            }\n\n            if (facilitycodefilter !== undefined) {\n                localVarQueryParameter['facilitycodefilter'] = facilitycodefilter;\n            }\n\n            if (cuisinecodefilter !== undefined) {\n                localVarQueryParameter['cuisinecodefilter'] = cuisinecodefilter;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n         * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)\n         * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)\n         * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)\n         * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))\n         * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetGastronomyListReduced: async (language?: string, locfilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, categorycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/GastronomyReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (dishcodefilter !== undefined) {\n                localVarQueryParameter['dishcodefilter'] = dishcodefilter;\n            }\n\n            if (ceremonycodefilter !== undefined) {\n                localVarQueryParameter['ceremonycodefilter'] = ceremonycodefilter;\n            }\n\n            if (categorycodefilter !== undefined) {\n                localVarQueryParameter['categorycodefilter'] = categorycodefilter;\n            }\n\n            if (facilitycodefilter !== undefined) {\n                localVarQueryParameter['facilitycodefilter'] = facilitycodefilter;\n            }\n\n            if (cuisinecodefilter !== undefined) {\n                localVarQueryParameter['cuisinecodefilter'] = cuisinecodefilter;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy Single\n         * @param {string} id ID of the Gastronomy\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetGastronomySingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling gastronomyGetGastronomySingle.');\n            }\n            const localVarPath = `/api/Gastronomy/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy Localized Single\n         * @param {string} id ID of the Gastronomy\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetGastronomySingleLocalized: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling gastronomyGetGastronomySingleLocalized.');\n            }\n            const localVarPath = `/api/GastronomyLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * GastronomyApi - functional programming interface\n * @export\n */\nexport const GastronomyApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Gastronomy Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async gastronomyGetAllGastronomyChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Gastronomy>>> {\n            const localVarAxiosArgs = await GastronomyApiAxiosParamCreator(configuration).gastronomyGetAllGastronomyChanged(pagenumber, pagesize, seed, updatefrom, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async gastronomyGetAllGastronomyTypesList(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GastronomyTypes>>> {\n            const localVarAxiosArgs = await GastronomyApiAxiosParamCreator(configuration).gastronomyGetAllGastronomyTypesList(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy Types Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async gastronomyGetApiGastronomyTypesById(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GastronomyTypes>> {\n            const localVarAxiosArgs = await GastronomyApiAxiosParamCreator(configuration).gastronomyGetApiGastronomyTypesById(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n         * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)\n         * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)\n         * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)\n         * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))\n         * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async gastronomyGetGastronomyList(pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, categorycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Gastronomy>>> {\n            const localVarAxiosArgs = await GastronomyApiAxiosParamCreator(configuration).gastronomyGetGastronomyList(pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n         * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)\n         * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)\n         * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)\n         * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))\n         * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async gastronomyGetGastronomyListLocalized(language?: string, pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, categorycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GastronomyLocalized>>> {\n            const localVarAxiosArgs = await GastronomyApiAxiosParamCreator(configuration).gastronomyGetGastronomyListLocalized(language, pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n         * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)\n         * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)\n         * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)\n         * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))\n         * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async gastronomyGetGastronomyListReduced(language?: string, locfilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, categorycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GastronomyReduced>>> {\n            const localVarAxiosArgs = await GastronomyApiAxiosParamCreator(configuration).gastronomyGetGastronomyListReduced(language, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy Single\n         * @param {string} id ID of the Gastronomy\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async gastronomyGetGastronomySingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Gastronomy>> {\n            const localVarAxiosArgs = await GastronomyApiAxiosParamCreator(configuration).gastronomyGetGastronomySingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Gastronomy Localized Single\n         * @param {string} id ID of the Gastronomy\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async gastronomyGetGastronomySingleLocalized(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GastronomyLocalized>> {\n            const localVarAxiosArgs = await GastronomyApiAxiosParamCreator(configuration).gastronomyGetGastronomySingleLocalized(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * GastronomyApi - factory interface\n * @export\n */\nexport const GastronomyApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET Gastronomy Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetAllGastronomyChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): AxiosPromise<Array<Gastronomy>> {\n            return GastronomyApiFp(configuration).gastronomyGetAllGastronomyChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Gastronomy Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetAllGastronomyTypesList(options?: any): AxiosPromise<Array<GastronomyTypes>> {\n            return GastronomyApiFp(configuration).gastronomyGetAllGastronomyTypesList(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Gastronomy Types Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetApiGastronomyTypesById(id: string, options?: any): AxiosPromise<GastronomyTypes> {\n            return GastronomyApiFp(configuration).gastronomyGetApiGastronomyTypesById(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Gastronomy List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n         * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)\n         * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)\n         * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)\n         * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))\n         * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetGastronomyList(pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, categorycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): AxiosPromise<Array<Gastronomy>> {\n            return GastronomyApiFp(configuration).gastronomyGetGastronomyList(pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Gastronomy Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n         * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)\n         * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)\n         * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)\n         * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))\n         * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetGastronomyListLocalized(language?: string, pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, categorycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<GastronomyLocalized>> {\n            return GastronomyApiFp(configuration).gastronomyGetGastronomyListLocalized(language, pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Gastronomy Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n         * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)\n         * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)\n         * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)\n         * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))\n         * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetGastronomyListReduced(language?: string, locfilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, categorycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, options?: any): AxiosPromise<Array<GastronomyReduced>> {\n            return GastronomyApiFp(configuration).gastronomyGetGastronomyListReduced(language, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Gastronomy Single\n         * @param {string} id ID of the Gastronomy\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetGastronomySingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<Gastronomy> {\n            return GastronomyApiFp(configuration).gastronomyGetGastronomySingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Gastronomy Localized Single\n         * @param {string} id ID of the Gastronomy\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        gastronomyGetGastronomySingleLocalized(id: string, language?: string, options?: any): AxiosPromise<GastronomyLocalized> {\n            return GastronomyApiFp(configuration).gastronomyGetGastronomySingleLocalized(id, language, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * GastronomyApi - object-oriented interface\n * @export\n * @class GastronomyApi\n * @extends {BaseAPI}\n */\nexport class GastronomyApi extends BaseAPI {\n    /**\n     * \n     * @summary GET Gastronomy Changed List by Date\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GastronomyApi\n     */\n    public gastronomyGetAllGastronomyChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any) {\n        return GastronomyApiFp(this.configuration).gastronomyGetAllGastronomyChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Gastronomy Types List\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GastronomyApi\n     */\n    public gastronomyGetAllGastronomyTypesList(options?: any) {\n        return GastronomyApiFp(this.configuration).gastronomyGetAllGastronomyTypesList(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Gastronomy Types Single\n     * @param {string} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GastronomyApi\n     */\n    public gastronomyGetApiGastronomyTypesById(id: string, options?: any) {\n        return GastronomyApiFp(this.configuration).gastronomyGetApiGastronomyTypesById(id, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Gastronomy List\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)\n     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)\n     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)\n     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))\n     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GastronomyApi\n     */\n    public gastronomyGetGastronomyList(pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, categorycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any) {\n        return GastronomyApiFp(this.configuration).gastronomyGetGastronomyList(pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Gastronomy Localized List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)\n     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)\n     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)\n     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))\n     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GastronomyApi\n     */\n    public gastronomyGetGastronomyListLocalized(language?: string, pagenumber?: number, pagesize?: number, idlist?: string, locfilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, categorycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return GastronomyApiFp(this.configuration).gastronomyGetGastronomyListLocalized(language, pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Gastronomy Reduced List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)\n     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)\n     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)\n     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))\n     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GastronomyApi\n     */\n    public gastronomyGetGastronomyListReduced(language?: string, locfilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, categorycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, options?: any) {\n        return GastronomyApiFp(this.configuration).gastronomyGetGastronomyListReduced(language, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Gastronomy Single\n     * @param {string} id ID of the Gastronomy\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GastronomyApi\n     */\n    public gastronomyGetGastronomySingle(id: string, fields?: string, language?: string, options?: any) {\n        return GastronomyApiFp(this.configuration).gastronomyGetGastronomySingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Gastronomy Localized Single\n     * @param {string} id ID of the Gastronomy\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GastronomyApi\n     */\n    public gastronomyGetGastronomySingleLocalized(id: string, language?: string, options?: any) {\n        return GastronomyApiFp(this.configuration).gastronomyGetGastronomySingleLocalized(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n/**\n * JsonLDApi - axios parameter creator\n * @export\n */\nexport const JsonLDApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Detail Data in JSON LD Format (Schema.org Datatypes as output)\n         * @param {string} type Data Type to transform currently available: (&#x27;accommodation&#x27;, &#x27;gastronomy&#x27;, &#x27;event&#x27;, &#x27;recipe&#x27;, &#x27;poi&#x27;, &#x27;region&#x27;, &#x27;tv&#x27;, &#x27;municipality&#x27;, &#x27;district&#x27;, &#x27;skiarea&#x27;) required\n         * @param {string} id ID of the data to transform, required\n         * @param {string} [language] Output Language, standard EN\n         * @param {string} [idtoshow] ID to show on Json LD @id, not provided Id of ODH api call is taken\n         * @param {string} [urltoshow] url to show on Json LD @id, not provided idtoshow is taken, idtoshow not provided url is filled with url of the data\n         * @param {string} [imageurltoshow] image url to show on Json LD @image, not provided image url of data is taken\n         * @param {boolean} [showid] Show the @id property in Json LD default value true\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        jsonLDGetDetailInLD: async (type: string, id: string, language?: string, idtoshow?: string, urltoshow?: string, imageurltoshow?: string, showid?: boolean, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'type' is not null or undefined\n            if (type === null || type === undefined) {\n                throw new RequiredError('type','Required parameter type was null or undefined when calling jsonLDGetDetailInLD.');\n            }\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling jsonLDGetDetailInLD.');\n            }\n            const localVarPath = `/api/JsonLD/DetailInLD`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (type !== undefined) {\n                localVarQueryParameter['type'] = type;\n            }\n\n            if (id !== undefined) {\n                localVarQueryParameter['Id'] = id;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (idtoshow !== undefined) {\n                localVarQueryParameter['idtoshow'] = idtoshow;\n            }\n\n            if (urltoshow !== undefined) {\n                localVarQueryParameter['urltoshow'] = urltoshow;\n            }\n\n            if (imageurltoshow !== undefined) {\n                localVarQueryParameter['imageurltoshow'] = imageurltoshow;\n            }\n\n            if (showid !== undefined) {\n                localVarQueryParameter['showid'] = showid;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * JsonLDApi - functional programming interface\n * @export\n */\nexport const JsonLDApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Detail Data in JSON LD Format (Schema.org Datatypes as output)\n         * @param {string} type Data Type to transform currently available: (&#x27;accommodation&#x27;, &#x27;gastronomy&#x27;, &#x27;event&#x27;, &#x27;recipe&#x27;, &#x27;poi&#x27;, &#x27;region&#x27;, &#x27;tv&#x27;, &#x27;municipality&#x27;, &#x27;district&#x27;, &#x27;skiarea&#x27;) required\n         * @param {string} id ID of the data to transform, required\n         * @param {string} [language] Output Language, standard EN\n         * @param {string} [idtoshow] ID to show on Json LD @id, not provided Id of ODH api call is taken\n         * @param {string} [urltoshow] url to show on Json LD @id, not provided idtoshow is taken, idtoshow not provided url is filled with url of the data\n         * @param {string} [imageurltoshow] image url to show on Json LD @image, not provided image url of data is taken\n         * @param {boolean} [showid] Show the @id property in Json LD default value true\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async jsonLDGetDetailInLD(type: string, id: string, language?: string, idtoshow?: string, urltoshow?: string, imageurltoshow?: string, showid?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>> {\n            const localVarAxiosArgs = await JsonLDApiAxiosParamCreator(configuration).jsonLDGetDetailInLD(type, id, language, idtoshow, urltoshow, imageurltoshow, showid, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * JsonLDApi - factory interface\n * @export\n */\nexport const JsonLDApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET Detail Data in JSON LD Format (Schema.org Datatypes as output)\n         * @param {string} type Data Type to transform currently available: (&#x27;accommodation&#x27;, &#x27;gastronomy&#x27;, &#x27;event&#x27;, &#x27;recipe&#x27;, &#x27;poi&#x27;, &#x27;region&#x27;, &#x27;tv&#x27;, &#x27;municipality&#x27;, &#x27;district&#x27;, &#x27;skiarea&#x27;) required\n         * @param {string} id ID of the data to transform, required\n         * @param {string} [language] Output Language, standard EN\n         * @param {string} [idtoshow] ID to show on Json LD @id, not provided Id of ODH api call is taken\n         * @param {string} [urltoshow] url to show on Json LD @id, not provided idtoshow is taken, idtoshow not provided url is filled with url of the data\n         * @param {string} [imageurltoshow] image url to show on Json LD @image, not provided image url of data is taken\n         * @param {boolean} [showid] Show the @id property in Json LD default value true\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        jsonLDGetDetailInLD(type: string, id: string, language?: string, idtoshow?: string, urltoshow?: string, imageurltoshow?: string, showid?: boolean, options?: any): AxiosPromise<any> {\n            return JsonLDApiFp(configuration).jsonLDGetDetailInLD(type, id, language, idtoshow, urltoshow, imageurltoshow, showid, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * JsonLDApi - object-oriented interface\n * @export\n * @class JsonLDApi\n * @extends {BaseAPI}\n */\nexport class JsonLDApi extends BaseAPI {\n    /**\n     * \n     * @summary GET Detail Data in JSON LD Format (Schema.org Datatypes as output)\n     * @param {string} type Data Type to transform currently available: (&#x27;accommodation&#x27;, &#x27;gastronomy&#x27;, &#x27;event&#x27;, &#x27;recipe&#x27;, &#x27;poi&#x27;, &#x27;region&#x27;, &#x27;tv&#x27;, &#x27;municipality&#x27;, &#x27;district&#x27;, &#x27;skiarea&#x27;) required\n     * @param {string} id ID of the data to transform, required\n     * @param {string} [language] Output Language, standard EN\n     * @param {string} [idtoshow] ID to show on Json LD @id, not provided Id of ODH api call is taken\n     * @param {string} [urltoshow] url to show on Json LD @id, not provided idtoshow is taken, idtoshow not provided url is filled with url of the data\n     * @param {string} [imageurltoshow] image url to show on Json LD @image, not provided image url of data is taken\n     * @param {boolean} [showid] Show the @id property in Json LD default value true\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof JsonLDApi\n     */\n    public jsonLDGetDetailInLD(type: string, id: string, language?: string, idtoshow?: string, urltoshow?: string, imageurltoshow?: string, showid?: boolean, options?: any) {\n        return JsonLDApiFp(this.configuration).jsonLDGetDetailInLD(type, id, language, idtoshow, urltoshow, imageurltoshow, showid, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { LocHelperclass } from '../models';\n/**\n * LocationApi - axios parameter creator\n * @export\n */\nexport const LocationApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Location List (Use in locfilter)\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [type] Type (&#x27;mta&#x27;,&#x27;reg&#x27;,&#x27;tvs&#x27;,&#x27;mun&#x27;,&#x27;fra&#x27;) Separator &#x27;,&#x27; : &#x27;null&#x27; returns all Location Objects (default)\n         * @param {boolean} [showall] Show all Data (true &#x3D; all, false &#x3D; show only data market as visible)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        locationGetTheLocationList: async (language?: string, type?: string, showall?: boolean, locfilter?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Location`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (type !== undefined) {\n                localVarQueryParameter['type'] = type;\n            }\n\n            if (showall !== undefined) {\n                localVarQueryParameter['showall'] = showall;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Skiarea List (Use in locfilter as \\\"ska\\\")\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        locationGetTheSkiareaList: async (language?: string, locfilter?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Location/Skiarea`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * LocationApi - functional programming interface\n * @export\n */\nexport const LocationApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Location List (Use in locfilter)\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [type] Type (&#x27;mta&#x27;,&#x27;reg&#x27;,&#x27;tvs&#x27;,&#x27;mun&#x27;,&#x27;fra&#x27;) Separator &#x27;,&#x27; : &#x27;null&#x27; returns all Location Objects (default)\n         * @param {boolean} [showall] Show all Data (true &#x3D; all, false &#x3D; show only data market as visible)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async locationGetTheLocationList(language?: string, type?: string, showall?: boolean, locfilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<LocHelperclass>>> {\n            const localVarAxiosArgs = await LocationApiAxiosParamCreator(configuration).locationGetTheLocationList(language, type, showall, locfilter, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Skiarea List (Use in locfilter as \\\"ska\\\")\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async locationGetTheSkiareaList(language?: string, locfilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<LocHelperclass>>> {\n            const localVarAxiosArgs = await LocationApiAxiosParamCreator(configuration).locationGetTheSkiareaList(language, locfilter, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * LocationApi - factory interface\n * @export\n */\nexport const LocationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET Location List (Use in locfilter)\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [type] Type (&#x27;mta&#x27;,&#x27;reg&#x27;,&#x27;tvs&#x27;,&#x27;mun&#x27;,&#x27;fra&#x27;) Separator &#x27;,&#x27; : &#x27;null&#x27; returns all Location Objects (default)\n         * @param {boolean} [showall] Show all Data (true &#x3D; all, false &#x3D; show only data market as visible)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        locationGetTheLocationList(language?: string, type?: string, showall?: boolean, locfilter?: string, options?: any): AxiosPromise<Array<LocHelperclass>> {\n            return LocationApiFp(configuration).locationGetTheLocationList(language, type, showall, locfilter, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Skiarea List (Use in locfilter as \\\"ska\\\")\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        locationGetTheSkiareaList(language?: string, locfilter?: string, options?: any): AxiosPromise<Array<LocHelperclass>> {\n            return LocationApiFp(configuration).locationGetTheSkiareaList(language, locfilter, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * LocationApi - object-oriented interface\n * @export\n * @class LocationApi\n * @extends {BaseAPI}\n */\nexport class LocationApi extends BaseAPI {\n    /**\n     * \n     * @summary GET Location List (Use in locfilter)\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {string} [type] Type (&#x27;mta&#x27;,&#x27;reg&#x27;,&#x27;tvs&#x27;,&#x27;mun&#x27;,&#x27;fra&#x27;) Separator &#x27;,&#x27; : &#x27;null&#x27; returns all Location Objects (default)\n     * @param {boolean} [showall] Show all Data (true &#x3D; all, false &#x3D; show only data market as visible)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof LocationApi\n     */\n    public locationGetTheLocationList(language?: string, type?: string, showall?: boolean, locfilter?: string, options?: any) {\n        return LocationApiFp(this.configuration).locationGetTheLocationList(language, type, showall, locfilter, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Skiarea List (Use in locfilter as \\\"ska\\\")\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof LocationApi\n     */\n    public locationGetTheSkiareaList(language?: string, locfilter?: string, options?: any) {\n        return LocationApiFp(this.configuration).locationGetTheSkiareaList(language, locfilter, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n/**\n * LoginApi - axios parameter creator\n * @export\n */\nexport const LoginApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Login\n         * @param {string} grantType \n         * @param {string} username \n         * @param {string} password \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        tokenPost: async (grantType: string, username: string, password: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'grantType' is not null or undefined\n            if (grantType === null || grantType === undefined) {\n                throw new RequiredError('grantType','Required parameter grantType was null or undefined when calling tokenPost.');\n            }\n            // verify required parameter 'username' is not null or undefined\n            if (username === null || username === undefined) {\n                throw new RequiredError('username','Required parameter username was null or undefined when calling tokenPost.');\n            }\n            // verify required parameter 'password' is not null or undefined\n            if (password === null || password === undefined) {\n                throw new RequiredError('password','Required parameter password was null or undefined when calling tokenPost.');\n            }\n            const localVarPath = `/token`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n            const localVarFormParams = new URLSearchParams();\n\n\n            if (grantType !== undefined) { \n                localVarFormParams.set('grant_type', grantType as any);\n            }\n\n            if (username !== undefined) { \n                localVarFormParams.set('username', username as any);\n            }\n\n            if (password !== undefined) { \n                localVarFormParams.set('password', password as any);\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/x-www-form-urlencoded';\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = localVarFormParams.toString();\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * LoginApi - functional programming interface\n * @export\n */\nexport const LoginApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Login\n         * @param {string} grantType \n         * @param {string} username \n         * @param {string} password \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async tokenPost(grantType: string, username: string, password: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>> {\n            const localVarAxiosArgs = await LoginApiAxiosParamCreator(configuration).tokenPost(grantType, username, password, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * LoginApi - factory interface\n * @export\n */\nexport const LoginApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary Login\n         * @param {string} grantType \n         * @param {string} username \n         * @param {string} password \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        tokenPost(grantType: string, username: string, password: string, options?: any): AxiosPromise<any> {\n            return LoginApiFp(configuration).tokenPost(grantType, username, password, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * LoginApi - object-oriented interface\n * @export\n * @class LoginApi\n * @extends {BaseAPI}\n */\nexport class LoginApi extends BaseAPI {\n    /**\n     * \n     * @summary Login\n     * @param {string} grantType \n     * @param {string} username \n     * @param {string} password \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof LoginApi\n     */\n    public tokenPost(grantType: string, username: string, password: string, options?: any) {\n        return LoginApiFp(this.configuration).tokenPost(grantType, username, password, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { ActivityPoiReduced } from '../models';\nimport { ODHActivityPoi } from '../models';\nimport { ODHActivityPoiLocalized } from '../models';\nimport { SmgPoiTypes } from '../models';\n/**\n * ODHActivityPoiApi - axios parameter creator\n * @export\n */\nexport const ODHActivityPoiApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET ODHActivityPoi Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all ODHActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetAllODHActivityPoiChanged: async (pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ODHActivityPoiChanged`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetAllODHActivityPoiTypesList: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ODHActivityPoiTypes`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi Types Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetAllODHActivityPoiTypesSingle: async (id: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling oDHActivityPoiGetAllODHActivityPoiTypesSingle.');\n            }\n            const localVarPath = `/api/ODHActivityPoiTypes/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes\n         * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)\n         * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;ArchApp&#x27; (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetODHActivityPoiList: async (pagenumber?: number, pagesize?: number, type?: string, subtype?: string, poitype?: string, idlist?: string, locfilter?: string, langfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ODHActivityPoi`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (type !== undefined) {\n                localVarQueryParameter['type'] = type;\n            }\n\n            if (subtype !== undefined) {\n                localVarQueryParameter['subtype'] = subtype;\n            }\n\n            if (poitype !== undefined) {\n                localVarQueryParameter['poitype'] = poitype;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (langfilter !== undefined) {\n                localVarQueryParameter['langfilter'] = langfilter;\n            }\n\n            if (areafilter !== undefined) {\n                localVarQueryParameter['areafilter'] = areafilter;\n            }\n\n            if (highlight !== undefined) {\n                localVarQueryParameter['highlight'] = highlight;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            if (searchfilter !== undefined) {\n                localVarQueryParameter['searchfilter'] = searchfilter;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi List Localized\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes\n         * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)\n         * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetODHActivityPoiListLocalized: async (language?: string, pagenumber?: number, pagesize?: number, type?: string, subtype?: string, poitype?: string, idlist?: string, locfilter?: string, langfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ODHActivityPoiLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (type !== undefined) {\n                localVarQueryParameter['type'] = type;\n            }\n\n            if (subtype !== undefined) {\n                localVarQueryParameter['subtype'] = subtype;\n            }\n\n            if (poitype !== undefined) {\n                localVarQueryParameter['poitype'] = poitype;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (langfilter !== undefined) {\n                localVarQueryParameter['langfilter'] = langfilter;\n            }\n\n            if (areafilter !== undefined) {\n                localVarQueryParameter['areafilter'] = areafilter;\n            }\n\n            if (highlight !== undefined) {\n                localVarQueryParameter['highlight'] = highlight;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes\n         * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)\n         * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {boolean} [suedtirolmobil] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetODHActivityPoiListReduced: async (language?: string, type?: string, subtype?: string, poitype?: string, locfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, suedtirolmobil?: boolean, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ODHActivityPoiReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (type !== undefined) {\n                localVarQueryParameter['type'] = type;\n            }\n\n            if (subtype !== undefined) {\n                localVarQueryParameter['subtype'] = subtype;\n            }\n\n            if (poitype !== undefined) {\n                localVarQueryParameter['poitype'] = poitype;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (areafilter !== undefined) {\n                localVarQueryParameter['areafilter'] = areafilter;\n            }\n\n            if (highlight !== undefined) {\n                localVarQueryParameter['highlight'] = highlight;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (suedtirolmobil !== undefined) {\n                localVarQueryParameter['suedtirolmobil'] = suedtirolmobil;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi Single\n         * @param {string} id ID of the Poi\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetODHActivityPoiSingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling oDHActivityPoiGetODHActivityPoiSingle.');\n            }\n            const localVarPath = `/api/ODHActivityPoi/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi Single Reduced\n         * @param {string} id ID of the Poi\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetODHActivityPoiSingleLocalized: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling oDHActivityPoiGetODHActivityPoiSingleLocalized.');\n            }\n            const localVarPath = `/api/ODHActivityPoiLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * ODHActivityPoiApi - functional programming interface\n * @export\n */\nexport const ODHActivityPoiApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET ODHActivityPoi Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all ODHActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async oDHActivityPoiGetAllODHActivityPoiChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ODHActivityPoi>>> {\n            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetAllODHActivityPoiChanged(pagenumber, pagesize, seed, updatefrom, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async oDHActivityPoiGetAllODHActivityPoiTypesList(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SmgPoiTypes>>> {\n            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetAllODHActivityPoiTypesList(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi Types Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async oDHActivityPoiGetAllODHActivityPoiTypesSingle(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SmgPoiTypes>> {\n            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetAllODHActivityPoiTypesSingle(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes\n         * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)\n         * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;ArchApp&#x27; (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async oDHActivityPoiGetODHActivityPoiList(pagenumber?: number, pagesize?: number, type?: string, subtype?: string, poitype?: string, idlist?: string, locfilter?: string, langfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ODHActivityPoi>>> {\n            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetODHActivityPoiList(pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi List Localized\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes\n         * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)\n         * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async oDHActivityPoiGetODHActivityPoiListLocalized(language?: string, pagenumber?: number, pagesize?: number, type?: string, subtype?: string, poitype?: string, idlist?: string, locfilter?: string, langfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ODHActivityPoiLocalized>>> {\n            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetODHActivityPoiListLocalized(language, pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes\n         * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)\n         * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {boolean} [suedtirolmobil] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async oDHActivityPoiGetODHActivityPoiListReduced(language?: string, type?: string, subtype?: string, poitype?: string, locfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, suedtirolmobil?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ActivityPoiReduced>>> {\n            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetODHActivityPoiListReduced(language, type, subtype, poitype, locfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi Single\n         * @param {string} id ID of the Poi\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async oDHActivityPoiGetODHActivityPoiSingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ODHActivityPoi>> {\n            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetODHActivityPoiSingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi Single Reduced\n         * @param {string} id ID of the Poi\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async oDHActivityPoiGetODHActivityPoiSingleLocalized(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ODHActivityPoiLocalized>> {\n            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetODHActivityPoiSingleLocalized(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * ODHActivityPoiApi - factory interface\n * @export\n */\nexport const ODHActivityPoiApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET ODHActivityPoi Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all ODHActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetAllODHActivityPoiChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): AxiosPromise<Array<ODHActivityPoi>> {\n            return ODHActivityPoiApiFp(configuration).oDHActivityPoiGetAllODHActivityPoiChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetAllODHActivityPoiTypesList(options?: any): AxiosPromise<Array<SmgPoiTypes>> {\n            return ODHActivityPoiApiFp(configuration).oDHActivityPoiGetAllODHActivityPoiTypesList(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi Types Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetAllODHActivityPoiTypesSingle(id: string, options?: any): AxiosPromise<SmgPoiTypes> {\n            return ODHActivityPoiApiFp(configuration).oDHActivityPoiGetAllODHActivityPoiTypesSingle(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes\n         * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)\n         * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;ArchApp&#x27; (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetODHActivityPoiList(pagenumber?: number, pagesize?: number, type?: string, subtype?: string, poitype?: string, idlist?: string, locfilter?: string, langfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): AxiosPromise<Array<ODHActivityPoi>> {\n            return ODHActivityPoiApiFp(configuration).oDHActivityPoiGetODHActivityPoiList(pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi List Localized\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes\n         * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)\n         * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetODHActivityPoiListLocalized(language?: string, pagenumber?: number, pagesize?: number, type?: string, subtype?: string, poitype?: string, idlist?: string, locfilter?: string, langfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<ODHActivityPoiLocalized>> {\n            return ODHActivityPoiApiFp(configuration).oDHActivityPoiGetODHActivityPoiListLocalized(language, pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes\n         * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)\n         * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {boolean} [suedtirolmobil] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetODHActivityPoiListReduced(language?: string, type?: string, subtype?: string, poitype?: string, locfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, suedtirolmobil?: boolean, options?: any): AxiosPromise<Array<ActivityPoiReduced>> {\n            return ODHActivityPoiApiFp(configuration).oDHActivityPoiGetODHActivityPoiListReduced(language, type, subtype, poitype, locfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi Single\n         * @param {string} id ID of the Poi\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetODHActivityPoiSingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<ODHActivityPoi> {\n            return ODHActivityPoiApiFp(configuration).oDHActivityPoiGetODHActivityPoiSingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET ODHActivityPoi Single Reduced\n         * @param {string} id ID of the Poi\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHActivityPoiGetODHActivityPoiSingleLocalized(id: string, language?: string, options?: any): AxiosPromise<ODHActivityPoiLocalized> {\n            return ODHActivityPoiApiFp(configuration).oDHActivityPoiGetODHActivityPoiSingleLocalized(id, language, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * ODHActivityPoiApi - object-oriented interface\n * @export\n * @class ODHActivityPoiApi\n * @extends {BaseAPI}\n */\nexport class ODHActivityPoiApi extends BaseAPI {\n    /**\n     * \n     * @summary GET ODHActivityPoi Changed List by Date\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all ODHActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ODHActivityPoiApi\n     */\n    public oDHActivityPoiGetAllODHActivityPoiChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any) {\n        return ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetAllODHActivityPoiChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET ODHActivityPoi Types List\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ODHActivityPoiApi\n     */\n    public oDHActivityPoiGetAllODHActivityPoiTypesList(options?: any) {\n        return ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetAllODHActivityPoiTypesList(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET ODHActivityPoi Types Single\n     * @param {string} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ODHActivityPoiApi\n     */\n    public oDHActivityPoiGetAllODHActivityPoiTypesSingle(id: string, options?: any) {\n        return ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetAllODHActivityPoiTypesSingle(id, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET ODHActivityPoi List\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes\n     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)\n     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)\n     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)\n     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;ArchApp&#x27; (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ODHActivityPoiApi\n     */\n    public oDHActivityPoiGetODHActivityPoiList(pagenumber?: number, pagesize?: number, type?: string, subtype?: string, poitype?: string, idlist?: string, locfilter?: string, langfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any) {\n        return ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetODHActivityPoiList(pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET ODHActivityPoi List Localized\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes\n     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)\n     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)\n     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)\n     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ODHActivityPoiApi\n     */\n    public oDHActivityPoiGetODHActivityPoiListLocalized(language?: string, pagenumber?: number, pagesize?: number, type?: string, subtype?: string, poitype?: string, idlist?: string, locfilter?: string, langfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetODHActivityPoiListLocalized(language, pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET ODHActivityPoi List Reduced\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes\n     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)\n     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)\n     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {boolean} [suedtirolmobil] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ODHActivityPoiApi\n     */\n    public oDHActivityPoiGetODHActivityPoiListReduced(language?: string, type?: string, subtype?: string, poitype?: string, locfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhactive?: boolean, active?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, suedtirolmobil?: boolean, options?: any) {\n        return ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetODHActivityPoiListReduced(language, type, subtype, poitype, locfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET ODHActivityPoi Single\n     * @param {string} id ID of the Poi\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ODHActivityPoiApi\n     */\n    public oDHActivityPoiGetODHActivityPoiSingle(id: string, fields?: string, language?: string, options?: any) {\n        return ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetODHActivityPoiSingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET ODHActivityPoi Single Reduced\n     * @param {string} id ID of the Poi\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ODHActivityPoiApi\n     */\n    public oDHActivityPoiGetODHActivityPoiSingleLocalized(id: string, language?: string, options?: any) {\n        return ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetODHActivityPoiSingleLocalized(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { SmgTagReduced } from '../models';\nimport { SmgTags } from '../models';\n/**\n * ODHTagApi - axios parameter creator\n * @export\n */\nexport const ODHTagApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET ODHTag Single\n         * @param {string} id Id of ODHtag\n         * @param {string} [language] Localization Language\n         * @param {string} [localizationlanguage] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHTagGetODHTagSingle: async (id: string, language?: string, localizationlanguage?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling oDHTagGetODHTagSingle.');\n            }\n            const localVarPath = `/api/ODHTag/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (localizationlanguage !== undefined) {\n                localVarQueryParameter['localizationlanguage'] = localizationlanguage;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET ODHTag List\n         * @param {string} [language] Localization Language\n         * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi/smgpoi, package, gastronomy, event, article, common .. etc..)\n         * @param {string} [localizationlanguage] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHTagGetODHTags: async (language?: string, validforentity?: string, localizationlanguage?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/ODHTag`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (validforentity !== undefined) {\n                localVarQueryParameter['validforentity'] = validforentity;\n            }\n\n            if (localizationlanguage !== undefined) {\n                localVarQueryParameter['localizationlanguage'] = localizationlanguage;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET ODHTag List REDUCED\n         * @param {string} language Localization Language\n         * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi, package, gastronomy, event, article, common .. etc..)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHTagGetODHTagsReduced: async (language: string, validforentity?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'language' is not null or undefined\n            if (language === null || language === undefined) {\n                throw new RequiredError('language','Required parameter language was null or undefined when calling oDHTagGetODHTagsReduced.');\n            }\n            const localVarPath = `/api/ODHTagReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (validforentity !== undefined) {\n                localVarQueryParameter['validforentity'] = validforentity;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * ODHTagApi - functional programming interface\n * @export\n */\nexport const ODHTagApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET ODHTag Single\n         * @param {string} id Id of ODHtag\n         * @param {string} [language] Localization Language\n         * @param {string} [localizationlanguage] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async oDHTagGetODHTagSingle(id: string, language?: string, localizationlanguage?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SmgTags>> {\n            const localVarAxiosArgs = await ODHTagApiAxiosParamCreator(configuration).oDHTagGetODHTagSingle(id, language, localizationlanguage, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET ODHTag List\n         * @param {string} [language] Localization Language\n         * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi/smgpoi, package, gastronomy, event, article, common .. etc..)\n         * @param {string} [localizationlanguage] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async oDHTagGetODHTags(language?: string, validforentity?: string, localizationlanguage?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SmgTags>>> {\n            const localVarAxiosArgs = await ODHTagApiAxiosParamCreator(configuration).oDHTagGetODHTags(language, validforentity, localizationlanguage, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET ODHTag List REDUCED\n         * @param {string} language Localization Language\n         * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi, package, gastronomy, event, article, common .. etc..)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async oDHTagGetODHTagsReduced(language: string, validforentity?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SmgTagReduced>>> {\n            const localVarAxiosArgs = await ODHTagApiAxiosParamCreator(configuration).oDHTagGetODHTagsReduced(language, validforentity, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * ODHTagApi - factory interface\n * @export\n */\nexport const ODHTagApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET ODHTag Single\n         * @param {string} id Id of ODHtag\n         * @param {string} [language] Localization Language\n         * @param {string} [localizationlanguage] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHTagGetODHTagSingle(id: string, language?: string, localizationlanguage?: string, options?: any): AxiosPromise<SmgTags> {\n            return ODHTagApiFp(configuration).oDHTagGetODHTagSingle(id, language, localizationlanguage, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET ODHTag List\n         * @param {string} [language] Localization Language\n         * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi/smgpoi, package, gastronomy, event, article, common .. etc..)\n         * @param {string} [localizationlanguage] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHTagGetODHTags(language?: string, validforentity?: string, localizationlanguage?: string, options?: any): AxiosPromise<Array<SmgTags>> {\n            return ODHTagApiFp(configuration).oDHTagGetODHTags(language, validforentity, localizationlanguage, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET ODHTag List REDUCED\n         * @param {string} language Localization Language\n         * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi, package, gastronomy, event, article, common .. etc..)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        oDHTagGetODHTagsReduced(language: string, validforentity?: string, options?: any): AxiosPromise<Array<SmgTagReduced>> {\n            return ODHTagApiFp(configuration).oDHTagGetODHTagsReduced(language, validforentity, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * ODHTagApi - object-oriented interface\n * @export\n * @class ODHTagApi\n * @extends {BaseAPI}\n */\nexport class ODHTagApi extends BaseAPI {\n    /**\n     * \n     * @summary GET ODHTag Single\n     * @param {string} id Id of ODHtag\n     * @param {string} [language] Localization Language\n     * @param {string} [localizationlanguage] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ODHTagApi\n     */\n    public oDHTagGetODHTagSingle(id: string, language?: string, localizationlanguage?: string, options?: any) {\n        return ODHTagApiFp(this.configuration).oDHTagGetODHTagSingle(id, language, localizationlanguage, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET ODHTag List\n     * @param {string} [language] Localization Language\n     * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi/smgpoi, package, gastronomy, event, article, common .. etc..)\n     * @param {string} [localizationlanguage] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ODHTagApi\n     */\n    public oDHTagGetODHTags(language?: string, validforentity?: string, localizationlanguage?: string, options?: any) {\n        return ODHTagApiFp(this.configuration).oDHTagGetODHTags(language, validforentity, localizationlanguage, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET ODHTag List REDUCED\n     * @param {string} language Localization Language\n     * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi, package, gastronomy, event, article, common .. etc..)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ODHTagApi\n     */\n    public oDHTagGetODHTagsReduced(language: string, validforentity?: string, options?: any) {\n        return ODHTagApiFp(this.configuration).oDHTagGetODHTagsReduced(language, validforentity, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { ActivityPoiReduced } from '../models';\nimport { GBLTSActivityPoiLocalized } from '../models';\nimport { GBLTSPoi } from '../models';\nimport { PoiTypes } from '../models';\n/**\n * PoiApi - axios parameter creator\n * @export\n */\nexport const PoiApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Poi Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetAllPoiTypesList: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/PoiTypes`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Poi Type Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetAllPoiTypesSingle: async (id: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling poiGetAllPoiTypesSingle.');\n            }\n            const localVarPath = `/api/PoiTypes/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Poi Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetAllPoisChanged: async (pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/PoiChanged`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Poi List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes\n         * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetPoiFiltered: async (pagenumber?: number, pagesize?: number, poitype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, highlight?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Poi`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (poitype !== undefined) {\n                localVarQueryParameter['poitype'] = poitype;\n            }\n\n            if (subtype !== undefined) {\n                localVarQueryParameter['subtype'] = subtype;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (areafilter !== undefined) {\n                localVarQueryParameter['areafilter'] = areafilter;\n            }\n\n            if (highlight !== undefined) {\n                localVarQueryParameter['highlight'] = highlight;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            if (searchfilter !== undefined) {\n                localVarQueryParameter['searchfilter'] = searchfilter;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Poi Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes\n         * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetPoiLocalized: async (language?: string, pagenumber?: number, pagesize?: number, poitype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, highlight?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/PoiLocalized`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (poitype !== undefined) {\n                localVarQueryParameter['poitype'] = poitype;\n            }\n\n            if (subtype !== undefined) {\n                localVarQueryParameter['subtype'] = subtype;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (areafilter !== undefined) {\n                localVarQueryParameter['areafilter'] = areafilter;\n            }\n\n            if (highlight !== undefined) {\n                localVarQueryParameter['highlight'] = highlight;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Poi List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes\n         * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected poiType), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Pois with Highlight false, &#x27;true&#x27; &#x3D; only Pois with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois\n         * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {boolean} [suedtirolmobil] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetPoiReduced: async (language?: string, poitype?: string, subtype?: string, locfilter?: string, areafilter?: string, highlight?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, suedtirolmobil?: boolean, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/PoiReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (poitype !== undefined) {\n                localVarQueryParameter['poitype'] = poitype;\n            }\n\n            if (subtype !== undefined) {\n                localVarQueryParameter['subtype'] = subtype;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (areafilter !== undefined) {\n                localVarQueryParameter['areafilter'] = areafilter;\n            }\n\n            if (highlight !== undefined) {\n                localVarQueryParameter['highlight'] = highlight;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (suedtirolmobil !== undefined) {\n                localVarQueryParameter['suedtirolmobil'] = suedtirolmobil;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Poi Single\n         * @param {string} id ID of the Poi\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetPoiSingle: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling poiGetPoiSingle.');\n            }\n            const localVarPath = `/api/Poi/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Poi Localized Single\n         * @param {string} id ID of the Poi\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetPoiSingleLocalized: async (id: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling poiGetPoiSingleLocalized.');\n            }\n            const localVarPath = `/api/PoiLocalized/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * PoiApi - functional programming interface\n * @export\n */\nexport const PoiApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Poi Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async poiGetAllPoiTypesList(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<PoiTypes>>> {\n            const localVarAxiosArgs = await PoiApiAxiosParamCreator(configuration).poiGetAllPoiTypesList(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Poi Type Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async poiGetAllPoiTypesSingle(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PoiTypes>> {\n            const localVarAxiosArgs = await PoiApiAxiosParamCreator(configuration).poiGetAllPoiTypesSingle(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Poi Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async poiGetAllPoisChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GBLTSPoi>>> {\n            const localVarAxiosArgs = await PoiApiAxiosParamCreator(configuration).poiGetAllPoisChanged(pagenumber, pagesize, seed, updatefrom, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Poi List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes\n         * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async poiGetPoiFiltered(pagenumber?: number, pagesize?: number, poitype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, highlight?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GBLTSPoi>>> {\n            const localVarAxiosArgs = await PoiApiAxiosParamCreator(configuration).poiGetPoiFiltered(pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Poi Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes\n         * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async poiGetPoiLocalized(language?: string, pagenumber?: number, pagesize?: number, poitype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, highlight?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GBLTSActivityPoiLocalized>>> {\n            const localVarAxiosArgs = await PoiApiAxiosParamCreator(configuration).poiGetPoiLocalized(language, pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Poi List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes\n         * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected poiType), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Pois with Highlight false, &#x27;true&#x27; &#x3D; only Pois with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois\n         * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {boolean} [suedtirolmobil] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async poiGetPoiReduced(language?: string, poitype?: string, subtype?: string, locfilter?: string, areafilter?: string, highlight?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, suedtirolmobil?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ActivityPoiReduced>>> {\n            const localVarAxiosArgs = await PoiApiAxiosParamCreator(configuration).poiGetPoiReduced(language, poitype, subtype, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, suedtirolmobil, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Poi Single\n         * @param {string} id ID of the Poi\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async poiGetPoiSingle(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GBLTSPoi>> {\n            const localVarAxiosArgs = await PoiApiAxiosParamCreator(configuration).poiGetPoiSingle(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Poi Localized Single\n         * @param {string} id ID of the Poi\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async poiGetPoiSingleLocalized(id: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GBLTSActivityPoiLocalized>> {\n            const localVarAxiosArgs = await PoiApiAxiosParamCreator(configuration).poiGetPoiSingleLocalized(id, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * PoiApi - factory interface\n * @export\n */\nexport const PoiApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET Poi Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetAllPoiTypesList(options?: any): AxiosPromise<Array<PoiTypes>> {\n            return PoiApiFp(configuration).poiGetAllPoiTypesList(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Poi Type Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetAllPoiTypesSingle(id: string, options?: any): AxiosPromise<PoiTypes> {\n            return PoiApiFp(configuration).poiGetAllPoiTypesSingle(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Poi Changed List by Date\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetAllPoisChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any): AxiosPromise<Array<GBLTSPoi>> {\n            return PoiApiFp(configuration).poiGetAllPoisChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Poi List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes\n         * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetPoiFiltered(pagenumber?: number, pagesize?: number, poitype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, highlight?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): AxiosPromise<Array<GBLTSPoi>> {\n            return PoiApiFp(configuration).poiGetPoiFiltered(pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Poi Localized List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page, (default:10)\n         * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes\n         * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)\n         * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetPoiLocalized(language?: string, pagenumber?: number, pagesize?: number, poitype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, highlight?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any): AxiosPromise<Array<GBLTSActivityPoiLocalized>> {\n            return PoiApiFp(configuration).poiGetPoiLocalized(language, pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Poi List Reduced\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes\n         * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected poiType), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Pois with Highlight false, &#x27;true&#x27; &#x3D; only Pois with Highlight true), (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois\n         * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {boolean} [suedtirolmobil] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetPoiReduced(language?: string, poitype?: string, subtype?: string, locfilter?: string, areafilter?: string, highlight?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, suedtirolmobil?: boolean, options?: any): AxiosPromise<Array<ActivityPoiReduced>> {\n            return PoiApiFp(configuration).poiGetPoiReduced(language, poitype, subtype, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, suedtirolmobil, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Poi Single\n         * @param {string} id ID of the Poi\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetPoiSingle(id: string, fields?: string, language?: string, options?: any): AxiosPromise<GBLTSPoi> {\n            return PoiApiFp(configuration).poiGetPoiSingle(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Poi Localized Single\n         * @param {string} id ID of the Poi\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        poiGetPoiSingleLocalized(id: string, language?: string, options?: any): AxiosPromise<GBLTSActivityPoiLocalized> {\n            return PoiApiFp(configuration).poiGetPoiSingleLocalized(id, language, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * PoiApi - object-oriented interface\n * @export\n * @class PoiApi\n * @extends {BaseAPI}\n */\nexport class PoiApi extends BaseAPI {\n    /**\n     * \n     * @summary GET Poi Types List\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PoiApi\n     */\n    public poiGetAllPoiTypesList(options?: any) {\n        return PoiApiFp(this.configuration).poiGetAllPoiTypesList(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Poi Type Single\n     * @param {string} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PoiApi\n     */\n    public poiGetAllPoiTypesSingle(id: string, options?: any) {\n        return PoiApiFp(this.configuration).poiGetAllPoiTypesSingle(id, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Poi Changed List by Date\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PoiApi\n     */\n    public poiGetAllPoisChanged(pagenumber?: number, pagesize?: number, seed?: string, updatefrom?: string, options?: any) {\n        return PoiApiFp(this.configuration).poiGetAllPoisChanged(pagenumber, pagesize, seed, updatefrom, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Poi List\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes\n     * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)\n     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PoiApi\n     */\n    public poiGetPoiFiltered(pagenumber?: number, pagesize?: number, poitype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, highlight?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any) {\n        return PoiApiFp(this.configuration).poiGetPoiFiltered(pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Poi Localized List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page, (default:10)\n     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes\n     * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)\n     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PoiApi\n     */\n    public poiGetPoiLocalized(language?: string, pagenumber?: number, pagesize?: number, poitype?: string, subtype?: string, idlist?: string, locfilter?: string, areafilter?: string, highlight?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, options?: any) {\n        return PoiApiFp(this.configuration).poiGetPoiLocalized(language, pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Poi List Reduced\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes\n     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected poiType), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Pois with Highlight false, &#x27;true&#x27; &#x3D; only Pois with Highlight true), (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois\n     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {boolean} [suedtirolmobil] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PoiApi\n     */\n    public poiGetPoiReduced(language?: string, poitype?: string, subtype?: string, locfilter?: string, areafilter?: string, highlight?: boolean, odhtagfilter?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, suedtirolmobil?: boolean, options?: any) {\n        return PoiApiFp(this.configuration).poiGetPoiReduced(language, poitype, subtype, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, suedtirolmobil, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Poi Single\n     * @param {string} id ID of the Poi\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PoiApi\n     */\n    public poiGetPoiSingle(id: string, fields?: string, language?: string, options?: any) {\n        return PoiApiFp(this.configuration).poiGetPoiSingle(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Poi Localized Single\n     * @param {string} id ID of the Poi\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PoiApi\n     */\n    public poiGetPoiSingleLocalized(id: string, language?: string, options?: any) {\n        return PoiApiFp(this.configuration).poiGetPoiSingleLocalized(id, language, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { DDVenue } from '../models';\nimport { DDVenueCodes } from '../models';\nimport { ResultOfDDVenue } from '../models';\nimport { VenueReduced } from '../models';\n/**\n * VenueApi - axios parameter creator\n * @export\n */\nexport const VenueApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Venue Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n         * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)\n         * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)\n         * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)\n         * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)\n         * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)\n         * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        venueGeVenueListReduced: async (language?: string, source?: string, capacityfilter?: string, roomcountfilter?: string, categoryfilter?: string, featurefilter?: string, setuptypefilter?: string, locfilter?: string, active?: boolean, odhactive?: boolean, odhtagfilter?: string, latitude?: string, longitude?: string, radius?: string, updatefrom?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/VenueReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (capacityfilter !== undefined) {\n                localVarQueryParameter['capacityfilter'] = capacityfilter;\n            }\n\n            if (roomcountfilter !== undefined) {\n                localVarQueryParameter['roomcountfilter'] = roomcountfilter;\n            }\n\n            if (categoryfilter !== undefined) {\n                localVarQueryParameter['categoryfilter'] = categoryfilter;\n            }\n\n            if (featurefilter !== undefined) {\n                localVarQueryParameter['featurefilter'] = featurefilter;\n            }\n\n            if (setuptypefilter !== undefined) {\n                localVarQueryParameter['setuptypefilter'] = setuptypefilter;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Venue List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (max 1024), (default:10)\n         * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n         * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)\n         * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Venue IDs), (default:&#x27;null&#x27;)\n         * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)\n         * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)\n         * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)\n         * @param {boolean} [active] Active Venue Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Venues\n         * @param {boolean} [odhactive] ODH Active (Published) Venue Filter (possible Values: &#x27;true&#x27; only published Venue, &#x27;false&#x27; only not published Venue, (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        venueGet: async (pagenumber?: number, pagesize?: number, source?: string, capacityfilter?: string, roomcountfilter?: string, idlist?: string, categoryfilter?: string, featurefilter?: string, setuptypefilter?: string, locfilter?: string, active?: boolean, odhactive?: boolean, odhtagfilter?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, updatefrom?: string, fields?: string, language?: string, searchfilter?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Venue`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (capacityfilter !== undefined) {\n                localVarQueryParameter['capacityfilter'] = capacityfilter;\n            }\n\n            if (roomcountfilter !== undefined) {\n                localVarQueryParameter['roomcountfilter'] = roomcountfilter;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (categoryfilter !== undefined) {\n                localVarQueryParameter['categoryfilter'] = categoryfilter;\n            }\n\n            if (featurefilter !== undefined) {\n                localVarQueryParameter['featurefilter'] = featurefilter;\n            }\n\n            if (setuptypefilter !== undefined) {\n                localVarQueryParameter['setuptypefilter'] = setuptypefilter;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (odhtagfilter !== undefined) {\n                localVarQueryParameter['odhtagfilter'] = odhtagfilter;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (searchfilter !== undefined) {\n                localVarQueryParameter['searchfilter'] = searchfilter;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Venue Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        venueGetAllVenueTypesList: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/VenueTypes`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Venue Type Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        venueGetAllVenueTypesSingle: async (id: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling venueGetAllVenueTypesSingle.');\n            }\n            const localVarPath = `/api/VenueTypes/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Venue Single\n         * @param {string} id ID of the Webcam\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        venueGetApiVenueById: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling venueGetApiVenueById.');\n            }\n            const localVarPath = `/api/Venue/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * VenueApi - functional programming interface\n * @export\n */\nexport const VenueApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Venue Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n         * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)\n         * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)\n         * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)\n         * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)\n         * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)\n         * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async venueGeVenueListReduced(language?: string, source?: string, capacityfilter?: string, roomcountfilter?: string, categoryfilter?: string, featurefilter?: string, setuptypefilter?: string, locfilter?: string, active?: boolean, odhactive?: boolean, odhtagfilter?: string, latitude?: string, longitude?: string, radius?: string, updatefrom?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<VenueReduced>>> {\n            const localVarAxiosArgs = await VenueApiAxiosParamCreator(configuration).venueGeVenueListReduced(language, source, capacityfilter, roomcountfilter, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, latitude, longitude, radius, updatefrom, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Venue List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (max 1024), (default:10)\n         * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n         * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)\n         * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Venue IDs), (default:&#x27;null&#x27;)\n         * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)\n         * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)\n         * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)\n         * @param {boolean} [active] Active Venue Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Venues\n         * @param {boolean} [odhactive] ODH Active (Published) Venue Filter (possible Values: &#x27;true&#x27; only published Venue, &#x27;false&#x27; only not published Venue, (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async venueGet(pagenumber?: number, pagesize?: number, source?: string, capacityfilter?: string, roomcountfilter?: string, idlist?: string, categoryfilter?: string, featurefilter?: string, setuptypefilter?: string, locfilter?: string, active?: boolean, odhactive?: boolean, odhtagfilter?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, updatefrom?: string, fields?: string, language?: string, searchfilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResultOfDDVenue>> {\n            const localVarAxiosArgs = await VenueApiAxiosParamCreator(configuration).venueGet(pagenumber, pagesize, source, capacityfilter, roomcountfilter, idlist, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, seed, latitude, longitude, radius, updatefrom, fields, language, searchfilter, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Venue Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async venueGetAllVenueTypesList(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<DDVenueCodes>>> {\n            const localVarAxiosArgs = await VenueApiAxiosParamCreator(configuration).venueGetAllVenueTypesList(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Venue Type Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async venueGetAllVenueTypesSingle(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DDVenueCodes>> {\n            const localVarAxiosArgs = await VenueApiAxiosParamCreator(configuration).venueGetAllVenueTypesSingle(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Venue Single\n         * @param {string} id ID of the Webcam\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async venueGetApiVenueById(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DDVenue>> {\n            const localVarAxiosArgs = await VenueApiAxiosParamCreator(configuration).venueGetApiVenueById(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * VenueApi - factory interface\n * @export\n */\nexport const VenueApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET Venue Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n         * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)\n         * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)\n         * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)\n         * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)\n         * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)\n         * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        venueGeVenueListReduced(language?: string, source?: string, capacityfilter?: string, roomcountfilter?: string, categoryfilter?: string, featurefilter?: string, setuptypefilter?: string, locfilter?: string, active?: boolean, odhactive?: boolean, odhtagfilter?: string, latitude?: string, longitude?: string, radius?: string, updatefrom?: string, options?: any): AxiosPromise<Array<VenueReduced>> {\n            return VenueApiFp(configuration).venueGeVenueListReduced(language, source, capacityfilter, roomcountfilter, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, latitude, longitude, radius, updatefrom, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Venue List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (max 1024), (default:10)\n         * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n         * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)\n         * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Venue IDs), (default:&#x27;null&#x27;)\n         * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)\n         * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)\n         * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)\n         * @param {boolean} [active] Active Venue Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Venues\n         * @param {boolean} [odhactive] ODH Active (Published) Venue Filter (possible Values: &#x27;true&#x27; only published Venue, &#x27;false&#x27; only not published Venue, (default:&#x27;null&#x27;)\n         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        venueGet(pagenumber?: number, pagesize?: number, source?: string, capacityfilter?: string, roomcountfilter?: string, idlist?: string, categoryfilter?: string, featurefilter?: string, setuptypefilter?: string, locfilter?: string, active?: boolean, odhactive?: boolean, odhtagfilter?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, updatefrom?: string, fields?: string, language?: string, searchfilter?: string, options?: any): AxiosPromise<ResultOfDDVenue> {\n            return VenueApiFp(configuration).venueGet(pagenumber, pagesize, source, capacityfilter, roomcountfilter, idlist, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, seed, latitude, longitude, radius, updatefrom, fields, language, searchfilter, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Venue Types List\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        venueGetAllVenueTypesList(options?: any): AxiosPromise<Array<DDVenueCodes>> {\n            return VenueApiFp(configuration).venueGetAllVenueTypesList(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Venue Type Single\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        venueGetAllVenueTypesSingle(id: string, options?: any): AxiosPromise<DDVenueCodes> {\n            return VenueApiFp(configuration).venueGetAllVenueTypesSingle(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Venue Single\n         * @param {string} id ID of the Webcam\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        venueGetApiVenueById(id: string, fields?: string, language?: string, options?: any): AxiosPromise<DDVenue> {\n            return VenueApiFp(configuration).venueGetApiVenueById(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * VenueApi - object-oriented interface\n * @export\n * @class VenueApi\n * @extends {BaseAPI}\n */\nexport class VenueApi extends BaseAPI {\n    /**\n     * \n     * @summary GET Venue Reduced List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n     * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)\n     * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)\n     * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)\n     * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)\n     * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)\n     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VenueApi\n     */\n    public venueGeVenueListReduced(language?: string, source?: string, capacityfilter?: string, roomcountfilter?: string, categoryfilter?: string, featurefilter?: string, setuptypefilter?: string, locfilter?: string, active?: boolean, odhactive?: boolean, odhtagfilter?: string, latitude?: string, longitude?: string, radius?: string, updatefrom?: string, options?: any) {\n        return VenueApiFp(this.configuration).venueGeVenueListReduced(language, source, capacityfilter, roomcountfilter, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, latitude, longitude, radius, updatefrom, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Venue List\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)\n     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n     * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)\n     * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Venue IDs), (default:&#x27;null&#x27;)\n     * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)\n     * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)\n     * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)\n     * @param {boolean} [active] Active Venue Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Venues\n     * @param {boolean} [odhactive] ODH Active (Published) Venue Filter (possible Values: &#x27;true&#x27; only published Venue, &#x27;false&#x27; only not published Venue, (default:&#x27;null&#x27;)\n     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VenueApi\n     */\n    public venueGet(pagenumber?: number, pagesize?: number, source?: string, capacityfilter?: string, roomcountfilter?: string, idlist?: string, categoryfilter?: string, featurefilter?: string, setuptypefilter?: string, locfilter?: string, active?: boolean, odhactive?: boolean, odhtagfilter?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, updatefrom?: string, fields?: string, language?: string, searchfilter?: string, options?: any) {\n        return VenueApiFp(this.configuration).venueGet(pagenumber, pagesize, source, capacityfilter, roomcountfilter, idlist, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, seed, latitude, longitude, radius, updatefrom, fields, language, searchfilter, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Venue Types List\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VenueApi\n     */\n    public venueGetAllVenueTypesList(options?: any) {\n        return VenueApiFp(this.configuration).venueGetAllVenueTypesList(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Venue Type Single\n     * @param {string} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VenueApi\n     */\n    public venueGetAllVenueTypesSingle(id: string, options?: any) {\n        return VenueApiFp(this.configuration).venueGetAllVenueTypesSingle(id, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Venue Single\n     * @param {string} id ID of the Webcam\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VenueApi\n     */\n    public venueGetApiVenueById(id: string, fields?: string, language?: string, options?: any) {\n        return VenueApiFp(this.configuration).venueGetApiVenueById(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { BezirksWeather } from '../models';\nimport { Measuringpoint } from '../models';\nimport { SnowReportBaseData } from '../models';\nimport { Weather } from '../models';\nimport { WeatherRealTime } from '../models';\n/**\n * WeatherApi - axios parameter creator\n * @export\n */\nexport const WeatherApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Snowreport Data LIVE\n         * @param {string} [lang] Language available de,it,en, default: en\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetApiWeatherSnowReport: async (lang?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Weather/SnowReport`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (lang !== undefined) {\n                localVarQueryParameter['lang'] = lang;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET District Weather LIVE (Opendata)\n         * @param {string} locfilter Locfilter (possible values: tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), ALSO POSSIBLE Number 1 to 7 for 7 stations total, &#x27;null&#x27; &#x3D; No Filter)\n         * @param {string} [language] Language available de,it,en, default: en\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetDistrictWeather: async (locfilter: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'locfilter' is not null or undefined\n            if (locfilter === null || locfilter === undefined) {\n                throw new RequiredError('locfilter','Required parameter locfilter was null or undefined when calling weatherGetDistrictWeather.');\n            }\n            const localVarPath = `/api/Weather/District`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Measuringpoint SINGLE\n         * @param {string} id Measuringpoint ID\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [table] \n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetMeasuringPoint: async (id: string, fields?: string, table?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling weatherGetMeasuringPoint.');\n            }\n            const localVarPath = `/api/Weather/Measuringpoint/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (table !== undefined) {\n                localVarQueryParameter['table'] = table;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Measuringpoint LIST (Opendata)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [skiareafilter] Skiarea ID\n         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetMeasuringPoints: async (idlist?: string, locfilter?: string, areafilter?: string, skiareafilter?: string, odhactive?: boolean, active?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Weather/Measuringpoint`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            if (areafilter !== undefined) {\n                localVarQueryParameter['areafilter'] = areafilter;\n            }\n\n            if (skiareafilter !== undefined) {\n                localVarQueryParameter['skiareafilter'] = skiareafilter;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            if (searchfilter !== undefined) {\n                localVarQueryParameter['searchfilter'] = searchfilter;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Current Realtime Weather LIVE\n         * @param {string} [language] Language available de,it,en, default: en\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetRealtimeWeather: async (language?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Weather/Realtime`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Snowreport Data LIVE by Skiarea\n         * @param {string} skiareaid Skiarea ID\n         * @param {string} [lang] Language available de,it,en, default: en\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetSnowReportBase: async (skiareaid: string, lang?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'skiareaid' is not null or undefined\n            if (skiareaid === null || skiareaid === undefined) {\n                throw new RequiredError('skiareaid','Required parameter skiareaid was null or undefined when calling weatherGetSnowReportBase.');\n            }\n            const localVarPath = `/api/Weather/SnowReport/{skiareaid}`\n                .replace(`{${\"skiareaid\"}}`, encodeURIComponent(String(skiareaid)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (lang !== undefined) {\n                localVarQueryParameter['lang'] = lang;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Current Suedtirol Weather LIVE (Opendata)\n         * @param {string} [language] Language available de,it,en, default: en\n         * @param {string} [locfilter] Locfilter (possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;&#x27; &#x3D; No Filter). IF a Locfilter is set, only Stationdata is provided.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetWeather: async (language?: string, locfilter?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/Weather`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (locfilter !== undefined) {\n                localVarQueryParameter['locfilter'] = locfilter;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * WeatherApi - functional programming interface\n * @export\n */\nexport const WeatherApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Snowreport Data LIVE\n         * @param {string} [lang] Language available de,it,en, default: en\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async weatherGetApiWeatherSnowReport(lang?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SnowReportBaseData>>> {\n            const localVarAxiosArgs = await WeatherApiAxiosParamCreator(configuration).weatherGetApiWeatherSnowReport(lang, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET District Weather LIVE (Opendata)\n         * @param {string} locfilter Locfilter (possible values: tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), ALSO POSSIBLE Number 1 to 7 for 7 stations total, &#x27;null&#x27; &#x3D; No Filter)\n         * @param {string} [language] Language available de,it,en, default: en\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async weatherGetDistrictWeather(locfilter: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BezirksWeather>> {\n            const localVarAxiosArgs = await WeatherApiAxiosParamCreator(configuration).weatherGetDistrictWeather(locfilter, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Measuringpoint SINGLE\n         * @param {string} id Measuringpoint ID\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [table] \n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async weatherGetMeasuringPoint(id: string, fields?: string, table?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Measuringpoint>> {\n            const localVarAxiosArgs = await WeatherApiAxiosParamCreator(configuration).weatherGetMeasuringPoint(id, fields, table, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Measuringpoint LIST (Opendata)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [skiareafilter] Skiarea ID\n         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async weatherGetMeasuringPoints(idlist?: string, locfilter?: string, areafilter?: string, skiareafilter?: string, odhactive?: boolean, active?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Measuringpoint>>> {\n            const localVarAxiosArgs = await WeatherApiAxiosParamCreator(configuration).weatherGetMeasuringPoints(idlist, locfilter, areafilter, skiareafilter, odhactive, active, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Current Realtime Weather LIVE\n         * @param {string} [language] Language available de,it,en, default: en\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async weatherGetRealtimeWeather(language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<WeatherRealTime>> {\n            const localVarAxiosArgs = await WeatherApiAxiosParamCreator(configuration).weatherGetRealtimeWeather(language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Snowreport Data LIVE by Skiarea\n         * @param {string} skiareaid Skiarea ID\n         * @param {string} [lang] Language available de,it,en, default: en\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async weatherGetSnowReportBase(skiareaid: string, lang?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SnowReportBaseData>> {\n            const localVarAxiosArgs = await WeatherApiAxiosParamCreator(configuration).weatherGetSnowReportBase(skiareaid, lang, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Current Suedtirol Weather LIVE (Opendata)\n         * @param {string} [language] Language available de,it,en, default: en\n         * @param {string} [locfilter] Locfilter (possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;&#x27; &#x3D; No Filter). IF a Locfilter is set, only Stationdata is provided.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async weatherGetWeather(language?: string, locfilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Weather>> {\n            const localVarAxiosArgs = await WeatherApiAxiosParamCreator(configuration).weatherGetWeather(language, locfilter, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * WeatherApi - factory interface\n * @export\n */\nexport const WeatherApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET Snowreport Data LIVE\n         * @param {string} [lang] Language available de,it,en, default: en\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetApiWeatherSnowReport(lang?: string, options?: any): AxiosPromise<Array<SnowReportBaseData>> {\n            return WeatherApiFp(configuration).weatherGetApiWeatherSnowReport(lang, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET District Weather LIVE (Opendata)\n         * @param {string} locfilter Locfilter (possible values: tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), ALSO POSSIBLE Number 1 to 7 for 7 stations total, &#x27;null&#x27; &#x3D; No Filter)\n         * @param {string} [language] Language available de,it,en, default: en\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetDistrictWeather(locfilter: string, language?: string, options?: any): AxiosPromise<BezirksWeather> {\n            return WeatherApiFp(configuration).weatherGetDistrictWeather(locfilter, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Measuringpoint SINGLE\n         * @param {string} id Measuringpoint ID\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [table] \n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetMeasuringPoint(id: string, fields?: string, table?: string, language?: string, options?: any): AxiosPromise<Measuringpoint> {\n            return WeatherApiFp(configuration).weatherGetMeasuringPoint(id, fields, table, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Measuringpoint LIST (Opendata)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)\n         * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n         * @param {string} [skiareafilter] Skiarea ID\n         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetMeasuringPoints(idlist?: string, locfilter?: string, areafilter?: string, skiareafilter?: string, odhactive?: boolean, active?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any): AxiosPromise<Array<Measuringpoint>> {\n            return WeatherApiFp(configuration).weatherGetMeasuringPoints(idlist, locfilter, areafilter, skiareafilter, odhactive, active, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Current Realtime Weather LIVE\n         * @param {string} [language] Language available de,it,en, default: en\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetRealtimeWeather(language?: string, options?: any): AxiosPromise<WeatherRealTime> {\n            return WeatherApiFp(configuration).weatherGetRealtimeWeather(language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Snowreport Data LIVE by Skiarea\n         * @param {string} skiareaid Skiarea ID\n         * @param {string} [lang] Language available de,it,en, default: en\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetSnowReportBase(skiareaid: string, lang?: string, options?: any): AxiosPromise<SnowReportBaseData> {\n            return WeatherApiFp(configuration).weatherGetSnowReportBase(skiareaid, lang, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Current Suedtirol Weather LIVE (Opendata)\n         * @param {string} [language] Language available de,it,en, default: en\n         * @param {string} [locfilter] Locfilter (possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;&#x27; &#x3D; No Filter). IF a Locfilter is set, only Stationdata is provided.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        weatherGetWeather(language?: string, locfilter?: string, options?: any): AxiosPromise<Weather> {\n            return WeatherApiFp(configuration).weatherGetWeather(language, locfilter, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * WeatherApi - object-oriented interface\n * @export\n * @class WeatherApi\n * @extends {BaseAPI}\n */\nexport class WeatherApi extends BaseAPI {\n    /**\n     * \n     * @summary GET Snowreport Data LIVE\n     * @param {string} [lang] Language available de,it,en, default: en\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WeatherApi\n     */\n    public weatherGetApiWeatherSnowReport(lang?: string, options?: any) {\n        return WeatherApiFp(this.configuration).weatherGetApiWeatherSnowReport(lang, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET District Weather LIVE (Opendata)\n     * @param {string} locfilter Locfilter (possible values: tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), ALSO POSSIBLE Number 1 to 7 for 7 stations total, &#x27;null&#x27; &#x3D; No Filter)\n     * @param {string} [language] Language available de,it,en, default: en\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WeatherApi\n     */\n    public weatherGetDistrictWeather(locfilter: string, language?: string, options?: any) {\n        return WeatherApiFp(this.configuration).weatherGetDistrictWeather(locfilter, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Measuringpoint SINGLE\n     * @param {string} id Measuringpoint ID\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [table] \n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WeatherApi\n     */\n    public weatherGetMeasuringPoint(id: string, fields?: string, table?: string, language?: string, options?: any) {\n        return WeatherApiFp(this.configuration).weatherGetMeasuringPoint(id, fields, table, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Measuringpoint LIST (Opendata)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)\n     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)\n     * @param {string} [skiareafilter] Skiarea ID\n     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)\n     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WeatherApi\n     */\n    public weatherGetMeasuringPoints(idlist?: string, locfilter?: string, areafilter?: string, skiareafilter?: string, odhactive?: boolean, active?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, language?: string, updatefrom?: string, searchfilter?: string, options?: any) {\n        return WeatherApiFp(this.configuration).weatherGetMeasuringPoints(idlist, locfilter, areafilter, skiareafilter, odhactive, active, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Current Realtime Weather LIVE\n     * @param {string} [language] Language available de,it,en, default: en\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WeatherApi\n     */\n    public weatherGetRealtimeWeather(language?: string, options?: any) {\n        return WeatherApiFp(this.configuration).weatherGetRealtimeWeather(language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Snowreport Data LIVE by Skiarea\n     * @param {string} skiareaid Skiarea ID\n     * @param {string} [lang] Language available de,it,en, default: en\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WeatherApi\n     */\n    public weatherGetSnowReportBase(skiareaid: string, lang?: string, options?: any) {\n        return WeatherApiFp(this.configuration).weatherGetSnowReportBase(skiareaid, lang, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Current Suedtirol Weather LIVE (Opendata)\n     * @param {string} [language] Language available de,it,en, default: en\n     * @param {string} [locfilter] Locfilter (possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;&#x27; &#x3D; No Filter). IF a Locfilter is set, only Stationdata is provided.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WeatherApi\n     */\n    public weatherGetWeather(language?: string, locfilter?: string, options?: any) {\n        return WeatherApiFp(this.configuration).weatherGetWeather(language, locfilter, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { ResultOfWebcamInfo } from '../models';\nimport { WebcamInfo } from '../models';\nimport { WebcamInfoReduced } from '../models';\n/**\n * WebcamInfoApi - axios parameter creator\n * @export\n */\nexport const WebcamInfoApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Webcam List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (max 1024), (default:10)\n         * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Gastronomy IDs), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        webcamInfoGet: async (pagenumber?: number, pagesize?: number, source?: string, idlist?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, updatefrom?: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/WebcamInfo`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (pagenumber !== undefined) {\n                localVarQueryParameter['pagenumber'] = pagenumber;\n            }\n\n            if (pagesize !== undefined) {\n                localVarQueryParameter['pagesize'] = pagesize;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (idlist !== undefined) {\n                localVarQueryParameter['idlist'] = idlist;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (seed !== undefined) {\n                localVarQueryParameter['seed'] = seed;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Webcam Single\n         * @param {string} id ID of the Webcam\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        webcamInfoGetApiWebcamInfoById: async (id: string, fields?: string, language?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling webcamInfoGetApiWebcamInfoById.');\n            }\n            const localVarPath = `/api/WebcamInfo/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary GET Webcam Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        webcamInfoGetWebcamListReduced: async (language?: string, source?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, updatefrom?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/api/WebcamInfoReduced`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication oauth2 required\n            // oauth required\n            if (configuration && configuration.accessToken) {\n                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                    ? await configuration.accessToken(\"oauth2\", [\"\"])\n                    : await configuration.accessToken;\n                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n            }\n\n            if (language !== undefined) {\n                localVarQueryParameter['language'] = language;\n            }\n\n            if (source !== undefined) {\n                localVarQueryParameter['source'] = source;\n            }\n\n            if (active !== undefined) {\n                localVarQueryParameter['active'] = active;\n            }\n\n            if (odhactive !== undefined) {\n                localVarQueryParameter['odhactive'] = odhactive;\n            }\n\n            if (latitude !== undefined) {\n                localVarQueryParameter['latitude'] = latitude;\n            }\n\n            if (longitude !== undefined) {\n                localVarQueryParameter['longitude'] = longitude;\n            }\n\n            if (radius !== undefined) {\n                localVarQueryParameter['radius'] = radius;\n            }\n\n            if (fields !== undefined) {\n                localVarQueryParameter['fields'] = fields;\n            }\n\n            if (updatefrom !== undefined) {\n                localVarQueryParameter['updatefrom'] = updatefrom;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                query.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * WebcamInfoApi - functional programming interface\n * @export\n */\nexport const WebcamInfoApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary GET Webcam List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (max 1024), (default:10)\n         * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Gastronomy IDs), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async webcamInfoGet(pagenumber?: number, pagesize?: number, source?: string, idlist?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, updatefrom?: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResultOfWebcamInfo>> {\n            const localVarAxiosArgs = await WebcamInfoApiAxiosParamCreator(configuration).webcamInfoGet(pagenumber, pagesize, source, idlist, active, odhactive, seed, latitude, longitude, radius, updatefrom, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Webcam Single\n         * @param {string} id ID of the Webcam\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async webcamInfoGetApiWebcamInfoById(id: string, fields?: string, language?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<WebcamInfo>> {\n            const localVarAxiosArgs = await WebcamInfoApiAxiosParamCreator(configuration).webcamInfoGetApiWebcamInfoById(id, fields, language, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary GET Webcam Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async webcamInfoGetWebcamListReduced(language?: string, source?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, updatefrom?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<WebcamInfoReduced>>> {\n            const localVarAxiosArgs = await WebcamInfoApiAxiosParamCreator(configuration).webcamInfoGetWebcamListReduced(language, source, active, odhactive, latitude, longitude, radius, fields, updatefrom, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * WebcamInfoApi - factory interface\n * @export\n */\nexport const WebcamInfoApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary GET Webcam List\n         * @param {number} [pagenumber] Pagenumber, (default:1)\n         * @param {number} [pagesize] Elements per Page (max 1024), (default:10)\n         * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Gastronomy IDs), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)\n         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        webcamInfoGet(pagenumber?: number, pagesize?: number, source?: string, idlist?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, updatefrom?: string, fields?: string, language?: string, options?: any): AxiosPromise<ResultOfWebcamInfo> {\n            return WebcamInfoApiFp(configuration).webcamInfoGet(pagenumber, pagesize, source, idlist, active, odhactive, seed, latitude, longitude, radius, updatefrom, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Webcam Single\n         * @param {string} id ID of the Webcam\n         * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        webcamInfoGetApiWebcamInfoById(id: string, fields?: string, language?: string, options?: any): AxiosPromise<WebcamInfo> {\n            return WebcamInfoApiFp(configuration).webcamInfoGetApiWebcamInfoById(id, fields, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary GET Webcam Reduced List\n         * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n         * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n         * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n         * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)\n         * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n         * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n         * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n         * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        webcamInfoGetWebcamListReduced(language?: string, source?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, updatefrom?: string, options?: any): AxiosPromise<Array<WebcamInfoReduced>> {\n            return WebcamInfoApiFp(configuration).webcamInfoGetWebcamListReduced(language, source, active, odhactive, latitude, longitude, radius, fields, updatefrom, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * WebcamInfoApi - object-oriented interface\n * @export\n * @class WebcamInfoApi\n * @extends {BaseAPI}\n */\nexport class WebcamInfoApi extends BaseAPI {\n    /**\n     * \n     * @summary GET Webcam List\n     * @param {number} [pagenumber] Pagenumber, (default:1)\n     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)\n     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Gastronomy IDs), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)\n     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WebcamInfoApi\n     */\n    public webcamInfoGet(pagenumber?: number, pagesize?: number, source?: string, idlist?: string, active?: boolean, odhactive?: boolean, seed?: string, latitude?: string, longitude?: string, radius?: string, updatefrom?: string, fields?: string, language?: string, options?: any) {\n        return WebcamInfoApiFp(this.configuration).webcamInfoGet(pagenumber, pagesize, source, idlist, active, odhactive, seed, latitude, longitude, radius, updatefrom, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Webcam Single\n     * @param {string} id ID of the Webcam\n     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WebcamInfoApi\n     */\n    public webcamInfoGetApiWebcamInfoById(id: string, fields?: string, language?: string, options?: any) {\n        return WebcamInfoApiFp(this.configuration).webcamInfoGetApiWebcamInfoById(id, fields, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary GET Webcam Reduced List\n     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)\n     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)\n     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies\n     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)\n     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)\n     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)\n     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)\n     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WebcamInfoApi\n     */\n    public webcamInfoGetWebcamListReduced(language?: string, source?: string, active?: boolean, odhactive?: boolean, latitude?: string, longitude?: string, radius?: string, fields?: string, updatefrom?: string, options?: any) {\n        return WebcamInfoApiFp(this.configuration).webcamInfoGetWebcamListReduced(language, source, active, odhactive, latitude, longitude, radius, fields, updatefrom, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */export * from './apis/accommodation-api';\nexport * from './apis/activity-api';\nexport * from './apis/article-api';\nexport * from './apis/common-api';\nexport * from './apis/event-api';\nexport * from './apis/gastronomy-api';\nexport * from './apis/json-ldapi';\nexport * from './apis/location-api';\nexport * from './apis/login-api';\nexport * from './apis/odhactivity-poi-api';\nexport * from './apis/odhtag-api';\nexport * from './apis/poi-api';\nexport * from './apis/venue-api';\nexport * from './apis/weather-api';\nexport * from './apis/webcam-info-api';\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nexport interface ConfigurationParameters {\n    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);\n    username?: string;\n    password?: string;\n    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);\n    basePath?: string;\n    baseOptions?: any;\n}\n\nexport class Configuration {\n    /**\n     * parameter for apiKey security\n     * @param name security name\n     * @memberof Configuration\n     */\n    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);\n    /**\n     * parameter for basic security\n     *\n     * @type {string}\n     * @memberof Configuration\n     */\n    username?: string;\n    /**\n     * parameter for basic security\n     *\n     * @type {string}\n     * @memberof Configuration\n     */\n    password?: string;\n    /**\n     * parameter for oauth2 security\n     * @param name security name\n     * @param scopes oauth2 scope\n     * @memberof Configuration\n     */\n    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);\n    /**\n     * override base path\n     *\n     * @type {string}\n     * @memberof Configuration\n     */\n    basePath?: string;\n    /**\n     * base options for axios calls\n     *\n     * @type {any}\n     * @memberof Configuration\n     */\n    baseOptions?: any;\n\n    constructor(param: ConfigurationParameters = {}) {\n        this.apiKey = param.apiKey;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n        this.baseOptions = param.baseOptions;\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Open Data Hub Api Tourism\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: V1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nexport * from \"./api\";\nexport * from \"./configuration\";\n\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.totalPages > 1)?_c('div',{staticClass:\"paging\"},[(_vm.currentPage !== 1)?_c('div',{staticClass:\"back\",on:{\"click\":_vm.lastPage}},[_vm._v(\" \"+_vm._s(_vm.$t('paging.back'))+\" \")]):_vm._e(),(_vm.totalPages < 8)?_c('div',_vm._l((_vm.totalPages),function(page){return _c('span',{key:page,staticClass:\"item\",class:{ 'selected-item': _vm.currentPage === page },on:{\"click\":function($event){return _vm.goToPage(page)}}},[_vm._v(\" \"+_vm._s(page)+\" \")])}),0):_c('div',[(_vm.currentPage < 4)?_c('div',[_c('span',{staticClass:\"item\",class:{ 'selected-item': _vm.currentPage === 1 },on:{\"click\":function($event){return _vm.goToPage(1)}}},[_vm._v(\"1\")]),_c('span',{staticClass:\"item\",class:{ 'selected-item': _vm.currentPage === 2 },on:{\"click\":function($event){return _vm.goToPage(2)}}},[_vm._v(\"2\")]),_c('span',{staticClass:\"item\",class:{ 'selected-item': _vm.currentPage === 3 },on:{\"click\":function($event){return _vm.goToPage(3)}}},[_vm._v(\"3\")]),_c('span',{staticClass:\"item\",class:{ 'selected-item': _vm.currentPage === 4 },on:{\"click\":function($event){return _vm.goToPage(4)}}},[_vm._v(\"4\")]),_c('span',{staticClass:\"item\"},[_vm._v(\"...\")]),_c('span',{staticClass:\"item\",on:{\"click\":function($event){return _vm.goToPage(_vm.totalPages)}}},[_vm._v(_vm._s(_vm.totalPages))])]):(_vm.currentPage < _vm.totalPages - 2)?_c('div',[_c('span',{staticClass:\"item\",on:{\"click\":function($event){return _vm.goToPage(1)}}},[_vm._v(\"1\")]),_c('span',{staticClass:\"item\"},[_vm._v(\"...\")]),_c('span',{staticClass:\"item\",on:{\"click\":function($event){return _vm.goToPage(_vm.currentPage - 1)}}},[_vm._v(_vm._s(_vm.currentPage - 1))]),_c('span',{staticClass:\"item selected-item\"},[_vm._v(_vm._s(_vm.currentPage))]),_c('span',{staticClass:\"item\",on:{\"click\":function($event){return _vm.goToPage(_vm.currentPage + 1)}}},[_vm._v(_vm._s(_vm.currentPage + 1))]),_c('span',{staticClass:\"item\"},[_vm._v(\"...\")]),_c('span',{staticClass:\"item\",on:{\"click\":function($event){return _vm.goToPage(_vm.totalPages)}}},[_vm._v(_vm._s(_vm.totalPages))])]):_c('div',[_c('span',{staticClass:\"item\",on:{\"click\":function($event){return _vm.goToPage(1)}}},[_vm._v(\"1\")]),_c('span',{staticClass:\"item\"},[_vm._v(\"...\")]),_c('span',{staticClass:\"item\",class:{ 'selected-item': _vm.currentPage === _vm.totalPages - 3 },on:{\"click\":function($event){return _vm.goToPage(_vm.totalPages - 3)}}},[_vm._v(_vm._s(_vm.totalPages - 3))]),_c('span',{staticClass:\"item\",class:{ 'selected-item': _vm.currentPage === _vm.totalPages - 2 },on:{\"click\":function($event){return _vm.goToPage(_vm.totalPages - 2)}}},[_vm._v(_vm._s(_vm.totalPages - 2))]),_c('span',{staticClass:\"item\",class:{ 'selected-item': _vm.currentPage === _vm.totalPages - 1 },on:{\"click\":function($event){return _vm.goToPage(_vm.totalPages - 1)}}},[_vm._v(_vm._s(_vm.totalPages - 1))]),_c('span',{staticClass:\"item\",class:{ 'selected-item': _vm.currentPage === _vm.totalPages },on:{\"click\":function($event){return _vm.goToPage(_vm.totalPages)}}},[_vm._v(_vm._s(_vm.totalPages))])])]),(_vm.currentPage !== _vm.totalPages)?_c('div',{staticClass:\"next\",on:{\"click\":_vm.nextPage}},[_vm._v(\" \"+_vm._s(_vm.$t('paging.next'))+\" \")]):_vm._e()]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"paging\" v-if=\"totalPages > 1\">\n    <div @click=\"lastPage\" class=\"back\" v-if=\"currentPage !== 1\">\n      {{ $t('paging.back') }}\n    </div>\n    <div v-if=\"totalPages < 8\">\n      <span\n        class=\"item\"\n        v-for=\"page in totalPages\"\n        @click=\"goToPage(page)\"\n        :class=\"{ 'selected-item': currentPage === page }\"\n        :key=\"page\"\n      >\n        {{ page }}\n      </span>\n    </div>\n    <div v-else>\n      <div v-if=\"currentPage < 4\">\n        <span\n          class=\"item\"\n          @click=\"goToPage(1)\"\n          :class=\"{ 'selected-item': currentPage === 1 }\"\n          >1</span\n        >\n        <span\n          class=\"item\"\n          @click=\"goToPage(2)\"\n          :class=\"{ 'selected-item': currentPage === 2 }\"\n          >2</span\n        >\n        <span\n          class=\"item\"\n          @click=\"goToPage(3)\"\n          :class=\"{ 'selected-item': currentPage === 3 }\"\n          >3</span\n        >\n        <span\n          class=\"item\"\n          @click=\"goToPage(4)\"\n          :class=\"{ 'selected-item': currentPage === 4 }\"\n          >4</span\n        >\n        <span class=\"item\">...</span>\n        <span class=\"item\" @click=\"goToPage(totalPages)\">{{ totalPages }}</span>\n      </div>\n      <div v-else-if=\"currentPage < totalPages - 2\">\n        <span class=\"item\" @click=\"goToPage(1)\">1</span>\n        <span class=\"item\">...</span>\n        <span class=\"item\" @click=\"goToPage(currentPage - 1)\">{{\n          currentPage - 1\n        }}</span>\n        <span class=\"item selected-item\">{{ currentPage }}</span>\n        <span class=\"item\" @click=\"goToPage(currentPage + 1)\">{{\n          currentPage + 1\n        }}</span>\n        <span class=\"item\">...</span>\n        <span class=\"item\" @click=\"goToPage(totalPages)\">{{ totalPages }}</span>\n      </div>\n      <div v-else>\n        <span class=\"item\" @click=\"goToPage(1)\">1</span>\n        <span class=\"item\">...</span>\n        <span\n          class=\"item\"\n          @click=\"goToPage(totalPages - 3)\"\n          :class=\"{ 'selected-item': currentPage === totalPages - 3 }\"\n          >{{ totalPages - 3 }}</span\n        >\n        <span\n          class=\"item\"\n          @click=\"goToPage(totalPages - 2)\"\n          :class=\"{ 'selected-item': currentPage === totalPages - 2 }\"\n          >{{ totalPages - 2 }}</span\n        >\n        <span\n          class=\"item\"\n          @click=\"goToPage(totalPages - 1)\"\n          :class=\"{ 'selected-item': currentPage === totalPages - 1 }\"\n          >{{ totalPages - 1 }}</span\n        >\n        <span\n          class=\"item\"\n          @click=\"goToPage(totalPages)\"\n          :class=\"{ 'selected-item': currentPage === totalPages }\"\n          >{{ totalPages }}</span\n        >\n      </div>\n    </div>\n    <div @click=\"nextPage\" v-if=\"currentPage !== totalPages\" class=\"next\">\n      {{ $t('paging.next') }}\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Paging',\n  props: {\n    currentPage: {\n      required: true,\n      type: Number,\n    },\n    totalPages: {\n      required: true,\n      type: Number,\n    },\n  },\n  methods: {\n    nextPage() {\n      this.$emit('next-page');\n    },\n    lastPage() {\n      this.$emit('last-page');\n    },\n    goToPage(pageNum) {\n      this.$emit('go-to-page', pageNum);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.paging {\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.item {\n  padding-right: 4px;\n  padding-left: 4px;\n}\n\n.item:hover {\n  cursor: pointer;\n}\n\n.selected-item {\n  color: #2980b9;\n}\n\n.back {\n  margin-right: 20px;\n}\n\n.back:hover,\n.next:hover {\n  cursor: pointer;\n}\n\n.next {\n  margin-left: 20px;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Paging.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Paging.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Paging.vue?vue&type=template&id=356619ac&scoped=true&\"\nimport script from \"./Paging.vue?vue&type=script&lang=js&\"\nexport * from \"./Paging.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./Paging.vue?vue&type=style&index=0&id=356619ac&scoped=true&lang=css&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  \"356619ac\",\n  null\n  ,true\n)\n\nexport default component.exports","<template>\n  <div class=\"list\">\n    <h2 class=\"page-title\">{{ $t(contentType) }}</h2>\n    <paging\n      :current-page=\"currentPage\"\n      :total-pages=\"totalPages\"\n      @next-page=\"nextPage\"\n      @last-page=\"lastPage\"\n      @go-to-page=\"goToPage\"\n    ></paging>\n    <template v-if=\"items.length > 0\">\n      <div\n        v-for=\"item of items\"\n        :key=\"item.id\"\n        @click.prevent=\"showDetail(item.Id)\"\n        class=\"item-container\"\n      >\n        <hr class=\"solid\" />\n        <div class=\"list-item\">\n          <div\n            v-if=\"item.ImageGallery === null || item.ImageGallery.length === 0\"\n          >\n            <img class=\"thumbnail\" :src=\"placeholderImage\" />\n          </div>\n          <div v-else>\n            <img class=\"thumbnail\" :src=\"item.ImageGallery[0].ImageUrl\" />\n          </div>\n          <div class=\"info\">\n            <div class=\"title\">{{ getTitle(item, language) }}</div>\n            <div v-if=\"contentType === 'Gastronomy'\" class=\"short-info\">\n              {{ getGastronomyShortInfo(item) }}\n            </div>\n            <div v-else-if=\"contentType === 'Activity'\" class=\"short-info\">\n              {{ getActivityShortInfo(item) }}\n            </div>\n            <div v-else-if=\"contentType === 'POI'\" class=\"short-info\">\n              {{ getPoiShortInfo(item) }}\n            </div>\n          </div>\n          <img src=\"@/assets/img/arrow_right.svg\" width=\"28\" height=\"28\" />\n        </div>\n      </div>\n    </template>\n    <div v-else-if=\"isLoading\" class=\"loading-spinner\">\n      <img src=\"@/assets/img/loading.gif\" />\n    </div>\n    <div class=\"noResult\" v-else>{{ $t('noResults') }}</div>\n    <div v-if=\"items.length === 1\" class=\"item-container\"></div>\n    <div class=\"bottom-divider\" v-if=\"items.length > 0\">\n      <hr class=\"solid\" />\n    </div>\n    <div class=\"bottom-divider bottom-divider2\" v-if=\"items.length > 1\">\n      <hr class=\"solid\" />\n    </div>\n    <paging\n      :current-page=\"currentPage\"\n      :total-pages=\"totalPages\"\n      @next-page=\"nextPage\"\n      @last-page=\"lastPage\"\n      @go-to-page=\"goToPage\"\n    ></paging>\n  </div>\n</template>\n\n<script>\nimport { ActivityApi, GastronomyApi, PoiApi } from '@/api';\nimport Paging from '@/components/Paging';\n\nexport default {\n  components: { Paging },\n  props: {\n    language: {\n      type: String,\n      default: 'en',\n    },\n    contentType: {\n      type: String,\n      default: 'Gastronomy',\n    },\n    contentIdList: {\n      type: String,\n      default: null,\n    },\n    pageSize: {\n      type: Number,\n      default: 20,\n    },\n    category: {\n      type: String,\n      default: null,\n    },\n    currentPage: {\n      type: Number,\n      default: 1,\n    },\n  },\n  data() {\n    return {\n      items: [],\n      gastronomyTypes: [],\n      activityTypes: [],\n      totalPages: 0,\n      isLoading: false,\n    };\n  },\n  created() {\n    if (this.contentType === 'Gastronomy') {\n      this.loadGastronomyTypeList();\n      this.loadGastronomyList(this.currentPage);\n    } else if (this.contentType === 'Activity') {\n      this.loadActivityTypeList();\n      this.loadActivityList(this.currentPage);\n    } else if (this.contentType === 'POI') {\n      this.loadPoiList(this.currentPage);\n    }\n  },\n  computed: {\n    placeholderImage() {\n      if (this.contentType === 'Gastronomy') {\n        return require('../assets/img/gastro-placeholder.svg');\n      } else if (this.contentType === 'Activity') {\n        return require('../assets/img/Activity-Placeholder.svg');\n      } else {\n        return require('../assets/img/POI-Placeholder.svg');\n      }\n    },\n  },\n  methods: {\n    nextPage() {\n      this.items = [];\n      if (this.contentType === 'Gastronomy') {\n        this.loadGastronomyList(this.currentPage + 1);\n      } else if (this.contentType === 'Activity') {\n        this.loadActivityList(this.currentPage + 1);\n      } else {\n        this.loadPoiList(this.currentPage + 1);\n      }\n      this.$emit('change-current-page', this.currentPage + 1);\n    },\n    lastPage() {\n      this.items = [];\n      if (this.contentType === 'Gastronomy') {\n        this.loadGastronomyList(this.currentPage - 1);\n      } else if (this.contentType === 'Activity') {\n        this.loadActivityList(this.currentPage - 1);\n      } else {\n        this.loadPoiList(this.currentPage - 1);\n      }\n      this.$emit('change-current-page', this.currentPage - 1);\n    },\n    goToPage(pageNum) {\n      this.items = [];\n      if (this.contentType === 'Gastronomy') {\n        this.loadGastronomyList(pageNum);\n      } else if (this.contentType === 'Activity') {\n        this.loadActivityList(pageNum);\n      } else {\n        this.loadPoiList(pageNum);\n      }\n      this.$emit('change-current-page', pageNum);\n    },\n    showDetail(contentId) {\n      this.$emit('show-detail', contentId);\n    },\n    loadActivityTypeList() {\n      const activityApi = new ActivityApi();\n      activityApi.activityGetAllActivityTypesList().then((value) => {\n        this.activityTypes = value.data;\n      });\n    },\n    loadActivityList(pageNum) {\n      this.isLoading = true;\n      const activityApi = new ActivityApi();\n      activityApi\n        .activityGetActivityList(\n          null,\n          pageNum,\n          this.pageSize,\n          this.category,\n          null,\n          this.contentIdList,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          true,\n          true,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          []\n        )\n        .then((value) => {\n          this.items = value?.data?.Items ?? [];\n          this.$emit('change-current-page', value?.data?.CurrentPage);\n          this.totalPages = value?.data?.TotalPages;\n          this.isLoading = false;\n        });\n    },\n    loadGastronomyTypeList() {\n      const gastronomyApi = new GastronomyApi();\n      gastronomyApi.gastronomyGetAllGastronomyTypesList().then((value) => {\n        this.gastronomyTypes = value.data;\n      });\n    },\n    loadGastronomyList(pageNum) {\n      this.isLoading = true;\n      const gastronomyApi = new GastronomyApi();\n      gastronomyApi\n        .gastronomyGetGastronomyList(\n          pageNum,\n          this.pageSize,\n          this.contentIdList,\n          null,\n          null,\n          null,\n          this.category,\n          null,\n          null,\n          null,\n          true,\n          true,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null\n        )\n        .then((value) => {\n          this.items = value?.data?.Items ?? [];\n          this.$emit('change-current-page', value?.data?.CurrentPage);\n          this.totalPages = value?.data?.TotalPages;\n          this.isLoading = false;\n        });\n    },\n    loadPoiList(pageNum) {\n      this.isLoading = true;\n      const poiApi = new PoiApi();\n      poiApi\n        .poiGetPoiFiltered(\n          pageNum,\n          this.pageSize,\n          this.category,\n          null,\n          this.contentIdList,\n          null,\n          null,\n          null,\n          null,\n          true,\n          true,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          []\n        )\n        .then((value) => {\n          this.items = value?.data?.Items ?? [];\n          this.$emit('change-current-page', value?.data?.CurrentPage);\n          this.totalPages = value?.data?.TotalPages;\n          this.isLoading = false;\n        });\n    },\n    getGastronomyShortInfo(item) {\n      const shortInfo = [];\n      shortInfo.push(...this.getGastronomyTypes(item));\n      if (item?.ContactInfos?.[this.language]?.City) {\n        const location =\n          this.$t('location') + ': ' + item.ContactInfos?.[this.language].City;\n        shortInfo.push(location);\n      }\n      if (item?.ContactInfos?.en?.Phonenumber) {\n        const telephone =\n          this.$t('phone') + ': ' + item.ContactInfos.en.Phonenumber;\n        shortInfo.push(telephone);\n      }\n      if (item?.ContactInfos?.en?.Url) {\n        const url = this.$t('web') + ': ' + item.ContactInfos.en.Url;\n        shortInfo.push(url);\n      }\n      return shortInfo.filter((info) => info != null).join(', ');\n    },\n    getGastronomyTypes(item) {\n      const categoryCodeIds = item.CategoryCodes.map((code) =>\n        this.gastronomyTypes.find((x) => x.Id === code.Id)\n      );\n      const categories = categoryCodeIds.map((category) => {\n        if (this.language === 'de') {\n          return category?.TypeDesc?.de ?? '-';\n        } else if (this.language === 'it') {\n          return category?.TypeDesc?.it ?? '-';\n        } else {\n          return category?.TypeDesc?.en ?? '-';\n        }\n      });\n      return categories;\n    },\n    getActivityShortInfo(item) {\n      const shortInfo = [];\n      shortInfo.push(...this.getActivityTypes(item));\n      if (item?.ContactInfos?.[this.language]?.City) {\n        const location =\n          this.$t('location') + ': ' + item.ContactInfos?.[this.language].City;\n        shortInfo.push(location);\n      }\n      if (item?.ContactInfos?.en?.Phonenumber) {\n        const telephone =\n          this.$t('phone') + ': ' + item.ContactInfos.en.Phonenumber;\n        shortInfo.push(telephone);\n      }\n      if (item?.ContactInfos?.en?.Url) {\n        const url = this.$t('web') + ': ' + item.ContactInfos.en.Url;\n        shortInfo.push(url);\n      }\n      if (item?.Difficulty) {\n        const difficulty = 'Difficulty: ' + item?.Difficulty;\n        shortInfo.push(difficulty);\n      }\n      return shortInfo.filter((info) => info != null).join(', ');\n    },\n    getActivityTypes(item) {\n      let categoryCodeIds = item.ActivityTypes.map((code) =>\n        this.activityTypes.find((x) => x.Id === code.Id)\n      );\n      categoryCodeIds = categoryCodeIds.filter(function(el) {\n        return el != null;\n      });\n      const categories = categoryCodeIds.map((category) => {\n        if (this.language === 'de') {\n          return category?.TypeDesc?.de ?? '-';\n        } else if (this.language === 'it') {\n          return category?.TypeDesc?.it ?? '-';\n        } else {\n          return category?.TypeDesc?.en ?? '-';\n        }\n      });\n      return categories;\n    },\n    getTitle(item, language) {\n      return item?.Detail?.[language]?.Title ?? '';\n    },\n    getPoiShortInfo(item) {\n      const shortInfo = [];\n      shortInfo.push(...this.getPoiTypes(item));\n      if (item?.ContactInfos?.[this.language]?.City) {\n        shortInfo.push(\n          this.$t('location') + ': ' + item.ContactInfos?.[this.language].City\n        );\n      }\n      if (item?.ContactInfos?.en?.Phonenumber) {\n        shortInfo.push(\n          this.$t('phone') + ': ' + item.ContactInfos.en.Phonenumber\n        );\n      }\n      if (item?.ContactInfos?.en?.Url) {\n        shortInfo.push(this.$t('web') + ': ' + item.ContactInfos.en.Url);\n      }\n      return shortInfo.filter((info) => info != null).join(', ');\n    },\n    getPoiTypes(item) {\n      const poiType = item.AdditionalPoiInfos[this.language].MainType;\n      const subType = item.AdditionalPoiInfos[this.language].SubType;\n      const categories = [];\n      if (poiType !== null) {\n        categories.push(poiType);\n      }\n      if (subType !== null) {\n        categories.push(subType);\n      }\n      return categories;\n    },\n  },\n};\n</script>\n<style scoped>\n.list-item {\n  display: flex;\n  flex-direction: row;\n  padding: 8px 40px 8px 40px;\n  align-items: center;\n}\n\n.thumbnail {\n  min-height: 60px;\n  min-width: 60px;\n  max-width: 60px;\n  max-height: 60px;\n  background-color: #e8ecf1;\n  object-fit: cover;\n}\n\n.info {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding-left: 24px;\n}\n\nhr.solid {\n  border-top: 1px solid #e8ecf1;\n  margin: 8px 40px 8px 40px;\n}\n\n.title {\n  font-size: 18px;\n  font-weight: bold;\n}\n\n.short-info {\n  font-size: 14px;\n  word-break: break-word;\n  color: #888888;\n}\n\n.page-title {\n  font-weight: bold;\n  font-size: 36px;\n  padding-left: 40px;\n  padding-right: 40px;\n  width: 100%;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.list {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n}\n\n.item-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  cursor: pointer;\n}\n\n.bottom-divider {\n  width: 100%;\n}\n\n.bottom-divider2 {\n  visibility: hidden;\n}\n\n@media (min-width: 768px) {\n  .item-container {\n    width: 50%;\n  }\n\n  .bottom-divider {\n    width: 50%;\n  }\n\n  .bottom-divider2 {\n    visibility: visible;\n  }\n}\n\n.loading-spinner {\n  height: 50vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.noResult {\n  margin-left: 40px;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ItemsList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ItemsList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ItemsList.vue?vue&type=template&id=0223482d&scoped=true&\"\nimport script from \"./ItemsList.vue?vue&type=script&lang=js&\"\nexport * from \"./ItemsList.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./ItemsList.vue?vue&type=style&index=0&id=0223482d&scoped=true&lang=css&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  \"0223482d\",\n  null\n  ,true\n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.isListAvailable)?_c('div',{staticClass:\"back-button\",on:{\"click\":function($event){$event.preventDefault();return _vm.close($event)}}},[_c('img',{attrs:{\"src\":require(\"@/assets/img/arrow_left.svg\")}}),_c('span',{staticStyle:{\"color\":\"#888888\"}},[_vm._v(_vm._s(_vm.$t('back')))])]):_vm._e(),(_vm.item)?_c('div',{staticClass:\"item\"},[_c('div',{staticClass:\"title-container\",style:(_vm.titleImage)},[_c('div',{staticClass:\"title\"},[_c('h1',[_vm._v(_vm._s(_vm.itemDetail.Title))]),(_vm.itemCategories)?_c('div',{staticClass:\"props\"},[_c('div',[(_vm.item.CategoryCodes.length > 1)?_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('categories'))+\":\")]):_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('category'))+\":\")]),_vm._v(\" \"+_vm._s(_vm.itemCategories)+\" \")])]):_vm._e(),(_vm.itemAdditionalPoiInfos)?_c('div',[(_vm.itemAdditionalPoiInfos.MainType)?_c('div',{staticClass:\"props\"},[_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('category'))+\":\")]),_vm._v(_vm._s(_vm.itemAdditionalPoiInfos.MainType)+\" \")]):_vm._e(),(_vm.itemAdditionalPoiInfos.SubType)?_c('div',{staticClass:\"props\"},[_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('subcategory'))+\":\")]),_vm._v(_vm._s(_vm.itemAdditionalPoiInfos.SubType)+\" \")]):_vm._e()]):_vm._e()])]),_c('div',{staticClass:\"detail-box\"},[_c('ul',{staticClass:\"props\"},[(_vm.item.Difficulty)?_c('li',[_c('img',{attrs:{\"src\":require(\"@/assets/img/ic_difficulty.svg\")}}),_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('difficulty'))+\":\")]),_c('span',{staticClass:\"text-dark\"},[_vm._v(_vm._s(_vm.item.Difficulty))])]):_vm._e(),(_vm.item.Altitude)?_c('li',[_c('img',{attrs:{\"src\":require(\"@/assets/img/ic_altitudedifference.svg\")}}),_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('altitude'))+\": \")]),_c('span',{staticClass:\"text-dark\"},[_vm._v(_vm._s(_vm.item.Altitude)+_vm._s(_vm.item.AltitudeUnitofMeasure))])]):_vm._e(),(_vm.item.AltitudeDifference)?_c('li',[_c('img',{attrs:{\"src\":require(\"@/assets/img/ic_altitudedifference.svg\")}}),_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('props.AltitudeDifference'))+\": \")]),_c('span',{staticClass:\"text-dark\"},[_vm._v(_vm._s(_vm.item.AltitudeDifference)+_vm._s(_vm.item.AltitudeUnitofMeasure))])]):_vm._e(),(_vm.item.AltitudeHighestPoint)?_c('li',[_c('img',{attrs:{\"src\":require(\"@/assets/img/ic_altitudehighestpoint.svg\")}}),_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('props.AltitudeHighestPoint'))+\": \")]),_c('span',{staticClass:\"text-dark\"},[_vm._v(_vm._s(_vm.item.AltitudeHighestPoint)+_vm._s(_vm.item.AltitudeUnitofMeasure))])]):_vm._e(),(_vm.item.AltitudeLowestPoint)?_c('li',[_c('img',{attrs:{\"src\":require(\"@/assets/img/ic_altitudelowestpoint.svg\")}}),_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('props.AltitudeLowestPoint'))+\": \")]),_c('span',{staticClass:\"text-dark\"},[_vm._v(_vm._s(_vm.item.AltitudeLowestPoint)+_vm._s(_vm.item.AltitudeUnitofMeasure))])]):_vm._e(),(_vm.item.DistanceDuration)?_c('li',[_c('img',{attrs:{\"src\":require(\"@/assets/img/ic_distanceduration.svg\")}}),_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('props.DistanceDuration'))+\": \")]),_c('span',{staticClass:\"text-dark\"},[_vm._v(_vm._s(_vm.item.DistanceDuration))])]):_vm._e(),(_vm.item.DistanceLength)?_c('li',[_c('img',{attrs:{\"src\":require(\"@/assets/img/ic_distancelength.svg\")}}),_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('props.DistanceLength'))+\": \")]),_c('span',{staticClass:\"text-dark\"},[_vm._v(_vm._s(_vm.item.DistanceLength))])]):_vm._e(),(_vm.googleMapsLink)?_c('li',[_c('img',{attrs:{\"src\":require(\"@/assets/img/ic_map.svg\")}}),_c('a',{attrs:{\"href\":_vm.googleMapsLink,\"target\":\"_blank\"}},[_vm._v(\"Google Maps\")])]):_vm._e(),(_vm.itemContactInfos.City)?_c('li',[_c('img',{attrs:{\"src\":require(\"@/assets/img/ic_map.svg\")}}),_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('location'))+\": \")]),_c('span',{staticClass:\"text-dark\"},[_vm._v(_vm._s(_vm.itemContactInfos.City))])]):_vm._e(),(_vm.itemContactInfos.Url)?_c('li',[_c('img',{attrs:{\"src\":require(\"@/assets/img/ic_external-link.svg\")}}),_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('web'))+\": \")]),_c('a',{attrs:{\"href\":_vm.itemContactInfos.Url,\"target\":\"_blank\"}},[_vm._v(\" \"+_vm._s(_vm.itemContactInfos.Url)+\" \")])]):_vm._e(),(_vm.itemContactInfos.Phonenumber)?_c('li',[_c('img',{attrs:{\"src\":require(\"@/assets/img/ic_phone.svg\")}}),_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t('phone'))+\": \")]),_c('span',{staticClass:\"text-dark\"},[_vm._v(_vm._s(_vm.itemContactInfos.Phonenumber))])]):_vm._e(),(this.contentType === 'Gastronomy')?_c('li',[_c('img',{attrs:{\"src\":require(\"@/assets/img/ic_calendar.svg\")}}),(_vm.isGastronomyItemOpen === true)?_c('span',{staticStyle:{\"color\":\"#9BC320\"}},[_vm._v(_vm._s(_vm.$t(\"scheduleTypes.1\")))]):_vm._e(),(_vm.isGastronomyItemOpen === false)?_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(_vm._s(_vm.$t(\"scheduleTypes.2\")))]):_vm._e()]):(_vm.item.IsOpen != null)?_c('li',[_c('img',{attrs:{\"src\":require(\"@/assets/img/ic_calendar.svg\")}}),_c('span',{style:([\n              _vm.item.IsOpen === true ? { color: '#9BC320' } : { color: 'red' } ])},[_vm._v(_vm._s(_vm.item.IsOpen === true ? _vm.$t('scheduleTypes.1') : _vm.$t('scheduleTypes.2')))])]):_vm._e()])]),(_vm.itemDetail.BaseText)?_c('div',{staticClass:\"text\",domProps:{\"innerHTML\":_vm._s(_vm.itemDetail.BaseText)}}):_vm._e(),(_vm.isGastronomyItemOpen.length)?_c('div',[_c('div',{staticClass:\"subtitle\"},[_vm._v(_vm._s(_vm.$t('operationSchedule')))]),_c('div',_vm._l((_vm.isGastronomyItemOpen),function(schedule,i){return _c('div',{key:i},[(schedule.Type === '1' || schedule.Type === '2')?_c('div',[(schedule.OperationScheduleTime)?_c('ul',_vm._l((schedule.OperationScheduleTime),function(time,j){return _c('div',{key:j,staticClass:\"text\"},[_c('span',{staticClass:\"text-dark\"},[_vm._v(_vm._s(_vm.$t((\"timeCodes.\" + (time.Timecode)))))]),_vm._v(\" von \"+_vm._s(time.Start)+\" bis \"+_vm._s(time.End)+\" (\"+_vm._s(_vm.getItemScheduleDays(time))+\") \")])}),0):_vm._e()]):_vm._e(),(schedule.Type === '3')?_c('div',[_vm._v(\" \"+_vm._s(_vm._f(\"dateFormat\")(schedule.Start))+\" bis \"+_vm._s(_vm._f(\"dateFormat\")(schedule.Stop))+\" \")]):_vm._e()])}),0)]):_vm._e(),(Object.keys(_vm.itemProps).length)?_c('div',{staticClass:\"additional-props-box\"},[_c('ul',{staticClass:\"props\",class:{ single: Object.keys(_vm.itemProps).length === 1 }},_vm._l((_vm.itemProps),function(value,key){return _c('li',{key:key,staticClass:\"text\"},[_c('span',{staticClass:\"prop-key\"},[_vm._v(_vm._s(_vm.$t((\"props.\" + key)))+\":\")]),_vm._v(\" \"+_vm._s(value === true ? _vm.$t('yes') : value)+\" \")])}),0)]):_vm._e(),(_vm.itemCeremonies.length)?_c('div',[_c('div',{staticClass:\"subtitle\"},[_vm._v(_vm._s(_vm.$t('ceremonies')))]),_c('ul',_vm._l((_vm.itemCeremonies),function(value,i){return _c('li',{key:i,staticClass:\"text\"},[_c('span',{staticClass:\"text-dark\"},[_vm._v(_vm._s(value.name))]),_vm._v(\" (max. \"+_vm._s(value.maxSeatingCapacity)+\" Personen) \")])}),0)]):_vm._e(),(_vm.itemDishRates.length)?_c('div',[_c('div',{staticClass:\"subtitle\"},[_vm._v(_vm._s(_vm.$t('dishRates')))]),_c('ul',_vm._l((_vm.itemDishRates),function(value,i){return _c('li',{key:i,staticClass:\"text\"},[_c('span',{staticClass:\"text-dark\"},[_vm._v(_vm._s(value.name))]),_vm._v(\" (von \"+_vm._s(value.minAmount)+\" bis \"+_vm._s(value.maxAmount)+\" \"+_vm._s(value.currencyCode)+\") \")])}),0)]):_vm._e(),_vm._l((_vm.itemGastronomyTypes),function(type){return _c('div',{key:type.type},[_c('div',{staticStyle:{\"text-align\":\"center\",\"color\":\"#949494\"}},[_vm._v(_vm._s(type.name))]),_c('div',{staticClass:\"gastronomyTypes\"},_vm._l((type.values),function(value,i){return _c('div',{key:i,staticClass:\"category\"},[_vm._v(\" \"+_vm._s(value)+\" \")])}),0)])}),(_vm.imageGallery)?_c('div',_vm._l((_vm.imageGallery),function(image,i){return _c('img',{key:i,staticClass:\"image\",attrs:{\"src\":image.ImageUrl,\"height\":\"200\",\"width\":\"200\"},on:{\"click\":function($event){return _vm.openImageDetail(image)}}})}),0):_vm._e(),_c('small',{staticClass:\"text\"},[_vm._v(\" \"+_vm._s(_vm.$t('lastChange'))+\": \"+_vm._s(_vm._f(\"dateFormat\")(_vm.item.LastChange))+\" \")])],2):_vm._e(),(_vm.showImage)?_c('image-detail',{attrs:{\"imgUrl\":_vm.imageUrl,\"hasMultipleImgs\":_vm.hasMultipleImgs},on:{\"close\":_vm.closeImageDetail,\"next-image\":_vm.nextImage,\"last-image\":_vm.lastImage}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal\"},[_c('span',{staticClass:\"close\",on:{\"click\":_vm.closeImage}},[_vm._v(\"×\")]),_c('div',{staticClass:\"modal-content\",staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"space-between\"},style:(_vm.imageStyle)},[(_vm.hasMultipleImgs)?_c('div',{staticClass:\"img-button\",on:{\"click\":_vm.lastImage}},[_c('img',{attrs:{\"src\":require(\"@/assets/img/arrow_left.svg\"),\"width\":\"50\",\"height\":\"50\"}})]):_vm._e(),(_vm.hasMultipleImgs)?_c('div',{staticClass:\"img-button\",on:{\"click\":_vm.nextImage}},[_c('img',{attrs:{\"src\":require(\"@/assets/img/arrow_right.svg\"),\"width\":\"50\",\"height\":\"50\"}})]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"modal\">\n    <span class=\"close\" @click=\"closeImage\">&times;</span>\n\n    <div\n      class=\"modal-content\"\n      style=\"display: flex; align-items: center; justify-content: space-between;\"\n      :style=\"imageStyle\"\n    >\n      <div class=\"img-button\" @click=\"lastImage\" v-if=\"hasMultipleImgs\">\n        <img src=\"@/assets/img/arrow_left.svg\" width=\"50\" height=\"50\" />\n      </div>\n      <div class=\"img-button\" @click=\"nextImage\" v-if=\"hasMultipleImgs\">\n        <img src=\"@/assets/img/arrow_right.svg\" width=\"50\" height=\"50\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ImageDetail',\n  props: {\n    imgUrl: {\n      type: String,\n    },\n    hasMultipleImgs: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  computed: {\n    imageStyle() {\n      return {\n        backgroundImage: 'url(' + this.imgUrl + ') ',\n        backgroundSize: 'contain',\n        backgroundPosition: 'center',\n        minHeight: '100px',\n        backgroundRepeat: 'no-repeat',\n      };\n    },\n  },\n  methods: {\n    closeImage() {\n      this.$emit('close');\n    },\n    nextImage() {\n      this.$emit('next-image');\n    },\n    lastImage() {\n      this.$emit('last-image');\n    },\n  },\n};\n</script>\n\n<style scoped>\n.modal {\n  display: flex;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgb(0, 0, 0);\n  background-color: rgba(0, 0, 0, 0.9);\n}\n\n.modal-content {\n  margin: auto;\n  display: block;\n  width: 80%;\n  max-width: 1200px;\n  height: 100%;\n}\n\n.img-content {\n  max-width: 80%;\n}\n\n.modal-content {\n  -webkit-animation-name: zoom;\n  -webkit-animation-duration: 0.6s;\n  animation-name: zoom;\n  animation-duration: 0.6s;\n}\n\n@-webkit-keyframes zoom {\n  from {\n    -webkit-transform: scale(0);\n  }\n  to {\n    -webkit-transform: scale(1);\n  }\n}\n\n@keyframes zoom {\n  from {\n    transform: scale(0);\n  }\n  to {\n    transform: scale(1);\n  }\n}\n\n.close {\n  position: absolute;\n  top: 15px;\n  right: 35px;\n  color: #f1f1f1;\n  font-size: 40px;\n  font-weight: bold;\n  transition: 0.3s;\n}\n\n.close:hover,\n.close:focus {\n  color: #bbb;\n  text-decoration: none;\n  cursor: pointer;\n}\n\n/* 100% Image Width on Smaller Screens */\n@media only screen and (max-width: 700px) {\n  .modal-content {\n    width: 100%;\n  }\n  .img-content {\n    max-width: 100%;\n  }\n}\n\n.img-button {\n  width: 50px;\n  text-align: center;\n  background-color: rgba(0, 0, 0, 0.3);\n  height: 50px;\n  border-radius: 25px;\n  margin: 8px;\n}\n\n.img-button:hover {\n  background-color: rgba(0, 0, 0, 0.7);\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageDetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageDetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ImageDetail.vue?vue&type=template&id=530dccbf&scoped=true&\"\nimport script from \"./ImageDetail.vue?vue&type=script&lang=js&\"\nexport * from \"./ImageDetail.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./ImageDetail.vue?vue&type=style&index=0&id=530dccbf&scoped=true&lang=css&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  \"530dccbf\",\n  null\n  ,true\n)\n\nexport default component.exports","<template>\n  <div>\n    <div class=\"back-button\" @click.prevent=\"close\" v-if=\"isListAvailable\">\n      <img src=\"@/assets/img/arrow_left.svg\" />\n      <span style=\"color: #888888\">{{ $t('back') }}</span>\n    </div>\n    <div v-if=\"item\" class=\"item\">\n      <div class=\"title-container\" :style=\"titleImage\">\n        <div class=\"title\">\n          <h1>{{ itemDetail.Title }}</h1>\n          <!-- Gastronomy -->\n          <div v-if=\"itemCategories\" class=\"props\">\n            <div>\n              <span class=\"prop-key\" v-if=\"item.CategoryCodes.length > 1\"\n                >{{ $t('categories') }}:</span\n              >\n              <span class=\"prop-key\" v-else>{{ $t('category') }}:</span>\n              {{ itemCategories }}\n            </div>\n          </div>\n          <!-- POI / Activity -->\n          <div v-if=\"itemAdditionalPoiInfos\">\n            <div v-if=\"itemAdditionalPoiInfos.MainType\" class=\"props\">\n              <span class=\"prop-key\">{{ $t('category') }}:</span\n              >{{ itemAdditionalPoiInfos.MainType }}\n            </div>\n            <div v-if=\"itemAdditionalPoiInfos.SubType\" class=\"props\">\n              <span class=\"prop-key\">{{ $t('subcategory') }}:</span\n              >{{ itemAdditionalPoiInfos.SubType }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"detail-box\">\n        <ul class=\"props\">\n          <li v-if=\"item.Difficulty\">\n            <img src=\"@/assets/img/ic_difficulty.svg\" />\n            <span class=\"prop-key\">{{ $t('difficulty') }}:</span>\n            <span class=\"text-dark\">{{ item.Difficulty }}</span>\n          </li>\n          <li v-if=\"item.Altitude\">\n            <img src=\"@/assets/img/ic_altitudedifference.svg\" />\n            <span class=\"prop-key\">{{ $t('altitude') }}: </span>\n            <span class=\"text-dark\"\n              >{{ item.Altitude }}{{ item.AltitudeUnitofMeasure }}</span\n            >\n          </li>\n          <li v-if=\"item.AltitudeDifference\">\n            <img src=\"@/assets/img/ic_altitudedifference.svg\" />\n            <span class=\"prop-key\">{{ $t('props.AltitudeDifference') }}: </span>\n            <span class=\"text-dark\"\n              >{{ item.AltitudeDifference\n              }}{{ item.AltitudeUnitofMeasure }}</span\n            >\n          </li>\n          <li v-if=\"item.AltitudeHighestPoint\">\n            <img src=\"@/assets/img/ic_altitudehighestpoint.svg\" />\n            <span class=\"prop-key\"\n              >{{ $t('props.AltitudeHighestPoint') }}:\n            </span>\n            <span class=\"text-dark\"\n              >{{ item.AltitudeHighestPoint\n              }}{{ item.AltitudeUnitofMeasure }}</span\n            >\n          </li>\n          <li v-if=\"item.AltitudeLowestPoint\">\n            <img src=\"@/assets/img/ic_altitudelowestpoint.svg\" />\n            <span class=\"prop-key\"\n              >{{ $t('props.AltitudeLowestPoint') }}:\n            </span>\n            <span class=\"text-dark\"\n              >{{ item.AltitudeLowestPoint\n              }}{{ item.AltitudeUnitofMeasure }}</span\n            >\n          </li>\n          <li v-if=\"item.DistanceDuration\">\n            <img src=\"@/assets/img/ic_distanceduration.svg\" />\n            <span class=\"prop-key\">{{ $t('props.DistanceDuration') }}: </span>\n            <span class=\"text-dark\">{{ item.DistanceDuration }}</span>\n          </li>\n          <li v-if=\"item.DistanceLength\">\n            <img src=\"@/assets/img/ic_distancelength.svg\" />\n            <span class=\"prop-key\">{{ $t('props.DistanceLength') }}: </span>\n            <span class=\"text-dark\">{{ item.DistanceLength }}</span>\n          </li>\n          <li v-if=\"googleMapsLink\">\n            <img src=\"@/assets/img/ic_map.svg\" />\n            <a :href=\"googleMapsLink\" target=\"_blank\">Google Maps</a>\n          </li>\n          <li v-if=\"itemContactInfos.City\">\n            <img src=\"@/assets/img/ic_map.svg\" />\n            <span class=\"prop-key\">{{ $t('location') }}: </span>\n            <span class=\"text-dark\">{{ itemContactInfos.City }}</span>\n          </li>\n          <li v-if=\"itemContactInfos.Url\">\n            <img src=\"@/assets/img/ic_external-link.svg\" />\n            <span class=\"prop-key\">{{ $t('web') }}: </span>\n            <a :href=\"itemContactInfos.Url\" target=\"_blank\">\n              {{ itemContactInfos.Url }}\n            </a>\n          </li>\n          <li v-if=\"itemContactInfos.Phonenumber\">\n            <img src=\"@/assets/img/ic_phone.svg\" />\n            <span class=\"prop-key\">{{ $t('phone') }}: </span>\n            <span class=\"text-dark\">{{ itemContactInfos.Phonenumber }}</span>\n          </li>\n          <li v-if=\"this.contentType === 'Gastronomy'\">\n            <img src=\"@/assets/img/ic_calendar.svg\" />\n            <span v-if=\"isGastronomyItemOpen === true\" style=\"color: #9BC320\">{{\n              $t(`scheduleTypes.1`)\n            }}</span>\n            <span v-if=\"isGastronomyItemOpen === false\" style=\"color: red\">{{\n              $t(`scheduleTypes.2`)\n            }}</span>\n          </li>\n          <li v-else-if=\"item.IsOpen != null\">\n            <img src=\"@/assets/img/ic_calendar.svg\" />\n            <span\n              :style=\"[\n                item.IsOpen === true ? { color: '#9BC320' } : { color: 'red' },\n              ]\"\n              >{{\n                item.IsOpen === true\n                  ? $t('scheduleTypes.1')\n                  : $t('scheduleTypes.2')\n              }}</span\n            >\n          </li>\n        </ul>\n      </div>\n\n      <div\n        v-if=\"itemDetail.BaseText\"\n        v-html=\"itemDetail.BaseText\"\n        class=\"text\"\n      ></div>\n\n      <!-- COMMON -->\n      <div v-if=\"isGastronomyItemOpen.length\">\n        <div class=\"subtitle\">{{ $t('operationSchedule') }}</div>\n        <div>\n          <div v-for=\"(schedule, i) of isGastronomyItemOpen\" :key=\"i\">\n            <!-- Opened || Closed -->\n            <div v-if=\"schedule.Type === '1' || schedule.Type === '2'\">\n              <ul v-if=\"schedule.OperationScheduleTime\">\n                <div\n                  v-for=\"(time, j) of schedule.OperationScheduleTime\"\n                  :key=\"j\"\n                  class=\"text\"\n                >\n                  <span class=\"text-dark\">{{\n                    $t(`timeCodes.${time.Timecode}`)\n                  }}</span>\n                  von {{ time.Start }} bis\n                  {{ time.End }}\n                  ({{ getItemScheduleDays(time) }})\n                </div>\n              </ul>\n            </div>\n            <!-- Season -->\n            <div v-if=\"schedule.Type === '3'\">\n              {{ schedule.Start | dateFormat }} bis\n              {{ schedule.Stop | dateFormat }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"Object.keys(itemProps).length\" class=\"additional-props-box\">\n        <ul\n          class=\"props\"\n          :class=\"{ single: Object.keys(itemProps).length === 1 }\"\n        >\n          <li v-for=\"(value, key) of itemProps\" :key=\"key\" class=\"text\">\n            <span class=\"prop-key\">{{ $t(`props.${key}`) }}:</span>\n            {{ value === true ? $t('yes') : value }}\n          </li>\n        </ul>\n      </div>\n\n      <div v-if=\"itemCeremonies.length\">\n        <div class=\"subtitle\">{{ $t('ceremonies') }}</div>\n        <ul>\n          <li v-for=\"(value, i) of itemCeremonies\" :key=\"i\" class=\"text\">\n            <span class=\"text-dark\">{{ value.name }}</span> (max.\n            {{ value.maxSeatingCapacity }} Personen)\n          </li>\n        </ul>\n      </div>\n\n      <div v-if=\"itemDishRates.length\">\n        <div class=\"subtitle\">{{ $t('dishRates') }}</div>\n        <ul>\n          <li v-for=\"(value, i) of itemDishRates\" :key=\"i\" class=\"text\">\n            <span class=\"text-dark\">{{ value.name }}</span> (von\n            {{ value.minAmount }} bis {{ value.maxAmount }}\n            {{ value.currencyCode }})\n          </li>\n        </ul>\n      </div>\n\n      <div v-for=\"type of itemGastronomyTypes\" :key=\"type.type\">\n        <div style=\"text-align: center; color: #949494\">{{ type.name }}</div>\n        <div class=\"gastronomyTypes\">\n          <div v-for=\"(value, i) of type.values\" :key=\"i\" class=\"category\">\n            {{ value }}\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"imageGallery\">\n        <img\n          v-for=\"(image, i) of imageGallery\"\n          :key=\"i\"\n          :src=\"image.ImageUrl\"\n          height=\"200\"\n          width=\"200\"\n          class=\"image\"\n          @click=\"openImageDetail(image)\"\n        />\n      </div>\n\n      <small class=\"text\">\n        {{ $t('lastChange') }}: {{ item.LastChange | dateFormat }}\n      </small>\n    </div>\n    <image-detail\n      :imgUrl=\"imageUrl\"\n      v-if=\"showImage\"\n      :hasMultipleImgs=\"hasMultipleImgs\"\n      @close=\"closeImageDetail\"\n      @next-image=\"nextImage\"\n      @last-image=\"lastImage\"\n    ></image-detail>\n  </div>\n</template>\n\n<script>\nimport { GastronomyApi, PoiApi, ActivityApi } from '@/api';\nimport ImageDetail from '@/components/ImageDetail';\n\nconst GASTRONOMY_TYPES = [\n  'DishCodes',\n  'CuisineCodes',\n  'FacilityCodes_CreditCard',\n  'FacilityCodes_Equipment',\n  'FacilityCodes_QualitySeals',\n];\n\nconst SCHEDULE_DAYS = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thuresday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n];\n\nexport default {\n  components: { ImageDetail },\n  props: {\n    contentId: {\n      type: String,\n      required: true,\n    },\n    contentType: {\n      type: String,\n      required: true,\n    },\n    isListAvailable: {\n      type: Boolean,\n      default: false,\n    },\n    language: {\n      type: String,\n      default: 'de',\n    },\n  },\n  data() {\n    return {\n      item: null,\n      gastronomyTypes: [],\n      showImage: false,\n      imageUrl: null,\n      selectedImage: null,\n    };\n  },\n  computed: {\n    titleImage() {\n      const image = this.item?.ImageGallery[0];\n      if (image == null) {\n        return {};\n      } else {\n        return {\n          backgroundImage: 'url(' + image.ImageUrl + ') ',\n          height: '400px',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n        };\n      }\n    },\n    imageGallery() {\n      return this.item?.ImageGallery || [];\n    },\n    hasMultipleImgs() {\n      return this.imageGallery.length > 1;\n    },\n    itemDetail() {\n      return this.item?.Detail?.[this.language] || {};\n    },\n    itemContactInfos() {\n      return this.item?.ContactInfos?.[this.language] || {};\n    },\n    googleMapsLink() {\n      return this.item?.Latitude && this.item?.Longitude\n        ? `https://www.google.com/maps/search/?api=1&query=${this.item.Latitude},${this.item.Longitude}`\n        : null;\n    },\n    itemAdditionalPoiInfos() {\n      const infos = this.item?.AdditionalPoiInfos?.[this.language] || {};\n      return infos.MainType || infos.SubType ? infos : null;\n    },\n    itemProps() {\n      if (!this.item) {\n        return {};\n      }\n\n      const showProps = [\n        'AltitudeSumUp',\n        'AltitudeSumDown',\n        'HasFreeEntrance',\n        'BikeTransport',\n        'LiftAvailable',\n        'RunToValley',\n        'IsWithLight',\n        'HasRentals',\n        'IsPrepared',\n        'FeetClimb',\n      ];\n\n      const props = {};\n      for (const key of showProps) {\n        if (!!this.item[key] && this.item[key] !== '0.0') {\n          props[key] = this.item[key];\n        }\n      }\n\n      return props;\n    },\n    itemCategories() {\n      return (\n        this.item?.CategoryCodes?.map(\n          (c) =>\n            this.gastronomyTypes.find((t) => t.Id === c.Id)?.TypeDesc[\n              this.language\n            ]\n        ).join(', ') || ''\n      );\n    },\n    itemCeremonies() {\n      return (\n        this.item?.CapacityCeremony?.map((c) => ({\n          name: this.gastronomyTypes.find((t) => t.Id === c.Id)?.TypeDesc[\n            this.language\n          ],\n          maxSeatingCapacity: c.MaxSeatingCapacity,\n        })) || []\n      );\n    },\n    itemDishRates() {\n      return (\n        this.item?.DishRates?.map((c) => ({\n          name: this.gastronomyTypes.find((t) => t.Id === c.Id)?.TypeDesc[\n            this.language\n          ],\n          maxAmount: c.MaxAmount,\n          minAmount: c.MinAmount,\n          currencyCode: c.CurrencyCode,\n        })) || []\n      );\n    },\n    itemGastronomyTypes() {\n      const filteredArray = this.gastronomyTypes.filter((t) =>\n        this.item.Facilities.find((f) => t.Id === f.Id)\n      );\n      return GASTRONOMY_TYPES.map((type) => ({\n        name: this.$t(`gastronomyTypes.${type}`),\n        values: filteredArray\n          .filter((t) => t.Type === type)\n          .map((t) => t.TypeDesc[this.language]),\n      })).filter((t) => t.values.length);\n    },\n    isGastronomyItemOpen() {\n      const schedules = this.item.OperationSchedule.filter((s) => {\n        const start = new Date(s.Start);\n        const stop = new Date(s.Stop);\n        const now = new Date();\n        return (\n          (((s.Type === '1' || s.Type === '2') && s.OperationScheduleTime) ||\n            s.Type === '3') &&\n          now.getTime() <= stop.getTime() &&\n          now.getTime() >= start.getTime()\n        );\n      });\n      const schedule =\n        schedules !== null && schedules.length > 0 ? schedules[0] : null;\n      let open = false;\n      if (schedule !== null) {\n        for (const time of schedule.OperationScheduleTime) {\n          if (time.State === 1) {\n            open = true;\n          }\n        }\n      }\n      return open;\n    },\n    getItemScheduleDays() {\n      return (scheduleTime) =>\n        SCHEDULE_DAYS.map((day) =>\n          scheduleTime[day] ? this.$t(`scheduleDays.${day}`) : null\n        )\n          .filter((day) => day != null)\n          .join(', ');\n    },\n  },\n  created() {\n    if (this.contentType === 'Gastronomy') {\n      this.loadGastronomyItem();\n      this.loadGastronomyTypeList();\n    } else if (this.contentType === 'POI') {\n      this.loadPoiItem();\n    } else if (this.contentType === 'Activity') {\n      this.loadActivityItem();\n    }\n  },\n  filters: {\n    dateFormat(dateString) {\n      return new Date(dateString).toLocaleDateString();\n    },\n  },\n  methods: {\n    loadGastronomyItem() {\n      new GastronomyApi()\n        .gastronomyGetGastronomySingle(this.contentId)\n        .then((value) => {\n          this.item = value.data;\n        });\n    },\n    loadGastronomyTypeList() {\n      new GastronomyApi()\n        .gastronomyGetAllGastronomyTypesList()\n        .then((value) => {\n          this.gastronomyTypes = value.data;\n        });\n    },\n    loadPoiItem() {\n      new PoiApi().poiGetPoiSingle(this.contentId).then((value) => {\n        this.item = value.data;\n      });\n    },\n    loadActivityItem() {\n      new ActivityApi()\n        .activityGetActivitySingle(this.contentId)\n        .then((value) => {\n          this.item = value.data;\n        });\n    },\n    close() {\n      this.$emit('close');\n    },\n    openImageDetail(image) {\n      this.imageUrl = image.ImageUrl;\n      this.selectedImage = image;\n      this.showImage = true;\n    },\n    closeImageDetail() {\n      this.showImage = false;\n    },\n    nextImage() {\n      const currentIndex = this.imageGallery.indexOf(this.selectedImage);\n      if (currentIndex + 1 < this.imageGallery.length) {\n        this.selectedImage = this.imageGallery[currentIndex + 1];\n        this.imageUrl = this.selectedImage.ImageUrl;\n      } else {\n        this.selectedImage = this.imageGallery[0];\n        this.imageUrl = this.selectedImage.ImageUrl;\n      }\n    },\n    lastImage() {\n      const currentIndex = this.imageGallery.indexOf(this.selectedImage);\n      if (currentIndex - 1 >= 0) {\n        this.selectedImage = this.imageGallery[currentIndex - 1];\n        this.imageUrl = this.selectedImage.ImageUrl;\n      } else {\n        this.selectedImage = this.imageGallery[this.imageGallery.length - 1];\n        this.imageUrl = this.selectedImage.ImageUrl;\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.item > div {\n  margin-bottom: 1rem;\n}\n.title {\n  background-color: #e8ecf1;\n  padding: 2rem;\n  opacity: 0.8;\n  max-width: 100%;\n  max-height: 400px;\n}\n\nh2 {\n  margin-bottom: 2px;\n}\n.detail-box {\n  border: 1px solid #e8ecf1;\n  padding: 2rem;\n}\n.additional-props-box {\n  padding: 2rem;\n  background-color: #e8ecf1;\n}\n.props {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  font-style: italic;\n\n  &:not(.single) {\n    columns: 1;\n  }\n\n  @media (min-width: 768px) {\n    &:not(.single) {\n      columns: 2;\n    }\n  }\n\n  @media (min-width: 992px) {\n    &:not(.single) {\n      columns: 3;\n    }\n  }\n\n  > li {\n    padding: 0.2rem 0;\n  }\n\n  img {\n    height: 16px;\n    width: 16px;\n    margin-right: 0.7em;\n  }\n\n  a {\n    color: #2980b9;\n    text-decoration: none;\n  }\n\n  .prop-key {\n    color: #888888;\n    padding-right: 4px;\n  }\n}\n\n.subtitle {\n  color: #212529;\n  font-size: 18px;\n  font-weight: bold;\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.subtype {\n  padding-top: 4px;\n  padding-bottom: 8px;\n}\n\n.categories {\n  padding-bottom: 8px;\n}\n\n.gastronomyTypes {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.category {\n  padding: 4px 12px 4px 12px;\n  margin-right: 8px;\n  margin-top: 8px;\n  height: 30px;\n  border: 1px solid #e8ecf1;\n  border-radius: 30px;\n  opacity: 1;\n  text-align: center;\n  align-items: center;\n  display: flex;\n  color: #cfcfcf;\n}\n\nul {\n  padding-inline-start: 0px;\n  margin: 0;\n}\n\n.text {\n  color: #949494;\n}\n\n.text-dark {\n  color: #2e3131;\n}\n\n.image {\n  padding-right: 8px;\n  padding-top: 8px;\n  object-fit: cover;\n}\n\n.title-image {\n  max-height: 400px;\n  object-fit: cover;\n  width: 100%;\n}\n\n.title-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  margin-bottom: 0 !important;\n  overflow: hidden;\n}\n\n.info-item {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.back-button {\n  display: flex;\n  align-items: center;\n  padding-bottom: 4px;\n  cursor: pointer;\n}\n\nh1 {\n  font-size: 36px;\n  overflow-wrap: break-word;\n  hyphens: auto;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ItemDetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ItemDetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ItemDetail.vue?vue&type=template&id=4728067b&scoped=true&\"\nimport script from \"./ItemDetail.vue?vue&type=script&lang=js&\"\nexport * from \"./ItemDetail.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./ItemDetail.vue?vue&type=style&index=0&id=4728067b&lang=scss&scoped=true&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  \"4728067b\",\n  null\n  ,true\n)\n\nexport default component.exports","/*!\n * vue-i18n v8.22.2 \n * (c) 2020 kazuya kawaguchi\n * Released under the MIT License.\n */\n/*  */\n\n/**\n * constants\n */\n\nvar numberFormatKeys = [\n  'compactDisplay',\n  'currency',\n  'currencyDisplay',\n  'currencySign',\n  'localeMatcher',\n  'notation',\n  'numberingSystem',\n  'signDisplay',\n  'style',\n  'unit',\n  'unitDisplay',\n  'useGrouping',\n  'minimumIntegerDigits',\n  'minimumFractionDigits',\n  'maximumFractionDigits',\n  'minimumSignificantDigits',\n  'maximumSignificantDigits'\n];\n\n/**\n * utilities\n */\n\nfunction warn (msg, err) {\n  if (typeof console !== 'undefined') {\n    console.warn('[vue-i18n] ' + msg);\n    /* istanbul ignore if */\n    if (err) {\n      console.warn(err.stack);\n    }\n  }\n}\n\nfunction error (msg, err) {\n  if (typeof console !== 'undefined') {\n    console.error('[vue-i18n] ' + msg);\n    /* istanbul ignore if */\n    if (err) {\n      console.error(err.stack);\n    }\n  }\n}\n\nvar isArray = Array.isArray;\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isBoolean (val) {\n  return typeof val === 'boolean'\n}\n\nfunction isString (val) {\n  return typeof val === 'string'\n}\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\nfunction isNull (val) {\n  return val === null || val === undefined\n}\n\nfunction isFunction (val) {\n  return typeof val === 'function'\n}\n\nfunction parseArgs () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  var locale = null;\n  var params = null;\n  if (args.length === 1) {\n    if (isObject(args[0]) || isArray(args[0])) {\n      params = args[0];\n    } else if (typeof args[0] === 'string') {\n      locale = args[0];\n    }\n  } else if (args.length === 2) {\n    if (typeof args[0] === 'string') {\n      locale = args[0];\n    }\n    /* istanbul ignore if */\n    if (isObject(args[1]) || isArray(args[1])) {\n      params = args[1];\n    }\n  }\n\n  return { locale: locale, params: params }\n}\n\nfunction looseClone (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\nfunction includes (arr, item) {\n  return !!~arr.indexOf(item)\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\nfunction merge (target) {\n  var arguments$1 = arguments;\n\n  var output = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      var key = (void 0);\n      for (key in source) {\n        if (hasOwn(source, key)) {\n          if (isObject(source[key])) {\n            output[key] = merge(output[key], source[key]);\n          } else {\n            output[key] = source[key];\n          }\n        }\n      }\n    }\n  }\n  return output\n}\n\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = isArray(a);\n      var isArrayB = isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Sanitizes html special characters from input strings. For mitigating risk of XSS attacks.\n * @param rawText The raw input from the user that should be escaped.\n */\nfunction escapeHtml(rawText) {\n  return rawText\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;')\n}\n\n/**\n * Escapes html tags and special symbols from all provided params which were returned from parseArgs().params.\n * This method performs an in-place operation on the params object.\n *\n * @param {any} params Parameters as provided from `parseArgs().params`.\n *                     May be either an array of strings or a string->any map.\n *\n * @returns The manipulated `params` object.\n */\nfunction escapeParams(params) {\n  if(params != null) {\n    Object.keys(params).forEach(function (key) {\n      if(typeof(params[key]) == 'string') {\n        params[key] = escapeHtml(params[key]);\n      }\n    });\n  }\n  return params\n}\n\n/*  */\n\nfunction extend (Vue) {\n  if (!Vue.prototype.hasOwnProperty('$i18n')) {\n    // $FlowFixMe\n    Object.defineProperty(Vue.prototype, '$i18n', {\n      get: function get () { return this._i18n }\n    });\n  }\n\n  Vue.prototype.$t = function (key) {\n    var values = [], len = arguments.length - 1;\n    while ( len-- > 0 ) values[ len ] = arguments[ len + 1 ];\n\n    var i18n = this.$i18n;\n    return i18n._t.apply(i18n, [ key, i18n.locale, i18n._getMessages(), this ].concat( values ))\n  };\n\n  Vue.prototype.$tc = function (key, choice) {\n    var values = [], len = arguments.length - 2;\n    while ( len-- > 0 ) values[ len ] = arguments[ len + 2 ];\n\n    var i18n = this.$i18n;\n    return i18n._tc.apply(i18n, [ key, i18n.locale, i18n._getMessages(), this, choice ].concat( values ))\n  };\n\n  Vue.prototype.$te = function (key, locale) {\n    var i18n = this.$i18n;\n    return i18n._te(key, i18n.locale, i18n._getMessages(), locale)\n  };\n\n  Vue.prototype.$d = function (value) {\n    var ref;\n\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n    return (ref = this.$i18n).d.apply(ref, [ value ].concat( args ))\n  };\n\n  Vue.prototype.$n = function (value) {\n    var ref;\n\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n    return (ref = this.$i18n).n.apply(ref, [ value ].concat( args ))\n  };\n}\n\n/*  */\n\nvar mixin = {\n  beforeCreate: function beforeCreate () {\n    var options = this.$options;\n    options.i18n = options.i18n || (options.__i18n ? {} : null);\n\n    if (options.i18n) {\n      if (options.i18n instanceof VueI18n) {\n        // init locale messages via custom blocks\n        if (options.__i18n) {\n          try {\n            var localeMessages = options.i18n && options.i18n.messages ? options.i18n.messages : {};\n            options.__i18n.forEach(function (resource) {\n              localeMessages = merge(localeMessages, JSON.parse(resource));\n            });\n            Object.keys(localeMessages).forEach(function (locale) {\n              options.i18n.mergeLocaleMessage(locale, localeMessages[locale]);\n            });\n          } catch (e) {\n            if (process.env.NODE_ENV !== 'production') {\n              error(\"Cannot parse locale messages via custom blocks.\", e);\n            }\n          }\n        }\n        this._i18n = options.i18n;\n        this._i18nWatcher = this._i18n.watchI18nData();\n      } else if (isPlainObject(options.i18n)) {\n        var rootI18n = this.$root && this.$root.$i18n && this.$root.$i18n instanceof VueI18n\n          ? this.$root.$i18n\n          : null;\n        // component local i18n\n        if (rootI18n) {\n          options.i18n.root = this.$root;\n          options.i18n.formatter = rootI18n.formatter;\n          options.i18n.fallbackLocale = rootI18n.fallbackLocale;\n          options.i18n.formatFallbackMessages = rootI18n.formatFallbackMessages;\n          options.i18n.silentTranslationWarn = rootI18n.silentTranslationWarn;\n          options.i18n.silentFallbackWarn = rootI18n.silentFallbackWarn;\n          options.i18n.pluralizationRules = rootI18n.pluralizationRules;\n          options.i18n.preserveDirectiveContent = rootI18n.preserveDirectiveContent;\n        }\n\n        // init locale messages via custom blocks\n        if (options.__i18n) {\n          try {\n            var localeMessages$1 = options.i18n && options.i18n.messages ? options.i18n.messages : {};\n            options.__i18n.forEach(function (resource) {\n              localeMessages$1 = merge(localeMessages$1, JSON.parse(resource));\n            });\n            options.i18n.messages = localeMessages$1;\n          } catch (e) {\n            if (process.env.NODE_ENV !== 'production') {\n              warn(\"Cannot parse locale messages via custom blocks.\", e);\n            }\n          }\n        }\n\n        var ref = options.i18n;\n        var sharedMessages = ref.sharedMessages;\n        if (sharedMessages && isPlainObject(sharedMessages)) {\n          options.i18n.messages = merge(options.i18n.messages, sharedMessages);\n        }\n\n        this._i18n = new VueI18n(options.i18n);\n        this._i18nWatcher = this._i18n.watchI18nData();\n\n        if (options.i18n.sync === undefined || !!options.i18n.sync) {\n          this._localeWatcher = this.$i18n.watchLocale();\n        }\n\n        if (rootI18n) {\n          rootI18n.onComponentInstanceCreated(this._i18n);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn(\"Cannot be interpreted 'i18n' option.\");\n        }\n      }\n    } else if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof VueI18n) {\n      // root i18n\n      this._i18n = this.$root.$i18n;\n    } else if (options.parent && options.parent.$i18n && options.parent.$i18n instanceof VueI18n) {\n      // parent i18n\n      this._i18n = options.parent.$i18n;\n    }\n  },\n\n  beforeMount: function beforeMount () {\n    var options = this.$options;\n    options.i18n = options.i18n || (options.__i18n ? {} : null);\n\n    if (options.i18n) {\n      if (options.i18n instanceof VueI18n) {\n        // init locale messages via custom blocks\n        this._i18n.subscribeDataChanging(this);\n        this._subscribing = true;\n      } else if (isPlainObject(options.i18n)) {\n        this._i18n.subscribeDataChanging(this);\n        this._subscribing = true;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn(\"Cannot be interpreted 'i18n' option.\");\n        }\n      }\n    } else if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof VueI18n) {\n      this._i18n.subscribeDataChanging(this);\n      this._subscribing = true;\n    } else if (options.parent && options.parent.$i18n && options.parent.$i18n instanceof VueI18n) {\n      this._i18n.subscribeDataChanging(this);\n      this._subscribing = true;\n    }\n  },\n\n  beforeDestroy: function beforeDestroy () {\n    if (!this._i18n) { return }\n\n    var self = this;\n    this.$nextTick(function () {\n      if (self._subscribing) {\n        self._i18n.unsubscribeDataChanging(self);\n        delete self._subscribing;\n      }\n\n      if (self._i18nWatcher) {\n        self._i18nWatcher();\n        self._i18n.destroyVM();\n        delete self._i18nWatcher;\n      }\n\n      if (self._localeWatcher) {\n        self._localeWatcher();\n        delete self._localeWatcher;\n      }\n    });\n  }\n};\n\n/*  */\n\nvar interpolationComponent = {\n  name: 'i18n',\n  functional: true,\n  props: {\n    tag: {\n      type: [String, Boolean, Object],\n      default: 'span'\n    },\n    path: {\n      type: String,\n      required: true\n    },\n    locale: {\n      type: String\n    },\n    places: {\n      type: [Array, Object]\n    }\n  },\n  render: function render (h, ref) {\n    var data = ref.data;\n    var parent = ref.parent;\n    var props = ref.props;\n    var slots = ref.slots;\n\n    var $i18n = parent.$i18n;\n    if (!$i18n) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('Cannot find VueI18n instance!');\n      }\n      return\n    }\n\n    var path = props.path;\n    var locale = props.locale;\n    var places = props.places;\n    var params = slots();\n    var children = $i18n.i(\n      path,\n      locale,\n      onlyHasDefaultPlace(params) || places\n        ? useLegacyPlaces(params.default, places)\n        : params\n    );\n\n    var tag = (!!props.tag && props.tag !== true) || props.tag === false ? props.tag : 'span';\n    return tag ? h(tag, data, children) : children\n  }\n};\n\nfunction onlyHasDefaultPlace (params) {\n  var prop;\n  for (prop in params) {\n    if (prop !== 'default') { return false }\n  }\n  return Boolean(prop)\n}\n\nfunction useLegacyPlaces (children, places) {\n  var params = places ? createParamsFromPlaces(places) : {};\n\n  if (!children) { return params }\n\n  // Filter empty text nodes\n  children = children.filter(function (child) {\n    return child.tag || child.text.trim() !== ''\n  });\n\n  var everyPlace = children.every(vnodeHasPlaceAttribute);\n  if (process.env.NODE_ENV !== 'production' && everyPlace) {\n    warn('`place` attribute is deprecated in next major version. Please switch to Vue slots.');\n  }\n\n  return children.reduce(\n    everyPlace ? assignChildPlace : assignChildIndex,\n    params\n  )\n}\n\nfunction createParamsFromPlaces (places) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn('`places` prop is deprecated in next major version. Please switch to Vue slots.');\n  }\n\n  return Array.isArray(places)\n    ? places.reduce(assignChildIndex, {})\n    : Object.assign({}, places)\n}\n\nfunction assignChildPlace (params, child) {\n  if (child.data && child.data.attrs && child.data.attrs.place) {\n    params[child.data.attrs.place] = child;\n  }\n  return params\n}\n\nfunction assignChildIndex (params, child, index) {\n  params[index] = child;\n  return params\n}\n\nfunction vnodeHasPlaceAttribute (vnode) {\n  return Boolean(vnode.data && vnode.data.attrs && vnode.data.attrs.place)\n}\n\n/*  */\n\nvar numberComponent = {\n  name: 'i18n-n',\n  functional: true,\n  props: {\n    tag: {\n      type: [String, Boolean, Object],\n      default: 'span'\n    },\n    value: {\n      type: Number,\n      required: true\n    },\n    format: {\n      type: [String, Object]\n    },\n    locale: {\n      type: String\n    }\n  },\n  render: function render (h, ref) {\n    var props = ref.props;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    var i18n = parent.$i18n;\n\n    if (!i18n) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('Cannot find VueI18n instance!');\n      }\n      return null\n    }\n\n    var key = null;\n    var options = null;\n\n    if (isString(props.format)) {\n      key = props.format;\n    } else if (isObject(props.format)) {\n      if (props.format.key) {\n        key = props.format.key;\n      }\n\n      // Filter out number format options only\n      options = Object.keys(props.format).reduce(function (acc, prop) {\n        var obj;\n\n        if (includes(numberFormatKeys, prop)) {\n          return Object.assign({}, acc, ( obj = {}, obj[prop] = props.format[prop], obj ))\n        }\n        return acc\n      }, null);\n    }\n\n    var locale = props.locale || i18n.locale;\n    var parts = i18n._ntp(props.value, locale, key, options);\n\n    var values = parts.map(function (part, index) {\n      var obj;\n\n      var slot = data.scopedSlots && data.scopedSlots[part.type];\n      return slot ? slot(( obj = {}, obj[part.type] = part.value, obj.index = index, obj.parts = parts, obj )) : part.value\n    });\n\n    var tag = (!!props.tag && props.tag !== true) || props.tag === false ? props.tag : 'span';\n    return tag\n      ? h(tag, {\n        attrs: data.attrs,\n        'class': data['class'],\n        staticClass: data.staticClass\n      }, values)\n      : values\n  }\n};\n\n/*  */\n\nfunction bind (el, binding, vnode) {\n  if (!assert(el, vnode)) { return }\n\n  t(el, binding, vnode);\n}\n\nfunction update (el, binding, vnode, oldVNode) {\n  if (!assert(el, vnode)) { return }\n\n  var i18n = vnode.context.$i18n;\n  if (localeEqual(el, vnode) &&\n    (looseEqual(binding.value, binding.oldValue) &&\n     looseEqual(el._localeMessage, i18n.getLocaleMessage(i18n.locale)))) { return }\n\n  t(el, binding, vnode);\n}\n\nfunction unbind (el, binding, vnode, oldVNode) {\n  var vm = vnode.context;\n  if (!vm) {\n    warn('Vue instance does not exists in VNode context');\n    return\n  }\n\n  var i18n = vnode.context.$i18n || {};\n  if (!binding.modifiers.preserve && !i18n.preserveDirectiveContent) {\n    el.textContent = '';\n  }\n  el._vt = undefined;\n  delete el['_vt'];\n  el._locale = undefined;\n  delete el['_locale'];\n  el._localeMessage = undefined;\n  delete el['_localeMessage'];\n}\n\nfunction assert (el, vnode) {\n  var vm = vnode.context;\n  if (!vm) {\n    warn('Vue instance does not exists in VNode context');\n    return false\n  }\n\n  if (!vm.$i18n) {\n    warn('VueI18n instance does not exists in Vue instance');\n    return false\n  }\n\n  return true\n}\n\nfunction localeEqual (el, vnode) {\n  var vm = vnode.context;\n  return el._locale === vm.$i18n.locale\n}\n\nfunction t (el, binding, vnode) {\n  var ref$1, ref$2;\n\n  var value = binding.value;\n\n  var ref = parseValue(value);\n  var path = ref.path;\n  var locale = ref.locale;\n  var args = ref.args;\n  var choice = ref.choice;\n  if (!path && !locale && !args) {\n    warn('value type not supported');\n    return\n  }\n\n  if (!path) {\n    warn('`path` is required in v-t directive');\n    return\n  }\n\n  var vm = vnode.context;\n  if (choice != null) {\n    el._vt = el.textContent = (ref$1 = vm.$i18n).tc.apply(ref$1, [ path, choice ].concat( makeParams(locale, args) ));\n  } else {\n    el._vt = el.textContent = (ref$2 = vm.$i18n).t.apply(ref$2, [ path ].concat( makeParams(locale, args) ));\n  }\n  el._locale = vm.$i18n.locale;\n  el._localeMessage = vm.$i18n.getLocaleMessage(vm.$i18n.locale);\n}\n\nfunction parseValue (value) {\n  var path;\n  var locale;\n  var args;\n  var choice;\n\n  if (isString(value)) {\n    path = value;\n  } else if (isPlainObject(value)) {\n    path = value.path;\n    locale = value.locale;\n    args = value.args;\n    choice = value.choice;\n  }\n\n  return { path: path, locale: locale, args: args, choice: choice }\n}\n\nfunction makeParams (locale, args) {\n  var params = [];\n\n  locale && params.push(locale);\n  if (args && (Array.isArray(args) || isPlainObject(args))) {\n    params.push(args);\n  }\n\n  return params\n}\n\nvar Vue;\n\nfunction install (_Vue) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && install.installed && _Vue === Vue) {\n    warn('already installed.');\n    return\n  }\n  install.installed = true;\n\n  Vue = _Vue;\n\n  var version = (Vue.version && Number(Vue.version.split('.')[0])) || -1;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && version < 2) {\n    warn((\"vue-i18n (\" + (install.version) + \") need to use Vue 2.0 or later (Vue: \" + (Vue.version) + \").\"));\n    return\n  }\n\n  extend(Vue);\n  Vue.mixin(mixin);\n  Vue.directive('t', { bind: bind, update: update, unbind: unbind });\n  Vue.component(interpolationComponent.name, interpolationComponent);\n  Vue.component(numberComponent.name, numberComponent);\n\n  // use simple mergeStrategies to prevent i18n instance lose '__proto__'\n  var strats = Vue.config.optionMergeStrategies;\n  strats.i18n = function (parentVal, childVal) {\n    return childVal === undefined\n      ? parentVal\n      : childVal\n  };\n}\n\n/*  */\n\nvar BaseFormatter = function BaseFormatter () {\n  this._caches = Object.create(null);\n};\n\nBaseFormatter.prototype.interpolate = function interpolate (message, values) {\n  if (!values) {\n    return [message]\n  }\n  var tokens = this._caches[message];\n  if (!tokens) {\n    tokens = parse(message);\n    this._caches[message] = tokens;\n  }\n  return compile(tokens, values)\n};\n\n\n\nvar RE_TOKEN_LIST_VALUE = /^(?:\\d)+/;\nvar RE_TOKEN_NAMED_VALUE = /^(?:\\w)+/;\n\nfunction parse (format) {\n  var tokens = [];\n  var position = 0;\n\n  var text = '';\n  while (position < format.length) {\n    var char = format[position++];\n    if (char === '{') {\n      if (text) {\n        tokens.push({ type: 'text', value: text });\n      }\n\n      text = '';\n      var sub = '';\n      char = format[position++];\n      while (char !== undefined && char !== '}') {\n        sub += char;\n        char = format[position++];\n      }\n      var isClosed = char === '}';\n\n      var type = RE_TOKEN_LIST_VALUE.test(sub)\n        ? 'list'\n        : isClosed && RE_TOKEN_NAMED_VALUE.test(sub)\n          ? 'named'\n          : 'unknown';\n      tokens.push({ value: sub, type: type });\n    } else if (char === '%') {\n      // when found rails i18n syntax, skip text capture\n      if (format[(position)] !== '{') {\n        text += char;\n      }\n    } else {\n      text += char;\n    }\n  }\n\n  text && tokens.push({ type: 'text', value: text });\n\n  return tokens\n}\n\nfunction compile (tokens, values) {\n  var compiled = [];\n  var index = 0;\n\n  var mode = Array.isArray(values)\n    ? 'list'\n    : isObject(values)\n      ? 'named'\n      : 'unknown';\n  if (mode === 'unknown') { return compiled }\n\n  while (index < tokens.length) {\n    var token = tokens[index];\n    switch (token.type) {\n      case 'text':\n        compiled.push(token.value);\n        break\n      case 'list':\n        compiled.push(values[parseInt(token.value, 10)]);\n        break\n      case 'named':\n        if (mode === 'named') {\n          compiled.push((values)[token.value]);\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            warn((\"Type of token '\" + (token.type) + \"' and format of value '\" + mode + \"' don't match!\"));\n          }\n        }\n        break\n      case 'unknown':\n        if (process.env.NODE_ENV !== 'production') {\n          warn(\"Detect 'unknown' type of token!\");\n        }\n        break\n    }\n    index++;\n  }\n\n  return compiled\n}\n\n/*  */\n\n/**\n *  Path parser\n *  - Inspired:\n *    Vue.js Path parser\n */\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Check if an expression is a literal value.\n */\n\nvar literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral (exp) {\n  return literalValueRE.test(exp)\n}\n\n/**\n * Strip quotes from a string\n */\n\nfunction stripQuotes (str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27)\n    ? str.slice(1, -1)\n    : str\n}\n\n/**\n * Determine the type of a character in a keypath.\n */\n\nfunction getPathCharType (ch) {\n  if (ch === undefined || ch === null) { return 'eof' }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n      return ch\n\n    case 0x5F: // _\n    case 0x24: // $\n    case 0x2D: // -\n      return 'ident'\n\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0:  // No-break space\n    case 0xFEFF:  // Byte Order Mark\n    case 0x2028:  // Line Separator\n    case 0x2029:  // Paragraph Separator\n      return 'ws'\n  }\n\n  return 'ident'\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n */\n\nfunction formatSubPath (path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) { return false }\n\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed\n}\n\n/**\n * Parse a string path into an array of segments\n */\n\nfunction parse$1 (path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c;\n  var key;\n  var newChar;\n  var type;\n  var transition;\n  var action;\n  var typeMap;\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      if (key === undefined) { return false }\n      key = formatSubPath(key);\n      if (key === false) {\n        return false\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote () {\n    var nextChar = path[index + 1];\n    if ((mode === IN_SINGLE_QUOTE && nextChar === \"'\") ||\n      (mode === IN_DOUBLE_QUOTE && nextChar === '\"')) {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true\n    }\n  }\n\n  while (mode !== null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined\n        ? c\n        : newChar;\n      if (action() === false) {\n        return\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      return keys\n    }\n  }\n}\n\n\n\n\n\nvar I18nPath = function I18nPath () {\n  this._cache = Object.create(null);\n};\n\n/**\n * External parse that check for a cache hit first\n */\nI18nPath.prototype.parsePath = function parsePath (path) {\n  var hit = this._cache[path];\n  if (!hit) {\n    hit = parse$1(path);\n    if (hit) {\n      this._cache[path] = hit;\n    }\n  }\n  return hit || []\n};\n\n/**\n * Get path value from path string\n */\nI18nPath.prototype.getPathValue = function getPathValue (obj, path) {\n  if (!isObject(obj)) { return null }\n\n  var paths = this.parsePath(path);\n  if (paths.length === 0) {\n    return null\n  } else {\n    var length = paths.length;\n    var last = obj;\n    var i = 0;\n    while (i < length) {\n      var value = last[paths[i]];\n      if (value === undefined) {\n        return null\n      }\n      last = value;\n      i++;\n    }\n\n    return last\n  }\n};\n\n/*  */\n\n\n\nvar htmlTagMatcher = /<\\/?[\\w\\s=\"/.':;#-\\/]+>/;\nvar linkKeyMatcher = /(?:@(?:\\.[a-z]+)?:(?:[\\w\\-_|.]+|\\([\\w\\-_|.]+\\)))/g;\nvar linkKeyPrefixMatcher = /^@(?:\\.([a-z]+))?:/;\nvar bracketsMatcher = /[()]/g;\nvar defaultModifiers = {\n  'upper': function (str) { return str.toLocaleUpperCase(); },\n  'lower': function (str) { return str.toLocaleLowerCase(); },\n  'capitalize': function (str) { return (\"\" + (str.charAt(0).toLocaleUpperCase()) + (str.substr(1))); }\n};\n\nvar defaultFormatter = new BaseFormatter();\n\nvar VueI18n = function VueI18n (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #290\n  /* istanbul ignore if */\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  var locale = options.locale || 'en-US';\n  var fallbackLocale = options.fallbackLocale === false\n    ? false\n    : options.fallbackLocale || 'en-US';\n  var messages = options.messages || {};\n  var dateTimeFormats = options.dateTimeFormats || {};\n  var numberFormats = options.numberFormats || {};\n\n  this._vm = null;\n  this._formatter = options.formatter || defaultFormatter;\n  this._modifiers = options.modifiers || {};\n  this._missing = options.missing || null;\n  this._root = options.root || null;\n  this._sync = options.sync === undefined ? true : !!options.sync;\n  this._fallbackRoot = options.fallbackRoot === undefined\n    ? true\n    : !!options.fallbackRoot;\n  this._formatFallbackMessages = options.formatFallbackMessages === undefined\n    ? false\n    : !!options.formatFallbackMessages;\n  this._silentTranslationWarn = options.silentTranslationWarn === undefined\n    ? false\n    : options.silentTranslationWarn;\n  this._silentFallbackWarn = options.silentFallbackWarn === undefined\n    ? false\n    : !!options.silentFallbackWarn;\n  this._dateTimeFormatters = {};\n  this._numberFormatters = {};\n  this._path = new I18nPath();\n  this._dataListeners = [];\n  this._componentInstanceCreatedListener = options.componentInstanceCreatedListener || null;\n  this._preserveDirectiveContent = options.preserveDirectiveContent === undefined\n    ? false\n    : !!options.preserveDirectiveContent;\n  this.pluralizationRules = options.pluralizationRules || {};\n  this._warnHtmlInMessage = options.warnHtmlInMessage || 'off';\n  this._postTranslation = options.postTranslation || null;\n  this._escapeParameterHtml = options.escapeParameterHtml || false;\n\n  /**\n   * @param choice {number} a choice index given by the input to $tc: `$tc('path.to.rule', choiceIndex)`\n   * @param choicesLength {number} an overall amount of available choices\n   * @returns a final choice index\n  */\n  this.getChoiceIndex = function (choice, choicesLength) {\n    var thisPrototype = Object.getPrototypeOf(this$1);\n    if (thisPrototype && thisPrototype.getChoiceIndex) {\n      var prototypeGetChoiceIndex = (thisPrototype.getChoiceIndex);\n      return (prototypeGetChoiceIndex).call(this$1, choice, choicesLength)\n    }\n\n    // Default (old) getChoiceIndex implementation - english-compatible\n    var defaultImpl = function (_choice, _choicesLength) {\n      _choice = Math.abs(_choice);\n\n      if (_choicesLength === 2) {\n        return _choice\n          ? _choice > 1\n            ? 1\n            : 0\n          : 1\n      }\n\n      return _choice ? Math.min(_choice, 2) : 0\n    };\n\n    if (this$1.locale in this$1.pluralizationRules) {\n      return this$1.pluralizationRules[this$1.locale].apply(this$1, [choice, choicesLength])\n    } else {\n      return defaultImpl(choice, choicesLength)\n    }\n  };\n\n\n  this._exist = function (message, key) {\n    if (!message || !key) { return false }\n    if (!isNull(this$1._path.getPathValue(message, key))) { return true }\n    // fallback for flat key\n    if (message[key]) { return true }\n    return false\n  };\n\n  if (this._warnHtmlInMessage === 'warn' || this._warnHtmlInMessage === 'error') {\n    Object.keys(messages).forEach(function (locale) {\n      this$1._checkLocaleMessage(locale, this$1._warnHtmlInMessage, messages[locale]);\n    });\n  }\n\n  this._initVM({\n    locale: locale,\n    fallbackLocale: fallbackLocale,\n    messages: messages,\n    dateTimeFormats: dateTimeFormats,\n    numberFormats: numberFormats\n  });\n};\n\nvar prototypeAccessors = { vm: { configurable: true },messages: { configurable: true },dateTimeFormats: { configurable: true },numberFormats: { configurable: true },availableLocales: { configurable: true },locale: { configurable: true },fallbackLocale: { configurable: true },formatFallbackMessages: { configurable: true },missing: { configurable: true },formatter: { configurable: true },silentTranslationWarn: { configurable: true },silentFallbackWarn: { configurable: true },preserveDirectiveContent: { configurable: true },warnHtmlInMessage: { configurable: true },postTranslation: { configurable: true } };\n\nVueI18n.prototype._checkLocaleMessage = function _checkLocaleMessage (locale, level, message) {\n  var paths = [];\n\n  var fn = function (level, locale, message, paths) {\n    if (isPlainObject(message)) {\n      Object.keys(message).forEach(function (key) {\n        var val = message[key];\n        if (isPlainObject(val)) {\n          paths.push(key);\n          paths.push('.');\n          fn(level, locale, val, paths);\n          paths.pop();\n          paths.pop();\n        } else {\n          paths.push(key);\n          fn(level, locale, val, paths);\n          paths.pop();\n        }\n      });\n    } else if (isArray(message)) {\n      message.forEach(function (item, index) {\n        if (isPlainObject(item)) {\n          paths.push((\"[\" + index + \"]\"));\n          paths.push('.');\n          fn(level, locale, item, paths);\n          paths.pop();\n          paths.pop();\n        } else {\n          paths.push((\"[\" + index + \"]\"));\n          fn(level, locale, item, paths);\n          paths.pop();\n        }\n      });\n    } else if (isString(message)) {\n      var ret = htmlTagMatcher.test(message);\n      if (ret) {\n        var msg = \"Detected HTML in message '\" + message + \"' of keypath '\" + (paths.join('')) + \"' at '\" + locale + \"'. Consider component interpolation with '<i18n>' to avoid XSS. See https://bit.ly/2ZqJzkp\";\n        if (level === 'warn') {\n          warn(msg);\n        } else if (level === 'error') {\n          error(msg);\n        }\n      }\n    }\n  };\n\n  fn(level, locale, message, paths);\n};\n\nVueI18n.prototype._initVM = function _initVM (data) {\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  this._vm = new Vue({ data: data });\n  Vue.config.silent = silent;\n};\n\nVueI18n.prototype.destroyVM = function destroyVM () {\n  this._vm.$destroy();\n};\n\nVueI18n.prototype.subscribeDataChanging = function subscribeDataChanging (vm) {\n  this._dataListeners.push(vm);\n};\n\nVueI18n.prototype.unsubscribeDataChanging = function unsubscribeDataChanging (vm) {\n  remove(this._dataListeners, vm);\n};\n\nVueI18n.prototype.watchI18nData = function watchI18nData () {\n  var self = this;\n  return this._vm.$watch('$data', function () {\n    var i = self._dataListeners.length;\n    while (i--) {\n      Vue.nextTick(function () {\n        self._dataListeners[i] && self._dataListeners[i].$forceUpdate();\n      });\n    }\n  }, { deep: true })\n};\n\nVueI18n.prototype.watchLocale = function watchLocale () {\n  /* istanbul ignore if */\n  if (!this._sync || !this._root) { return null }\n  var target = this._vm;\n  return this._root.$i18n.vm.$watch('locale', function (val) {\n    target.$set(target, 'locale', val);\n    target.$forceUpdate();\n  }, { immediate: true })\n};\n\nVueI18n.prototype.onComponentInstanceCreated = function onComponentInstanceCreated (newI18n) {\n  if (this._componentInstanceCreatedListener) {\n    this._componentInstanceCreatedListener(newI18n, this);\n  }\n};\n\nprototypeAccessors.vm.get = function () { return this._vm };\n\nprototypeAccessors.messages.get = function () { return looseClone(this._getMessages()) };\nprototypeAccessors.dateTimeFormats.get = function () { return looseClone(this._getDateTimeFormats()) };\nprototypeAccessors.numberFormats.get = function () { return looseClone(this._getNumberFormats()) };\nprototypeAccessors.availableLocales.get = function () { return Object.keys(this.messages).sort() };\n\nprototypeAccessors.locale.get = function () { return this._vm.locale };\nprototypeAccessors.locale.set = function (locale) {\n  this._vm.$set(this._vm, 'locale', locale);\n};\n\nprototypeAccessors.fallbackLocale.get = function () { return this._vm.fallbackLocale };\nprototypeAccessors.fallbackLocale.set = function (locale) {\n  this._localeChainCache = {};\n  this._vm.$set(this._vm, 'fallbackLocale', locale);\n};\n\nprototypeAccessors.formatFallbackMessages.get = function () { return this._formatFallbackMessages };\nprototypeAccessors.formatFallbackMessages.set = function (fallback) { this._formatFallbackMessages = fallback; };\n\nprototypeAccessors.missing.get = function () { return this._missing };\nprototypeAccessors.missing.set = function (handler) { this._missing = handler; };\n\nprototypeAccessors.formatter.get = function () { return this._formatter };\nprototypeAccessors.formatter.set = function (formatter) { this._formatter = formatter; };\n\nprototypeAccessors.silentTranslationWarn.get = function () { return this._silentTranslationWarn };\nprototypeAccessors.silentTranslationWarn.set = function (silent) { this._silentTranslationWarn = silent; };\n\nprototypeAccessors.silentFallbackWarn.get = function () { return this._silentFallbackWarn };\nprototypeAccessors.silentFallbackWarn.set = function (silent) { this._silentFallbackWarn = silent; };\n\nprototypeAccessors.preserveDirectiveContent.get = function () { return this._preserveDirectiveContent };\nprototypeAccessors.preserveDirectiveContent.set = function (preserve) { this._preserveDirectiveContent = preserve; };\n\nprototypeAccessors.warnHtmlInMessage.get = function () { return this._warnHtmlInMessage };\nprototypeAccessors.warnHtmlInMessage.set = function (level) {\n    var this$1 = this;\n\n  var orgLevel = this._warnHtmlInMessage;\n  this._warnHtmlInMessage = level;\n  if (orgLevel !== level && (level === 'warn' || level === 'error')) {\n    var messages = this._getMessages();\n    Object.keys(messages).forEach(function (locale) {\n      this$1._checkLocaleMessage(locale, this$1._warnHtmlInMessage, messages[locale]);\n    });\n  }\n};\n\nprototypeAccessors.postTranslation.get = function () { return this._postTranslation };\nprototypeAccessors.postTranslation.set = function (handler) { this._postTranslation = handler; };\n\nVueI18n.prototype._getMessages = function _getMessages () { return this._vm.messages };\nVueI18n.prototype._getDateTimeFormats = function _getDateTimeFormats () { return this._vm.dateTimeFormats };\nVueI18n.prototype._getNumberFormats = function _getNumberFormats () { return this._vm.numberFormats };\n\nVueI18n.prototype._warnDefault = function _warnDefault (locale, key, result, vm, values, interpolateMode) {\n  if (!isNull(result)) { return result }\n  if (this._missing) {\n    var missingRet = this._missing.apply(null, [locale, key, vm, values]);\n    if (isString(missingRet)) {\n      return missingRet\n    }\n  } else {\n    if (process.env.NODE_ENV !== 'production' && !this._isSilentTranslationWarn(key)) {\n      warn(\n        \"Cannot translate the value of keypath '\" + key + \"'. \" +\n        'Use the value of keypath as default.'\n      );\n    }\n  }\n\n  if (this._formatFallbackMessages) {\n    var parsedArgs = parseArgs.apply(void 0, values);\n    return this._render(key, interpolateMode, parsedArgs.params, key)\n  } else {\n    return key\n  }\n};\n\nVueI18n.prototype._isFallbackRoot = function _isFallbackRoot (val) {\n  return !val && !isNull(this._root) && this._fallbackRoot\n};\n\nVueI18n.prototype._isSilentFallbackWarn = function _isSilentFallbackWarn (key) {\n  return this._silentFallbackWarn instanceof RegExp\n    ? this._silentFallbackWarn.test(key)\n    : this._silentFallbackWarn\n};\n\nVueI18n.prototype._isSilentFallback = function _isSilentFallback (locale, key) {\n  return this._isSilentFallbackWarn(key) && (this._isFallbackRoot() || locale !== this.fallbackLocale)\n};\n\nVueI18n.prototype._isSilentTranslationWarn = function _isSilentTranslationWarn (key) {\n  return this._silentTranslationWarn instanceof RegExp\n    ? this._silentTranslationWarn.test(key)\n    : this._silentTranslationWarn\n};\n\nVueI18n.prototype._interpolate = function _interpolate (\n  locale,\n  message,\n  key,\n  host,\n  interpolateMode,\n  values,\n  visitedLinkStack\n) {\n  if (!message) { return null }\n\n  var pathRet = this._path.getPathValue(message, key);\n  if (isArray(pathRet) || isPlainObject(pathRet)) { return pathRet }\n\n  var ret;\n  if (isNull(pathRet)) {\n    /* istanbul ignore else */\n    if (isPlainObject(message)) {\n      ret = message[key];\n      if (!(isString(ret) || isFunction(ret))) {\n        if (process.env.NODE_ENV !== 'production' && !this._isSilentTranslationWarn(key) && !this._isSilentFallback(locale, key)) {\n          warn((\"Value of key '\" + key + \"' is not a string or function !\"));\n        }\n        return null\n      }\n    } else {\n      return null\n    }\n  } else {\n    /* istanbul ignore else */\n    if (isString(pathRet) || isFunction(pathRet)) {\n      ret = pathRet;\n    } else {\n      if (process.env.NODE_ENV !== 'production' && !this._isSilentTranslationWarn(key) && !this._isSilentFallback(locale, key)) {\n        warn((\"Value of key '\" + key + \"' is not a string or function!\"));\n      }\n      return null\n    }\n  }\n\n  // Check for the existence of links within the translated string\n  if (isString(ret) && (ret.indexOf('@:') >= 0 || ret.indexOf('@.') >= 0)) {\n    ret = this._link(locale, message, ret, host, 'raw', values, visitedLinkStack);\n  }\n\n  return this._render(ret, interpolateMode, values, key)\n};\n\nVueI18n.prototype._link = function _link (\n  locale,\n  message,\n  str,\n  host,\n  interpolateMode,\n  values,\n  visitedLinkStack\n) {\n  var ret = str;\n\n  // Match all the links within the local\n  // We are going to replace each of\n  // them with its translation\n  var matches = ret.match(linkKeyMatcher);\n  for (var idx in matches) {\n    // ie compatible: filter custom array\n    // prototype method\n    if (!matches.hasOwnProperty(idx)) {\n      continue\n    }\n    var link = matches[idx];\n    var linkKeyPrefixMatches = link.match(linkKeyPrefixMatcher);\n    var linkPrefix = linkKeyPrefixMatches[0];\n      var formatterName = linkKeyPrefixMatches[1];\n\n    // Remove the leading @:, @.case: and the brackets\n    var linkPlaceholder = link.replace(linkPrefix, '').replace(bracketsMatcher, '');\n\n    if (includes(visitedLinkStack, linkPlaceholder)) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn((\"Circular reference found. \\\"\" + link + \"\\\" is already visited in the chain of \" + (visitedLinkStack.reverse().join(' <- '))));\n      }\n      return ret\n    }\n    visitedLinkStack.push(linkPlaceholder);\n\n    // Translate the link\n    var translated = this._interpolate(\n      locale, message, linkPlaceholder, host,\n      interpolateMode === 'raw' ? 'string' : interpolateMode,\n      interpolateMode === 'raw' ? undefined : values,\n      visitedLinkStack\n    );\n\n    if (this._isFallbackRoot(translated)) {\n      if (process.env.NODE_ENV !== 'production' && !this._isSilentTranslationWarn(linkPlaceholder)) {\n        warn((\"Fall back to translate the link placeholder '\" + linkPlaceholder + \"' with root locale.\"));\n      }\n      /* istanbul ignore if */\n      if (!this._root) { throw Error('unexpected error') }\n      var root = this._root.$i18n;\n      translated = root._translate(\n        root._getMessages(), root.locale, root.fallbackLocale,\n        linkPlaceholder, host, interpolateMode, values\n      );\n    }\n    translated = this._warnDefault(\n      locale, linkPlaceholder, translated, host,\n      isArray(values) ? values : [values],\n      interpolateMode\n    );\n\n    if (this._modifiers.hasOwnProperty(formatterName)) {\n      translated = this._modifiers[formatterName](translated);\n    } else if (defaultModifiers.hasOwnProperty(formatterName)) {\n      translated = defaultModifiers[formatterName](translated);\n    }\n\n    visitedLinkStack.pop();\n\n    // Replace the link with the translated\n    ret = !translated ? ret : ret.replace(link, translated);\n  }\n\n  return ret\n};\n\nVueI18n.prototype._createMessageContext = function _createMessageContext (values) {\n  var _list = isArray(values) ? values : [];\n  var _named = isObject(values) ? values : {};\n  var list = function (index) { return _list[index]; };\n  var named = function (key) { return _named[key]; };\n  return {\n    list: list,\n    named: named\n  }\n};\n\nVueI18n.prototype._render = function _render (message, interpolateMode, values, path) {\n  if (isFunction(message)) {\n    return message(this._createMessageContext(values))\n  }\n\n  var ret = this._formatter.interpolate(message, values, path);\n\n  // If the custom formatter refuses to work - apply the default one\n  if (!ret) {\n    ret = defaultFormatter.interpolate(message, values, path);\n  }\n\n  // if interpolateMode is **not** 'string' ('row'),\n  // return the compiled data (e.g. ['foo', VNode, 'bar']) with formatter\n  return interpolateMode === 'string' && !isString(ret) ? ret.join('') : ret\n};\n\nVueI18n.prototype._appendItemToChain = function _appendItemToChain (chain, item, blocks) {\n  var follow = false;\n  if (!includes(chain, item)) {\n    follow = true;\n    if (item) {\n      follow = item[item.length - 1] !== '!';\n      item = item.replace(/!/g, '');\n      chain.push(item);\n      if (blocks && blocks[item]) {\n        follow = blocks[item];\n      }\n    }\n  }\n  return follow\n};\n\nVueI18n.prototype._appendLocaleToChain = function _appendLocaleToChain (chain, locale, blocks) {\n  var follow;\n  var tokens = locale.split('-');\n  do {\n    var item = tokens.join('-');\n    follow = this._appendItemToChain(chain, item, blocks);\n    tokens.splice(-1, 1);\n  } while (tokens.length && (follow === true))\n  return follow\n};\n\nVueI18n.prototype._appendBlockToChain = function _appendBlockToChain (chain, block, blocks) {\n  var follow = true;\n  for (var i = 0; (i < block.length) && (isBoolean(follow)); i++) {\n    var locale = block[i];\n    if (isString(locale)) {\n      follow = this._appendLocaleToChain(chain, locale, blocks);\n    }\n  }\n  return follow\n};\n\nVueI18n.prototype._getLocaleChain = function _getLocaleChain (start, fallbackLocale) {\n  if (start === '') { return [] }\n\n  if (!this._localeChainCache) {\n    this._localeChainCache = {};\n  }\n\n  var chain = this._localeChainCache[start];\n  if (!chain) {\n    if (!fallbackLocale) {\n      fallbackLocale = this.fallbackLocale;\n    }\n    chain = [];\n\n    // first block defined by start\n    var block = [start];\n\n    // while any intervening block found\n    while (isArray(block)) {\n      block = this._appendBlockToChain(\n        chain,\n        block,\n        fallbackLocale\n      );\n    }\n\n    // last block defined by default\n    var defaults;\n    if (isArray(fallbackLocale)) {\n      defaults = fallbackLocale;\n    } else if (isObject(fallbackLocale)) {\n      /* $FlowFixMe */\n      if (fallbackLocale['default']) {\n        defaults = fallbackLocale['default'];\n      } else {\n        defaults = null;\n      }\n    } else {\n      defaults = fallbackLocale;\n    }\n\n    // convert defaults to array\n    if (isString(defaults)) {\n      block = [defaults];\n    } else {\n      block = defaults;\n    }\n    if (block) {\n      this._appendBlockToChain(\n        chain,\n        block,\n        null\n      );\n    }\n    this._localeChainCache[start] = chain;\n  }\n  return chain\n};\n\nVueI18n.prototype._translate = function _translate (\n  messages,\n  locale,\n  fallback,\n  key,\n  host,\n  interpolateMode,\n  args\n) {\n  var chain = this._getLocaleChain(locale, fallback);\n  var res;\n  for (var i = 0; i < chain.length; i++) {\n    var step = chain[i];\n    res =\n      this._interpolate(step, messages[step], key, host, interpolateMode, args, [key]);\n    if (!isNull(res)) {\n      if (step !== locale && process.env.NODE_ENV !== 'production' && !this._isSilentTranslationWarn(key) && !this._isSilentFallbackWarn(key)) {\n        warn((\"Fall back to translate the keypath '\" + key + \"' with '\" + step + \"' locale.\"));\n      }\n      return res\n    }\n  }\n  return null\n};\n\nVueI18n.prototype._t = function _t (key, _locale, messages, host) {\n    var ref;\n\n    var values = [], len = arguments.length - 4;\n    while ( len-- > 0 ) values[ len ] = arguments[ len + 4 ];\n  if (!key) { return '' }\n\n  var parsedArgs = parseArgs.apply(void 0, values);\n  if(this._escapeParameterHtml) {\n    parsedArgs.params = escapeParams(parsedArgs.params);\n  }\n\n  var locale = parsedArgs.locale || _locale;\n\n  var ret = this._translate(\n    messages, locale, this.fallbackLocale, key,\n    host, 'string', parsedArgs.params\n  );\n  if (this._isFallbackRoot(ret)) {\n    if (process.env.NODE_ENV !== 'production' && !this._isSilentTranslationWarn(key) && !this._isSilentFallbackWarn(key)) {\n      warn((\"Fall back to translate the keypath '\" + key + \"' with root locale.\"));\n    }\n    /* istanbul ignore if */\n    if (!this._root) { throw Error('unexpected error') }\n    return (ref = this._root).$t.apply(ref, [ key ].concat( values ))\n  } else {\n    ret = this._warnDefault(locale, key, ret, host, values, 'string');\n    if (this._postTranslation && ret !== null && ret !== undefined) {\n      ret = this._postTranslation(ret, key);\n    }\n    return ret\n  }\n};\n\nVueI18n.prototype.t = function t (key) {\n    var ref;\n\n    var values = [], len = arguments.length - 1;\n    while ( len-- > 0 ) values[ len ] = arguments[ len + 1 ];\n  return (ref = this)._t.apply(ref, [ key, this.locale, this._getMessages(), null ].concat( values ))\n};\n\nVueI18n.prototype._i = function _i (key, locale, messages, host, values) {\n  var ret =\n    this._translate(messages, locale, this.fallbackLocale, key, host, 'raw', values);\n  if (this._isFallbackRoot(ret)) {\n    if (process.env.NODE_ENV !== 'production' && !this._isSilentTranslationWarn(key)) {\n      warn((\"Fall back to interpolate the keypath '\" + key + \"' with root locale.\"));\n    }\n    if (!this._root) { throw Error('unexpected error') }\n    return this._root.$i18n.i(key, locale, values)\n  } else {\n    return this._warnDefault(locale, key, ret, host, [values], 'raw')\n  }\n};\n\nVueI18n.prototype.i = function i (key, locale, values) {\n  /* istanbul ignore if */\n  if (!key) { return '' }\n\n  if (!isString(locale)) {\n    locale = this.locale;\n  }\n\n  return this._i(key, locale, this._getMessages(), null, values)\n};\n\nVueI18n.prototype._tc = function _tc (\n  key,\n  _locale,\n  messages,\n  host,\n  choice\n) {\n    var ref;\n\n    var values = [], len = arguments.length - 5;\n    while ( len-- > 0 ) values[ len ] = arguments[ len + 5 ];\n  if (!key) { return '' }\n  if (choice === undefined) {\n    choice = 1;\n  }\n\n  var predefined = { 'count': choice, 'n': choice };\n  var parsedArgs = parseArgs.apply(void 0, values);\n  parsedArgs.params = Object.assign(predefined, parsedArgs.params);\n  values = parsedArgs.locale === null ? [parsedArgs.params] : [parsedArgs.locale, parsedArgs.params];\n  return this.fetchChoice((ref = this)._t.apply(ref, [ key, _locale, messages, host ].concat( values )), choice)\n};\n\nVueI18n.prototype.fetchChoice = function fetchChoice (message, choice) {\n  /* istanbul ignore if */\n  if (!message || !isString(message)) { return null }\n  var choices = message.split('|');\n\n  choice = this.getChoiceIndex(choice, choices.length);\n  if (!choices[choice]) { return message }\n  return choices[choice].trim()\n};\n\nVueI18n.prototype.tc = function tc (key, choice) {\n    var ref;\n\n    var values = [], len = arguments.length - 2;\n    while ( len-- > 0 ) values[ len ] = arguments[ len + 2 ];\n  return (ref = this)._tc.apply(ref, [ key, this.locale, this._getMessages(), null, choice ].concat( values ))\n};\n\nVueI18n.prototype._te = function _te (key, locale, messages) {\n    var args = [], len = arguments.length - 3;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 3 ];\n\n  var _locale = parseArgs.apply(void 0, args).locale || locale;\n  return this._exist(messages[_locale], key)\n};\n\nVueI18n.prototype.te = function te (key, locale) {\n  return this._te(key, this.locale, this._getMessages(), locale)\n};\n\nVueI18n.prototype.getLocaleMessage = function getLocaleMessage (locale) {\n  return looseClone(this._vm.messages[locale] || {})\n};\n\nVueI18n.prototype.setLocaleMessage = function setLocaleMessage (locale, message) {\n  if (this._warnHtmlInMessage === 'warn' || this._warnHtmlInMessage === 'error') {\n    this._checkLocaleMessage(locale, this._warnHtmlInMessage, message);\n  }\n  this._vm.$set(this._vm.messages, locale, message);\n};\n\nVueI18n.prototype.mergeLocaleMessage = function mergeLocaleMessage (locale, message) {\n  if (this._warnHtmlInMessage === 'warn' || this._warnHtmlInMessage === 'error') {\n    this._checkLocaleMessage(locale, this._warnHtmlInMessage, message);\n  }\n  this._vm.$set(this._vm.messages, locale, merge({}, this._vm.messages[locale] || {}, message));\n};\n\nVueI18n.prototype.getDateTimeFormat = function getDateTimeFormat (locale) {\n  return looseClone(this._vm.dateTimeFormats[locale] || {})\n};\n\nVueI18n.prototype.setDateTimeFormat = function setDateTimeFormat (locale, format) {\n  this._vm.$set(this._vm.dateTimeFormats, locale, format);\n  this._clearDateTimeFormat(locale, format);\n};\n\nVueI18n.prototype.mergeDateTimeFormat = function mergeDateTimeFormat (locale, format) {\n  this._vm.$set(this._vm.dateTimeFormats, locale, merge(this._vm.dateTimeFormats[locale] || {}, format));\n  this._clearDateTimeFormat(locale, format);\n};\n\nVueI18n.prototype._clearDateTimeFormat = function _clearDateTimeFormat (locale, format) {\n  for (var key in format) {\n    var id = locale + \"__\" + key;\n\n    if (!this._dateTimeFormatters.hasOwnProperty(id)) {\n      continue\n    }\n\n    delete this._dateTimeFormatters[id];\n  }\n};\n\nVueI18n.prototype._localizeDateTime = function _localizeDateTime (\n  value,\n  locale,\n  fallback,\n  dateTimeFormats,\n  key\n) {\n  var _locale = locale;\n  var formats = dateTimeFormats[_locale];\n\n  var chain = this._getLocaleChain(locale, fallback);\n  for (var i = 0; i < chain.length; i++) {\n    var current = _locale;\n    var step = chain[i];\n    formats = dateTimeFormats[step];\n    _locale = step;\n    // fallback locale\n    if (isNull(formats) || isNull(formats[key])) {\n      if (step !== locale && process.env.NODE_ENV !== 'production' && !this._isSilentTranslationWarn(key) && !this._isSilentFallbackWarn(key)) {\n        warn((\"Fall back to '\" + step + \"' datetime formats from '\" + current + \"' datetime formats.\"));\n      }\n    } else {\n      break\n    }\n  }\n\n  if (isNull(formats) || isNull(formats[key])) {\n    return null\n  } else {\n    var format = formats[key];\n    var id = _locale + \"__\" + key;\n    var formatter = this._dateTimeFormatters[id];\n    if (!formatter) {\n      formatter = this._dateTimeFormatters[id] = new Intl.DateTimeFormat(_locale, format);\n    }\n    return formatter.format(value)\n  }\n};\n\nVueI18n.prototype._d = function _d (value, locale, key) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && !VueI18n.availabilities.dateTimeFormat) {\n    warn('Cannot format a Date value due to not supported Intl.DateTimeFormat.');\n    return ''\n  }\n\n  if (!key) {\n    return new Intl.DateTimeFormat(locale).format(value)\n  }\n\n  var ret =\n    this._localizeDateTime(value, locale, this.fallbackLocale, this._getDateTimeFormats(), key);\n  if (this._isFallbackRoot(ret)) {\n    if (process.env.NODE_ENV !== 'production' && !this._isSilentTranslationWarn(key) && !this._isSilentFallbackWarn(key)) {\n      warn((\"Fall back to datetime localization of root: key '\" + key + \"'.\"));\n    }\n    /* istanbul ignore if */\n    if (!this._root) { throw Error('unexpected error') }\n    return this._root.$i18n.d(value, key, locale)\n  } else {\n    return ret || ''\n  }\n};\n\nVueI18n.prototype.d = function d (value) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n  var locale = this.locale;\n  var key = null;\n\n  if (args.length === 1) {\n    if (isString(args[0])) {\n      key = args[0];\n    } else if (isObject(args[0])) {\n      if (args[0].locale) {\n        locale = args[0].locale;\n      }\n      if (args[0].key) {\n        key = args[0].key;\n      }\n    }\n  } else if (args.length === 2) {\n    if (isString(args[0])) {\n      key = args[0];\n    }\n    if (isString(args[1])) {\n      locale = args[1];\n    }\n  }\n\n  return this._d(value, locale, key)\n};\n\nVueI18n.prototype.getNumberFormat = function getNumberFormat (locale) {\n  return looseClone(this._vm.numberFormats[locale] || {})\n};\n\nVueI18n.prototype.setNumberFormat = function setNumberFormat (locale, format) {\n  this._vm.$set(this._vm.numberFormats, locale, format);\n  this._clearNumberFormat(locale, format);\n};\n\nVueI18n.prototype.mergeNumberFormat = function mergeNumberFormat (locale, format) {\n  this._vm.$set(this._vm.numberFormats, locale, merge(this._vm.numberFormats[locale] || {}, format));\n  this._clearNumberFormat(locale, format);\n};\n\nVueI18n.prototype._clearNumberFormat = function _clearNumberFormat (locale, format) {\n  for (var key in format) {\n    var id = locale + \"__\" + key;\n\n    if (!this._numberFormatters.hasOwnProperty(id)) {\n      continue\n    }\n\n    delete this._numberFormatters[id];\n  }\n};\n\nVueI18n.prototype._getNumberFormatter = function _getNumberFormatter (\n  value,\n  locale,\n  fallback,\n  numberFormats,\n  key,\n  options\n) {\n  var _locale = locale;\n  var formats = numberFormats[_locale];\n\n  var chain = this._getLocaleChain(locale, fallback);\n  for (var i = 0; i < chain.length; i++) {\n    var current = _locale;\n    var step = chain[i];\n    formats = numberFormats[step];\n    _locale = step;\n    // fallback locale\n    if (isNull(formats) || isNull(formats[key])) {\n      if (step !== locale && process.env.NODE_ENV !== 'production' && !this._isSilentTranslationWarn(key) && !this._isSilentFallbackWarn(key)) {\n        warn((\"Fall back to '\" + step + \"' number formats from '\" + current + \"' number formats.\"));\n      }\n    } else {\n      break\n    }\n  }\n\n  if (isNull(formats) || isNull(formats[key])) {\n    return null\n  } else {\n    var format = formats[key];\n\n    var formatter;\n    if (options) {\n      // If options specified - create one time number formatter\n      formatter = new Intl.NumberFormat(_locale, Object.assign({}, format, options));\n    } else {\n      var id = _locale + \"__\" + key;\n      formatter = this._numberFormatters[id];\n      if (!formatter) {\n        formatter = this._numberFormatters[id] = new Intl.NumberFormat(_locale, format);\n      }\n    }\n    return formatter\n  }\n};\n\nVueI18n.prototype._n = function _n (value, locale, key, options) {\n  /* istanbul ignore if */\n  if (!VueI18n.availabilities.numberFormat) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Cannot format a Number value due to not supported Intl.NumberFormat.');\n    }\n    return ''\n  }\n\n  if (!key) {\n    var nf = !options ? new Intl.NumberFormat(locale) : new Intl.NumberFormat(locale, options);\n    return nf.format(value)\n  }\n\n  var formatter = this._getNumberFormatter(value, locale, this.fallbackLocale, this._getNumberFormats(), key, options);\n  var ret = formatter && formatter.format(value);\n  if (this._isFallbackRoot(ret)) {\n    if (process.env.NODE_ENV !== 'production' && !this._isSilentTranslationWarn(key) && !this._isSilentFallbackWarn(key)) {\n      warn((\"Fall back to number localization of root: key '\" + key + \"'.\"));\n    }\n    /* istanbul ignore if */\n    if (!this._root) { throw Error('unexpected error') }\n    return this._root.$i18n.n(value, Object.assign({}, { key: key, locale: locale }, options))\n  } else {\n    return ret || ''\n  }\n};\n\nVueI18n.prototype.n = function n (value) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n  var locale = this.locale;\n  var key = null;\n  var options = null;\n\n  if (args.length === 1) {\n    if (isString(args[0])) {\n      key = args[0];\n    } else if (isObject(args[0])) {\n      if (args[0].locale) {\n        locale = args[0].locale;\n      }\n      if (args[0].key) {\n        key = args[0].key;\n      }\n\n      // Filter out number format options only\n      options = Object.keys(args[0]).reduce(function (acc, key) {\n          var obj;\n\n        if (includes(numberFormatKeys, key)) {\n          return Object.assign({}, acc, ( obj = {}, obj[key] = args[0][key], obj ))\n        }\n        return acc\n      }, null);\n    }\n  } else if (args.length === 2) {\n    if (isString(args[0])) {\n      key = args[0];\n    }\n    if (isString(args[1])) {\n      locale = args[1];\n    }\n  }\n\n  return this._n(value, locale, key, options)\n};\n\nVueI18n.prototype._ntp = function _ntp (value, locale, key, options) {\n  /* istanbul ignore if */\n  if (!VueI18n.availabilities.numberFormat) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Cannot format to parts a Number value due to not supported Intl.NumberFormat.');\n    }\n    return []\n  }\n\n  if (!key) {\n    var nf = !options ? new Intl.NumberFormat(locale) : new Intl.NumberFormat(locale, options);\n    return nf.formatToParts(value)\n  }\n\n  var formatter = this._getNumberFormatter(value, locale, this.fallbackLocale, this._getNumberFormats(), key, options);\n  var ret = formatter && formatter.formatToParts(value);\n  if (this._isFallbackRoot(ret)) {\n    if (process.env.NODE_ENV !== 'production' && !this._isSilentTranslationWarn(key)) {\n      warn((\"Fall back to format number to parts of root: key '\" + key + \"' .\"));\n    }\n    /* istanbul ignore if */\n    if (!this._root) { throw Error('unexpected error') }\n    return this._root.$i18n._ntp(value, locale, key, options)\n  } else {\n    return ret || []\n  }\n};\n\nObject.defineProperties( VueI18n.prototype, prototypeAccessors );\n\nvar availabilities;\n// $FlowFixMe\nObject.defineProperty(VueI18n, 'availabilities', {\n  get: function get () {\n    if (!availabilities) {\n      var intlDefined = typeof Intl !== 'undefined';\n      availabilities = {\n        dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n        numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n      };\n    }\n\n    return availabilities\n  }\n});\n\nVueI18n.install = install;\nVueI18n.version = '8.22.2';\n\nexport default VueI18n;\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport ItemsList from './components/ItemsList.vue';\nimport ItemDetail from './components/ItemDetail.vue';\nimport VueI18n from 'vue-i18n';\n\nimport messagesEn from '@/assets/locales/en.json';\nimport messagesDe from '@/assets/locales/de.json';\nimport messagesIt from '@/assets/locales/it.json';\n\nVue.use(VueI18n);\n\nconst i18n = new VueI18n({\n  locale: 'de',\n  messages: {\n    en: messagesEn,\n    de: messagesDe,\n    it: messagesIt,\n  },\n});\n\nexport default Vue.extend({\n  i18n,\n  components: {\n    ItemsList,\n    ItemDetail,\n  },\n  props: {\n    contentType: {\n      type: String,\n      default: 'Gastronomy',\n    },\n    contentIdList: {\n      type: String,\n      default: null,\n    },\n    category: {\n      type: String,\n      default: null,\n    },\n    language: {\n      type: String,\n      default: 'de',\n    },\n    pageSize: {\n      type: Number,\n      default: 20,\n    },\n  },\n  data() {\n    return {\n      detailContentId: null,\n      currentPage: 1,\n    };\n  },\n  computed: {\n    contentIds() {\n      return this.contentIdList !== null ? this.contentIdList.split(',') : [];\n    },\n    islistAvailable() {\n      return this.contentIds.length != 1;\n    },\n  },\n  watch: {\n    language: {\n      immediate: true,\n      handler(value) {\n        this.$i18n.locale = value;\n      },\n    },\n  },\n  created() {\n    if (!this.islistAvailable) {\n      this.detailContentId = this.contentIds[0];\n    }\n  },\n  methods: {\n    showDetail(detailContentId) {\n      this.detailContentId = detailContentId;\n    },\n    closeDetail() {\n      this.detailContentId = null;\n    },\n    changeCurrentPage(pageNum) {\n      this.currentPage = pageNum;\n    },\n  },\n});\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&shadow\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&shadow\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=110190f1&shadow\"\nimport script from \"./App.vue?vue&type=script&lang=ts&shadow\"\nexport * from \"./App.vue?vue&type=script&lang=ts&shadow\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./App.vue?vue&type=style&index=0&lang=css&shadow\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  null\n  ,true\n)\n\nexport default component.exports","import './setPublicPath'\nimport Vue from 'vue'\nimport wrap from '@vue/web-component-wrapper'\n\n// runtime shared by every component chunk\nimport 'css-loader/dist/runtime/api.js'\nimport 'vue-style-loader/lib/addStylesShadow'\nimport 'vue-loader/lib/runtime/componentNormalizer'\n\nimport webcompTourismDetail from '~root/./src/App.vue?shadow'\nwindow.customElements.define('webcomp-tourism-detail', wrap(Vue, webcompTourismDetail))","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#app{font-family:Avenir,Helvetica,Arial,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","'use strict';\n// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\nvar regexNonASCII = /[^\\0-\\u007E]/; // non-ASCII chars\nvar regexSeparators = /[.\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\nvar OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n */\nvar ucs2decode = function (string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  while (counter < length) {\n    var value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      var extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n */\nvar digitToBasic = function (digit) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n */\nvar adapt = function (delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n */\n// eslint-disable-next-line  max-statements\nvar encode = function (input) {\n  var output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  input = ucs2decode(input);\n\n  // Cache the length.\n  var inputLength = input.length;\n\n  // Initialize the state.\n  var n = initialN;\n  var delta = 0;\n  var bias = initialBias;\n  var i, currentValue;\n\n  // Handle the basic code points.\n  for (i = 0; i < input.length; i++) {\n    currentValue = input[i];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  var basicLength = output.length; // number of basic code points.\n  var handledCPCount = basicLength; // number of code points that have been handled;\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next larger one:\n    var m = maxInt;\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.\n    var handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      throw RangeError(OVERFLOW_ERROR);\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        throw RangeError(OVERFLOW_ERROR);\n      }\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer.\n        var q = delta;\n        for (var k = base; /* no condition */; k += base) {\n          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) break;\n          var qMinusT = q - t;\n          var baseMinusT = base - t;\n          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n  }\n  return output.join('');\n};\n\nmodule.exports = function (input) {\n  var encoded = [];\n  var labels = input.toLowerCase().replace(regexSeparators, '\\u002E').split('.');\n  var i, label;\n  for (i = 0; i < labels.length; i++) {\n    label = labels[i];\n    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);\n  }\n  return encoded.join('.');\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\n\nvar nativeAssign = Object.assign;\nvar defineProperty = Object.defineProperty;\n\n// `Object.assign` method\n// https://tc39.github.io/ecma262/#sec-object.assign\nmodule.exports = !nativeAssign || fails(function () {\n  // should have correct order of operations (Edge bug)\n  if (DESCRIPTORS && nativeAssign({ b: 1 }, nativeAssign(defineProperty({}, 'a', {\n    enumerable: true,\n    get: function () {\n      defineProperty(this, 'b', {\n        value: 3,\n        enumerable: false\n      });\n    }\n  }), { b: 2 })).b !== 1) return true;\n  // should work with symbols and should have deterministic property order (V8 bug)\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var symbol = Symbol();\n  var alphabet = 'abcdefghijklmnopqrst';\n  A[symbol] = 7;\n  alphabet.split('').forEach(function (chr) { B[chr] = chr; });\n  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var argumentsLength = arguments.length;\n  var index = 1;\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  var propertyIsEnumerable = propertyIsEnumerableModule.f;\n  while (argumentsLength > index) {\n    var S = IndexedObject(arguments[index++]);\n    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : nativeAssign;\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    metadata.facade = it;\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","export * from \"-!../../node_modules/vue-style-loader/index.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ItemDetail.vue?vue&type=style&index=0&id=4728067b&lang=scss&scoped=true&\"","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  var state;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) {\n      createNonEnumerableProperty(value, 'name', key);\n    }\n    state = enforceInternalState(value);\n    if (!state.source) {\n      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');\n    }\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","exports.f = Object.getOwnPropertySymbols;\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","module.exports = __webpack_public_path__ + \"img/ic_distanceduration.440a9a50.svg\";","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".paging[data-v-356619ac]{display:flex;width:100%;justify-content:center;margin-top:40px;margin-bottom:40px}.item[data-v-356619ac]{padding-right:4px;padding-left:4px}.item[data-v-356619ac]:hover{cursor:pointer}.selected-item[data-v-356619ac]{color:#2980b9}.back[data-v-356619ac]{margin-right:20px}.back[data-v-356619ac]:hover,.next[data-v-356619ac]:hover{cursor:pointer}.next[data-v-356619ac]{margin-left:20px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","// addapted from the document.currentScript polyfill by Adam Miller\n// MIT license\n// source: https://github.com/amiller-gh/currentScript-polyfill\n\n// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.getCurrentScript = factory();\n  }\n}(typeof self !== 'undefined' ? self : this, function () {\n  function getCurrentScript () {\n    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')\n    // for chrome\n    if (!descriptor && 'currentScript' in document && document.currentScript) {\n      return document.currentScript\n    }\n\n    // for other browsers with native support for currentScript\n    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {\n      return document.currentScript\n    }\n  \n    // IE 8-10 support script readyState\n    // IE 11+ & Firefox support stack trace\n    try {\n      throw new Error();\n    }\n    catch (err) {\n      // Find the second match for the \"at\" string to get file src url from stack.\n      var ieStackRegExp = /.*at [^(]*\\((.*):(.+):(.+)\\)$/ig,\n        ffStackRegExp = /@([^@]*):(\\d+):(\\d+)\\s*$/ig,\n        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),\n        scriptLocation = (stackDetails && stackDetails[1]) || false,\n        line = (stackDetails && stackDetails[2]) || false,\n        currentLocation = document.location.href.replace(document.location.hash, ''),\n        pageSource,\n        inlineScriptSourceRegExp,\n        inlineScriptSource,\n        scripts = document.getElementsByTagName('script'); // Live NodeList collection\n  \n      if (scriptLocation === currentLocation) {\n        pageSource = document.documentElement.outerHTML;\n        inlineScriptSourceRegExp = new RegExp('(?:[^\\\\n]+?\\\\n){0,' + (line - 2) + '}[^<]*<script>([\\\\d\\\\D]*?)<\\\\/script>[\\\\d\\\\D]*', 'i');\n        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();\n      }\n  \n      for (var i = 0; i < scripts.length; i++) {\n        // If ready state is interactive, return the script tag\n        if (scripts[i].readyState === 'interactive') {\n          return scripts[i];\n        }\n  \n        // If src matches, return the script tag\n        if (scripts[i].src === scriptLocation) {\n          return scripts[i];\n        }\n  \n        // If inline source matches, return the script tag\n        if (\n          scriptLocation === currentLocation &&\n          scripts[i].innerHTML &&\n          scripts[i].innerHTML.trim() === inlineScriptSource\n        ) {\n          return scripts[i];\n        }\n      }\n  \n      // If no match, return null\n      return null;\n    }\n  };\n\n  return getCurrentScript\n}));\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","module.exports = Vue;","module.exports = __webpack_public_path__ + \"img/ic_map.e3e40dfd.svg\";","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.array.iterator');\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar InternalStateModule = require('../internals/internal-state');\nvar anInstance = require('../internals/an-instance');\nvar hasOwn = require('../internals/has');\nvar bind = require('../internals/function-bind-context');\nvar classof = require('../internals/classof');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $fetch = getBuiltIn('fetch');\nvar Headers = getBuiltIn('Headers');\nvar ITERATOR = wellKnownSymbol('iterator');\nvar URL_SEARCH_PARAMS = 'URLSearchParams';\nvar URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);\nvar getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);\n\nvar plus = /\\+/g;\nvar sequences = Array(4);\n\nvar percentSequence = function (bytes) {\n  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\\\da-f]{2}){' + bytes + '})', 'gi'));\n};\n\nvar percentDecode = function (sequence) {\n  try {\n    return decodeURIComponent(sequence);\n  } catch (error) {\n    return sequence;\n  }\n};\n\nvar deserialize = function (it) {\n  var result = it.replace(plus, ' ');\n  var bytes = 4;\n  try {\n    return decodeURIComponent(result);\n  } catch (error) {\n    while (bytes) {\n      result = result.replace(percentSequence(bytes--), percentDecode);\n    }\n    return result;\n  }\n};\n\nvar find = /[!'()~]|%20/g;\n\nvar replace = {\n  '!': '%21',\n  \"'\": '%27',\n  '(': '%28',\n  ')': '%29',\n  '~': '%7E',\n  '%20': '+'\n};\n\nvar replacer = function (match) {\n  return replace[match];\n};\n\nvar serialize = function (it) {\n  return encodeURIComponent(it).replace(find, replacer);\n};\n\nvar parseSearchParams = function (result, query) {\n  if (query) {\n    var attributes = query.split('&');\n    var index = 0;\n    var attribute, entry;\n    while (index < attributes.length) {\n      attribute = attributes[index++];\n      if (attribute.length) {\n        entry = attribute.split('=');\n        result.push({\n          key: deserialize(entry.shift()),\n          value: deserialize(entry.join('='))\n        });\n      }\n    }\n  }\n};\n\nvar updateSearchParams = function (query) {\n  this.entries.length = 0;\n  parseSearchParams(this.entries, query);\n};\n\nvar validateArgumentsLength = function (passed, required) {\n  if (passed < required) throw TypeError('Not enough arguments');\n};\n\nvar URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {\n  setInternalState(this, {\n    type: URL_SEARCH_PARAMS_ITERATOR,\n    iterator: getIterator(getInternalParamsState(params).entries),\n    kind: kind\n  });\n}, 'Iterator', function next() {\n  var state = getInternalIteratorState(this);\n  var kind = state.kind;\n  var step = state.iterator.next();\n  var entry = step.value;\n  if (!step.done) {\n    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];\n  } return step;\n});\n\n// `URLSearchParams` constructor\n// https://url.spec.whatwg.org/#interface-urlsearchparams\nvar URLSearchParamsConstructor = function URLSearchParams(/* init */) {\n  anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n  var init = arguments.length > 0 ? arguments[0] : undefined;\n  var that = this;\n  var entries = [];\n  var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;\n\n  setInternalState(that, {\n    type: URL_SEARCH_PARAMS,\n    entries: entries,\n    updateURL: function () { /* empty */ },\n    updateSearchParams: updateSearchParams\n  });\n\n  if (init !== undefined) {\n    if (isObject(init)) {\n      iteratorMethod = getIteratorMethod(init);\n      if (typeof iteratorMethod === 'function') {\n        iterator = iteratorMethod.call(init);\n        next = iterator.next;\n        while (!(step = next.call(iterator)).done) {\n          entryIterator = getIterator(anObject(step.value));\n          entryNext = entryIterator.next;\n          if (\n            (first = entryNext.call(entryIterator)).done ||\n            (second = entryNext.call(entryIterator)).done ||\n            !entryNext.call(entryIterator).done\n          ) throw TypeError('Expected sequence with length 2');\n          entries.push({ key: first.value + '', value: second.value + '' });\n        }\n      } else for (key in init) if (hasOwn(init, key)) entries.push({ key: key, value: init[key] + '' });\n    } else {\n      parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');\n    }\n  }\n};\n\nvar URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;\n\nredefineAll(URLSearchParamsPrototype, {\n  // `URLSearchParams.prototype.append` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-append\n  append: function append(name, value) {\n    validateArgumentsLength(arguments.length, 2);\n    var state = getInternalParamsState(this);\n    state.entries.push({ key: name + '', value: value + '' });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.delete` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete\n  'delete': function (name) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index].key === key) entries.splice(index, 1);\n      else index++;\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.get` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-get\n  get: function get(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) return entries[index].value;\n    }\n    return null;\n  },\n  // `URLSearchParams.prototype.getAll` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall\n  getAll: function getAll(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var result = [];\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) result.push(entries[index].value);\n    }\n    return result;\n  },\n  // `URLSearchParams.prototype.has` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-has\n  has: function has(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index++].key === key) return true;\n    }\n    return false;\n  },\n  // `URLSearchParams.prototype.set` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-set\n  set: function set(name, value) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var found = false;\n    var key = name + '';\n    var val = value + '';\n    var index = 0;\n    var entry;\n    for (; index < entries.length; index++) {\n      entry = entries[index];\n      if (entry.key === key) {\n        if (found) entries.splice(index--, 1);\n        else {\n          found = true;\n          entry.value = val;\n        }\n      }\n    }\n    if (!found) entries.push({ key: key, value: val });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.sort` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort\n  sort: function sort() {\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    // Array#sort is not stable in some engines\n    var slice = entries.slice();\n    var entry, entriesIndex, sliceIndex;\n    entries.length = 0;\n    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {\n      entry = slice[sliceIndex];\n      for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {\n        if (entries[entriesIndex].key > entry.key) {\n          entries.splice(entriesIndex, 0, entry);\n          break;\n        }\n      }\n      if (entriesIndex === sliceIndex) entries.push(entry);\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.forEach` method\n  forEach: function forEach(callback /* , thisArg */) {\n    var entries = getInternalParamsState(this).entries;\n    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var index = 0;\n    var entry;\n    while (index < entries.length) {\n      entry = entries[index++];\n      boundFunction(entry.value, entry.key, this);\n    }\n  },\n  // `URLSearchParams.prototype.keys` method\n  keys: function keys() {\n    return new URLSearchParamsIterator(this, 'keys');\n  },\n  // `URLSearchParams.prototype.values` method\n  values: function values() {\n    return new URLSearchParamsIterator(this, 'values');\n  },\n  // `URLSearchParams.prototype.entries` method\n  entries: function entries() {\n    return new URLSearchParamsIterator(this, 'entries');\n  }\n}, { enumerable: true });\n\n// `URLSearchParams.prototype[@@iterator]` method\nredefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);\n\n// `URLSearchParams.prototype.toString` method\n// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\nredefine(URLSearchParamsPrototype, 'toString', function toString() {\n  var entries = getInternalParamsState(this).entries;\n  var result = [];\n  var index = 0;\n  var entry;\n  while (index < entries.length) {\n    entry = entries[index++];\n    result.push(serialize(entry.key) + '=' + serialize(entry.value));\n  } return result.join('&');\n}, { enumerable: true });\n\nsetToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n\n$({ global: true, forced: !USE_NATIVE_URL }, {\n  URLSearchParams: URLSearchParamsConstructor\n});\n\n// Wrap `fetch` for correct work with polyfilled `URLSearchParams`\n// https://github.com/zloirock/core-js/issues/674\nif (!USE_NATIVE_URL && typeof $fetch == 'function' && typeof Headers == 'function') {\n  $({ global: true, enumerable: true, forced: true }, {\n    fetch: function fetch(input /* , init */) {\n      var args = [input];\n      var init, body, headers;\n      if (arguments.length > 1) {\n        init = arguments[1];\n        if (isObject(init)) {\n          body = init.body;\n          if (classof(body) === URL_SEARCH_PARAMS) {\n            headers = init.headers ? new Headers(init.headers) : new Headers();\n            if (!headers.has('content-type')) {\n              headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n            }\n            init = create(init, {\n              body: createPropertyDescriptor(0, String(body)),\n              headers: createPropertyDescriptor(0, headers)\n            });\n          }\n        }\n        args.push(init);\n      } return $fetch.apply(this, args);\n    }\n  });\n}\n\nmodule.exports = {\n  URLSearchParams: URLSearchParamsConstructor,\n  getState: getInternalParamsState\n};\n","var anObject = require('../internals/an-object');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (it) {\n  var iteratorMethod = getIteratorMethod(it);\n  if (typeof iteratorMethod != 'function') {\n    throw TypeError(String(it) + ' is not iterable');\n  } return anObject(iteratorMethod.call(it));\n};\n","var anObject = require('../internals/an-object');\nvar iteratorClose = require('../internals/iterator-close');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    iteratorClose(iterator);\n    throw error;\n  }\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","module.exports = __webpack_public_path__ + \"img/ic_external-link.bb64ec3c.svg\";","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","module.exports = __webpack_public_path__ + \"img/arrow_right.188ecc3c.svg\";","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".list-item[data-v-0223482d]{display:flex;flex-direction:row;padding:8px 40px 8px 40px;align-items:center}.thumbnail[data-v-0223482d]{min-height:60px;min-width:60px;max-width:60px;max-height:60px;background-color:#e8ecf1;-o-object-fit:cover;object-fit:cover}.info[data-v-0223482d]{display:flex;flex-direction:column;flex-grow:1;padding-left:24px}hr.solid[data-v-0223482d]{border-top:1px solid #e8ecf1;margin:8px 40px 8px 40px}.title[data-v-0223482d]{font-size:18px;font-weight:700}.short-info[data-v-0223482d]{font-size:14px;word-break:break-word;color:#888}.page-title[data-v-0223482d]{font-weight:700;font-size:36px;padding-left:40px;padding-right:40px;width:100%;text-overflow:ellipsis;overflow:hidden}.list[data-v-0223482d]{flex-direction:row;flex-wrap:wrap}.item-container[data-v-0223482d],.list[data-v-0223482d]{display:flex;width:100%}.item-container[data-v-0223482d]{flex-direction:column;cursor:pointer}.bottom-divider[data-v-0223482d]{width:100%}.bottom-divider2[data-v-0223482d]{visibility:hidden}@media (min-width:768px){.bottom-divider[data-v-0223482d],.item-container[data-v-0223482d]{width:50%}.bottom-divider2[data-v-0223482d]{visibility:visible}}.loading-spinner[data-v-0223482d]{height:50vh;width:100%;display:flex;justify-content:center;align-items:center}.noResult[data-v-0223482d]{margin-left:40px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","module.exports = __webpack_public_path__ + \"img/Activity-Placeholder.653f3c0c.svg\";","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];\n    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","module.exports = __webpack_public_path__ + \"img/arrow_left.42b75e2b.svg\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ItemDetail.vue?vue&type=style&index=0&id=4728067b&lang=scss&scoped=true&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to Shadow Root\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesShadow.js\").default\nmodule.exports.__inject__ = function (shadowRoot) {\n  add(\"5768a6f6\", content, shadowRoot)\n};","module.exports = require('./lib/axios');","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","module.exports = false;\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","module.exports = __webpack_public_path__ + \"img/ic_altitudedifference.5f06b2e9.svg\";","module.exports = {};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","module.exports = __webpack_public_path__ + \"img/ic_distancelength.f56325fd.svg\";","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func\n  (function () { return this; })() || Function('return this')();\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","export * from \"-!../../node_modules/vue-style-loader/index.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ItemsList.vue?vue&type=style&index=0&id=0223482d&scoped=true&lang=css&\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&shadow\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to Shadow Root\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesShadow.js\").default\nmodule.exports.__inject__ = function (shadowRoot) {\n  add(\"fc0952da\", content, shadowRoot)\n};","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","module.exports = __webpack_public_path__ + \"img/loading.7b330de3.gif\";","module.exports = __webpack_public_path__ + \"img/POI-Placeholder.4bd4602b.svg\";","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".item>div[data-v-4728067b]{margin-bottom:1rem}.title[data-v-4728067b]{background-color:#e8ecf1;padding:2rem;opacity:.8;max-width:100%;max-height:400px}h2[data-v-4728067b]{margin-bottom:2px}.detail-box[data-v-4728067b]{border:1px solid #e8ecf1;padding:2rem}.additional-props-box[data-v-4728067b]{padding:2rem;background-color:#e8ecf1}.props[data-v-4728067b]{list-style:none;padding:0;margin:0;font-style:italic}.props[data-v-4728067b]:not(.single){-moz-columns:1;columns:1}@media(min-width:768px){.props[data-v-4728067b]:not(.single){-moz-columns:2;columns:2}}@media(min-width:992px){.props[data-v-4728067b]:not(.single){-moz-columns:3;columns:3}}.props>li[data-v-4728067b]{padding:.2rem 0}.props img[data-v-4728067b]{height:16px;width:16px;margin-right:.7em}.props a[data-v-4728067b]{color:#2980b9;text-decoration:none}.props .prop-key[data-v-4728067b]{color:#888;padding-right:4px}.subtitle[data-v-4728067b]{color:#212529;font-size:18px;font-weight:700;padding-top:4px;padding-bottom:4px}.subtype[data-v-4728067b]{padding-top:4px}.categories[data-v-4728067b],.subtype[data-v-4728067b]{padding-bottom:8px}.gastronomyTypes[data-v-4728067b]{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center}.category[data-v-4728067b]{padding:4px 12px 4px 12px;margin-right:8px;margin-top:8px;height:30px;border:1px solid #e8ecf1;border-radius:30px;opacity:1;text-align:center;align-items:center;display:flex;color:#cfcfcf}ul[data-v-4728067b]{-webkit-padding-start:0;padding-inline-start:0;margin:0}.text[data-v-4728067b]{color:#949494}.text-dark[data-v-4728067b]{color:#2e3131}.image[data-v-4728067b]{padding-right:8px;padding-top:8px}.image[data-v-4728067b],.title-image[data-v-4728067b]{-o-object-fit:cover;object-fit:cover}.title-image[data-v-4728067b]{max-height:400px;width:100%}.title-container[data-v-4728067b]{display:flex;flex-direction:column;justify-content:flex-end;margin-bottom:0!important;overflow:hidden}.info-item[data-v-4728067b]{flex-direction:row}.back-button[data-v-4728067b],.info-item[data-v-4728067b]{display:flex;align-items:center}.back-button[data-v-4728067b]{padding-bottom:4px;cursor:pointer}h1[data-v-4728067b]{font-size:36px;overflow-wrap:break-word;-webkit-hyphens:auto;-ms-hyphens:auto;hyphens:auto}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  // eslint-disable-next-line no-undef\n  && !Symbol.sham\n  // eslint-disable-next-line no-undef\n  && typeof Symbol.iterator == 'symbol';\n"],"sourceRoot":""}